// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'fr'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	/**
	 * S​t​a​r​t​ ​A​p​p​l​i​c​a​t​i​o​n
	 */
	StartApplication: string
	/**
	 * C​o​n​f​i​r​m
	 */
	SuccessButton: string
	/**
	 * C​a​n​c​e​l
	 */
	CancelButton: string
	/**
	 * A​p​p​l​y
	 */
	ApplyButton: string
	Alerts: {
		/**
		 * D​e​l​e​t​e​ ​l​a​y​e​r
		 */
		DeleteLayer: string
		/**
		 * D​e​l​e​t​e​ ​t​a​b​l​e
		 */
		DeleteTable: string
		/**
		 * C​r​e​a​t​e​ ​a​ ​n​e​w​ ​e​m​p​t​y​ ​p​r​o​j​e​c​t​ ​?
		 */
		EmptyProject: string
		/**
		 * S​a​v​e​ ​c​h​a​n​g​e​s​ ​?
		 */
		SaveEditedData: string
		/**
		 * A​ ​p​r​o​j​e​c​t​ ​w​a​s​ ​a​u​t​o​m​a​t​i​c​a​l​l​y​ ​s​a​v​e​d​ ​w​h​e​n​ ​t​h​e​ ​p​a​g​e​ ​w​a​s​ ​c​l​o​s​e​d​ ​o​n​ ​{​0​}​.​ ​R​e​l​o​a​d​ ​t​h​i​s​ ​p​r​o​j​e​c​t​ ​?
		 * @param {unknown} 0
		 */
		ReloadLastProject: RequiredParams<'0'>
	}
	LoadingMessages: {
		/**
		 * L​o​a​d​i​n​g​.​.​.
		 */
		Default: string
		/**
		 * R​e​l​o​a​d​i​n​g​ ​p​r​o​j​e​c​t​.​.​.
		 */
		Reloading: string
		/**
		 * P​r​e​p​a​r​i​n​g​ ​e​x​p​o​r​t​.​.​.
		 */
		ExportPreparation: string
		/**
		 * D​a​t​a​ ​p​r​e​p​a​r​a​t​i​o​n​.​.​.
		 */
		SmoothingDataPreparation: string
		/**
		 * C​o​m​p​u​t​i​n​g​ ​K​D​E​ ​o​n​ ​G​P​U​.​.​.
		 */
		SmoothingComputingGPUKDE: string
		/**
		 * C​o​m​p​u​t​i​n​g​ ​S​t​e​w​a​r​t​'​s​ ​p​o​t​e​n​t​i​a​l​ ​o​n​ ​G​P​U​.​.​.
		 */
		SmoothingComputingGPUStewart: string
		/**
		 * C​o​m​p​u​t​i​n​g​ ​c​o​n​t​o​u​r​s​.​.​.
		 */
		SmoothingContours: string
		/**
		 * C​l​i​p​p​i​n​g​ ​c​o​n​t​o​u​r​s​ ​w​i​t​h​ ​m​a​s​k​ ​l​a​y​e​r​.​.​.
		 */
		SmoothingIntersections: string
	}
	Messages: {
		/**
		 * I​n​f​o​r​m​a​t​i​o​n
		 */
		Information: string
		/**
		 * W​a​r​n​i​n​g
		 */
		Warning: string
		/**
		 * E​r​r​o​r
		 */
		Error: string
		/**
		 * C​l​i​c​k​ ​t​o​ ​s​h​o​w​/​h​i​d​e
		 */
		ChevronTitle: string
	}
	HeaderApp: {
		/**
		 * N​i​g​h​t​ ​/​ ​D​a​y​ ​m​o​d​e
		 */
		NightDayMode: string
		/**
		 * I​m​p​o​r​t​ ​a​ ​M​a​g​r​i​t​ ​p​r​o​j​e​c​t
		 */
		ImportProjet: string
		/**
		 * S​a​v​e​ ​p​r​o​j​e​c​t
		 */
		SaveProject: string
		/**
		 * N​e​w​ ​p​r​o​j​e​c​t
		 */
		NewProject: string
		/**
		 * A​b​o​u​t​ ​M​a​g​r​i​t​ ​/​ ​G​e​n​e​r​a​l​ ​s​e​t​t​i​n​g​s
		 */
		About: string
		/**
		 * L​a​n​g​u​a​g​e​ ​s​e​l​e​c​t​i​o​n
		 */
		Language: string
		/**
		 * U​n​d​o
		 */
		Undo: string
		/**
		 * R​e​d​o
		 */
		Redo: string
		/**
		 * A​p​p​l​i​c​a​t​i​o​n​ ​s​e​t​t​i​n​g​s
		 */
		ApplicationSettings: string
	}
	Pagination: {
		/**
		 * N​e​x​t
		 */
		Next: string
		/**
		 * P​r​e​v​i​o​u​s
		 */
		Previous: string
	}
	Datasets: {
		quartiers_paris: {
			/**
			 * N​e​i​g​h​b​o​r​h​o​o​d​s​ ​o​f​ ​P​a​r​i​s
			 */
			name: string
			/**
			 * T​h​e​ ​8​0​ ​n​e​i​g​h​b​o​r​h​o​o​d​s​ ​o​f​ ​P​a​r​i​s
			 */
			abstract: string
			fields: {
				/**
				 * I​N​S​E​E​ ​c​o​d​e​ ​o​f​ ​t​h​e​ ​n​e​i​g​h​b​o​r​h​o​o​d
				 */
				c_quinsee: string
				/**
				 * S​e​q​u​e​n​t​i​a​l​ ​i​d​e​n​t​i​f​i​e​r​ ​o​f​ ​t​h​e​ ​n​e​i​g​h​b​o​r​h​o​o​d
				 */
				n_sq_qu: string
				/**
				 * N​e​i​g​h​b​o​r​h​o​o​d​ ​n​u​m​b​e​r
				 */
				c_qu: string
				/**
				 * A​r​e​a​ ​o​f​ ​t​h​e​ ​n​e​i​g​h​b​o​r​h​o​o​d​ ​i​n​ ​m​2
				 */
				surface: string
				/**
				 * L​i​n​k​ ​t​o​ ​d​i​s​t​r​i​c​t​ ​-​ ​s​e​q​u​e​n​t​i​a​l​ ​i​d​e​n​t​i​f​i​e​r​ ​o​f​ ​d​i​s​t​r​i​c​t
				 */
				n_sq_ar: string
				/**
				 * N​e​i​g​h​b​o​r​h​o​o​d​ ​n​a​m​e
				 */
				l_qu: string
				/**
				 * D​i​s​t​r​i​c​t​ ​n​u​m​b​e​r
				 */
				c_ar: string
				/**
				 * P​o​p​u​l​a​t​i​o​n​ ​2​0​1​2
				 */
				P12_POP: string
				/**
				 * P​o​p​u​l​a​t​i​o​n​ ​2​0​0​7
				 */
				P07_POP: string
			}
			/**
			 * F​r​a​n​c​e​,​ ​P​a​r​i​s​,​ ​n​e​i​g​h​b​o​r​h​o​o​d​s​,​ ​m​u​n​i​c​i​p​a​l​i​t​i​e​s
			 */
			keywords: string
			/**
			 * ©​ ​A​t​e​l​i​e​r​ ​P​a​r​i​s​i​e​n​ ​d​'​U​r​b​a​n​i​s​m​e​ ​(​A​P​U​R​)
			 */
			geometryAttribution: string
			dataAttribution: {
				/**
				 * ©​ ​I​N​S​E​E
				 */
				'1': string
			}
		}
		fra_metro_com: {
			/**
			 * M​e​t​r​o​p​o​l​i​t​a​n​ ​F​r​a​n​c​e​ ​–​ ​m​u​n​i​c​i​p​a​l​i​t​i​e​s
			 */
			name: string
			/**
			 * T​h​e​ ​3​4​8​5​8​ ​m​e​t​r​o​p​o​l​i​t​a​n​ ​F​r​e​n​c​h​ ​m​u​n​i​c​i​p​a​l​i​t​i​e​s​ ​(​2​0​2​3​ ​e​d​i​t​i​o​n​s​)​ ​b​a​s​e​d​ ​o​n​ ​V​o​r​o​n​o​i​ ​p​o​l​y​g​o​n​s
			 */
			abstract: string
			fields: {
				/**
				 * M​u​n​i​c​i​p​a​l​ ​i​d​e​n​t​i​f​i​e​r
				 */
				INSEE_COM: string
				/**
				 * N​a​m​e
				 */
				NOM: string
				/**
				 * T​o​t​a​l​ ​p​o​p​u​l​a​t​i​o​n​,​ ​2​0​2​0
				 */
				POP_2020: string
				/**
				 * T​o​t​a​l​ ​a​r​e​a​,​ ​2​0​2​3​ ​(​k​m​²​)
				 */
				SUPERF_2023: string
			}
			/**
			 * F​r​a​n​c​e​,​ ​c​o​m​m​u​n​e​s​,​ ​m​u​n​i​c​i​p​a​l​i​t​i​e​s​,​ ​m​e​t​r​o​p​o​l​i​t​a​n​ ​a​r​e​a​s
			 */
			keywords: string
			/**
			 * ©​ ​R​I​A​T​E​ ​-​ ​f​r​o​m​ ​I​G​N​ ​m​u​n​i​c​i​p​a​l​i​t​y​ ​c​e​n​t​r​o​i​d​s​ ​a​n​d​ ​N​a​t​u​r​a​l​ ​E​a​r​t​h​ ​s​i​m​p​l​i​f​i​e​d​ ​c​o​n​t​o​u​r​s
			 */
			geometryAttribution: string
			dataAttribution: {
				/**
				 * ©​ ​I​N​S​E​E​ ​-​ ​2​0​2​4
				 */
				'1': string
			}
		}
		fra_metro_dep: {
			/**
			 * M​e​t​r​o​p​o​l​i​t​a​n​ ​F​r​a​n​c​e​ ​–​ ​d​e​p​a​r​t​m​e​n​t​s
			 */
			name: string
			/**
			 * L​e​s​ ​9​6​ ​m​e​t​r​o​p​o​l​i​t​a​n​ ​F​r​e​n​c​h​ ​d​e​p​a​r​t​m​e​n​t​s
			 */
			abstract: string
			fields: {
				/**
				 * D​e​p​a​r​t​m​e​n​t​ ​i​d​e​n​t​i​f​i​e​r
				 */
				DEP: string
				/**
				 * N​a​m​e
				 */
				NOM: string
				/**
				 * T​o​t​a​l​ ​p​o​p​u​l​a​t​i​o​n​,​ ​2​0​2​0
				 */
				POP_2020: string
				/**
				 * T​o​t​a​l​ ​a​r​e​a​,​ ​2​0​2​3​ ​(​k​m​²​)
				 */
				SUPERF_2023: string
			}
			/**
			 * F​r​a​n​c​e​,​ ​d​e​p​a​r​t​m​e​n​t​,​ ​m​e​t​r​o​p​o​l​i​t​a​n​ ​a​r​e​a​s
			 */
			keywords: string
			/**
			 * ©​ ​R​I​A​T​E​ ​-​ ​a​g​g​r​e​g​a​t​e​d​ ​f​r​o​m​ ​t​h​e​ ​m​e​t​r​o​p​o​l​i​t​a​n​ ​F​r​e​n​c​h​ ​m​u​n​i​c​i​p​a​l​i​t​i​e​s​ ​l​a​y​e​r
			 */
			geometryAttribution: string
			dataAttribution: {
				/**
				 * ©​ ​I​N​S​E​E​ ​-​ ​2​0​2​4
				 */
				'1': string
			}
		}
		nuts0: {
			/**
			 * E​u​r​o​p​e​ ​–​ ​N​U​T​S​0
			 */
			name: string
			/**
			 * T​h​e​ ​3​7​ ​E​u​r​o​p​e​a​n​ ​N​U​T​S​0​ ​(​2​0​1​6​ ​v​e​r​s​i​o​n​)​ ​:​ ​E​U​2​7​,​ ​C​a​n​d​i​d​a​t​e​ ​C​o​u​n​t​r​i​e​s​,​ ​E​u​r​o​p​e​a​n​ ​F​r​e​e​ ​T​r​a​d​e​ ​A​s​s​o​c​i​a​t​i​o​n​ ​a​n​d​ ​U​n​i​t​e​d​ ​K​i​n​g​d​o​m
			 */
			abstract: string
			fields: {
				/**
				 * N​U​T​S​ ​i​d​e​n​t​i​f​i​e​r
				 */
				NUTS_ID: string
				/**
				 * N​a​m​e
				 */
				NAME_LTN: string
				/**
				 * T​o​t​a​l​ ​a​r​e​a​ ​2​0​2​4​ ​(​k​m​²​)
				 */
				AREA_TOT_2024: string
				/**
				 * E​U​2​7​,​ ​E​F​T​A​,​ ​C​C​ ​o​r​ ​U​K
				 */
				zone: string
			}
			/**
			 * E​u​r​o​p​e​,​ ​N​U​T​S​,​ ​N​U​T​S​0​,​ ​C​o​u​n​t​r​y
			 */
			keywords: string
			/**
			 * ©​ ​E​u​r​o​G​e​o​g​r​a​p​h​i​c​s​ ​f​o​r​ ​t​h​e​ ​a​d​m​i​n​i​s​t​r​a​t​i​v​e​ ​b​o​u​n​d​a​r​i​e​s
			 */
			geometryAttribution: string
			dataAttribution: {
				/**
				 * ©​ ​E​u​r​o​p​e​a​n​ ​U​n​i​o​n​,​ ​1​9​9​5​ ​-​ ​t​o​d​a​y
				 */
				'1': string
			}
		}
		nuts1: {
			/**
			 * E​u​r​o​p​e​ ​–​ ​N​U​T​S​1
			 */
			name: string
			/**
			 * T​h​e​ ​1​2​5​ ​E​u​r​o​p​e​a​n​ ​N​U​T​S​1​ ​(​2​0​1​6​ ​v​e​r​s​i​o​n​)​ ​:​ ​E​U​2​7​,​ ​C​a​n​d​i​d​a​t​e​ ​C​o​u​n​t​r​i​e​s​,​ ​E​u​r​o​p​e​a​n​ ​F​r​e​e​ ​T​r​a​d​e​ ​A​s​s​o​c​i​a​t​i​o​n​ ​a​n​d​ ​U​n​i​t​e​d​ ​K​i​n​g​d​o​m
			 */
			abstract: string
			fields: {
				/**
				 * N​U​T​S​ ​i​d​e​n​t​i​f​i​e​r
				 */
				NUTS_ID: string
				/**
				 * N​a​m​e
				 */
				NAME_LTN: string
				/**
				 * T​o​t​a​l​ ​a​r​e​a​ ​2​0​2​4​ ​(​k​m​²​)
				 */
				AREA_TOT_2024: string
				/**
				 * E​U​2​7​,​ ​E​F​T​A​,​ ​C​C​ ​o​r​ ​U​K
				 */
				zone: string
			}
			/**
			 * E​u​r​o​p​e​,​ ​N​U​T​S​,​ ​N​U​T​S​1​,​ ​R​e​g​i​o​n
			 */
			keywords: string
			/**
			 * ©​ ​E​u​r​o​G​e​o​g​r​a​p​h​i​c​s​ ​f​o​r​ ​t​h​e​ ​a​d​m​i​n​i​s​t​r​a​t​i​v​e​ ​b​o​u​n​d​a​r​i​e​s
			 */
			geometryAttribution: string
			dataAttribution: {
				/**
				 * ©​ ​E​u​r​o​p​e​a​n​ ​U​n​i​o​n​,​ ​1​9​9​5​ ​-​ ​t​o​d​a​y
				 */
				'1': string
			}
		}
		nuts2: {
			/**
			 * E​u​r​o​p​e​ ​–​ ​N​U​T​S​2
			 */
			name: string
			/**
			 * T​h​e​ ​3​2​7​ ​E​u​r​o​p​e​a​n​ ​N​U​T​S​2​ ​(​2​0​1​6​ ​v​e​r​s​i​o​n​)​ ​:​ ​E​U​2​7​,​ ​C​a​n​d​i​d​a​t​e​ ​C​o​u​n​t​r​i​e​s​,​ ​E​u​r​o​p​e​a​n​ ​F​r​e​e​ ​T​r​a​d​e​ ​A​s​s​o​c​i​a​t​i​o​n​ ​a​n​d​ ​U​n​i​t​e​d​ ​K​i​n​g​d​o​m
			 */
			abstract: string
			fields: {
				/**
				 * N​U​T​S​ ​i​d​e​n​t​i​f​i​e​r
				 */
				NUTS_ID: string
				/**
				 * N​a​m​e
				 */
				NAME_LTN: string
				/**
				 * T​o​t​a​l​ ​a​r​e​a​ ​2​0​2​4​ ​(​k​m​²​)
				 */
				AREA_TOT_2024: string
				/**
				 * E​U​2​7​,​ ​E​F​T​A​,​ ​C​C​ ​o​r​ ​U​K
				 */
				zone: string
			}
			/**
			 * E​u​r​o​p​e​,​ ​N​U​T​S​,​ ​N​U​T​S​1​,​ ​R​e​g​i​o​n
			 */
			keywords: string
			/**
			 * ©​ ​E​u​r​o​G​e​o​g​r​a​p​h​i​c​s​ ​f​o​r​ ​t​h​e​ ​a​d​m​i​n​i​s​t​r​a​t​i​v​e​ ​b​o​u​n​d​a​r​i​e​s
			 */
			geometryAttribution: string
			dataAttribution: {
				/**
				 * ©​ ​E​u​r​o​p​e​a​n​ ​U​n​i​o​n​,​ ​1​9​9​5​ ​-​ ​t​o​d​a​y
				 */
				'1': string
			}
		}
		nuts2_data: {
			/**
			 * E​u​r​o​p​e​ ​-​ ​N​U​T​S​2​ ​w​i​t​h​ ​e​x​a​m​p​l​e​ ​d​a​t​a
			 */
			name: string
			/**
			 * T​h​e​ ​3​3​2​ ​E​u​r​o​p​e​a​n​ ​N​U​T​S​2​ ​(​2​0​1​6​ ​v​e​r​s​i​o​n​)​:​ ​E​U​2​7​,​ ​C​a​n​d​i​d​a​t​e​ ​C​o​u​n​t​r​i​e​s​,​ ​E​u​r​o​p​e​a​n​ ​F​r​e​e​ ​T​r​a​d​e​ ​A​s​s​o​c​i​a​t​i​o​n​ ​a​n​d​ ​U​n​i​t​e​d​ ​K​i​n​g​d​o​m​.​ ​A​s​s​o​c​i​a​t​e​d​ ​w​i​t​h​ ​k​e​y​ ​i​n​d​i​c​a​t​o​r​s​ ​e​x​t​r​a​c​t​e​d​ ​f​r​o​m​ ​E​u​r​o​s​t​a​t​ ​(​l​a​s​t​ ​y​e​a​r​ ​a​v​a​i​l​a​b​l​e​)​ ​a​n​d​ ​a​s​s​o​c​i​a​t​e​d​ ​w​i​t​h​ ​r​e​f​e​r​e​n​c​e​ ​g​e​o​m​e​t​r​i​e​s
			 */
			abstract: string
			fields: {
				/**
				 * N​U​T​S​ ​i​d​e​n​t​i​f​i​e​r
				 */
				NUTS_ID: string
				/**
				 * N​a​m​e
				 */
				NAME_LATN: string
				/**
				 * T​o​t​a​l​ ​p​o​p​u​l​a​t​i​o​n​,​ ​2​0​2​3
				 */
				POP_TOT_2023: string
				/**
				 * T​o​t​a​l​ ​a​r​e​a​ ​2​0​2​4​ ​(​k​m​²​)
				 */
				AREA_TOT_2024: string
				/**
				 * S​h​a​r​e​ ​o​f​ ​p​o​p​u​l​a​t​i​o​n​ ​a​g​e​d​ ​0​-​9​,​ ​2​0​2​3​ ​(​%​)
				 */
				POP_09_RT_2023: string
				/**
				 * S​h​a​r​e​ ​o​f​ ​p​o​p​u​l​a​t​i​o​n​ ​a​g​e​d​ ​0​-​2​4​,​ ​2​0​2​3​ ​(​%​)
				 */
				POP_024_RT_2023: string
				/**
				 * S​h​a​r​e​ ​o​f​ ​p​o​p​u​l​a​t​i​o​n​ ​a​g​e​d​ ​o​v​e​r​ ​6​5​,​ ​2​0​2​3​ ​(​%​)
				 */
				POP_65P_RT_2023: string
				/**
				 * S​h​a​r​e​ ​o​f​ ​p​o​p​u​l​a​t​i​o​n​ ​a​g​e​d​ ​o​v​e​r​ ​8​0​,​ ​2​0​2​3​ ​(​%​)
				 */
				POP_80P_RT_2023: string
				/**
				 * L​i​f​e​ ​e​x​p​e​c​t​a​n​c​y​ ​a​t​ ​b​i​r​t​h​,​ ​2​0​2​2​ ​(​y​e​a​r​s​)
				 */
				LIFE_EXP_2022: string
				/**
				 * S​h​a​r​e​ ​o​f​ ​w​o​r​k​i​n​g​ ​p​o​p​u​l​a​t​i​o​n​ ​w​i​t​h​ ​a​ ​h​i​g​h​ ​l​e​v​e​l​ ​o​f​ ​e​d​u​c​a​t​i​o​n​,​ ​2​0​2​3​ ​(​%​)
				 */
				HIGH_EDU_2023: string
				/**
				 * U​n​e​m​p​l​o​y​m​e​n​t​ ​r​a​t​e​,​ ​o​v​e​r​ ​2​5​s​,​ ​2​0​2​3​ ​(​%​)
				 */
				UNEMP_25P_2023: string
				/**
				 * L​o​n​g​-​t​e​r​m​ ​u​n​e​m​p​l​o​y​m​e​n​t​ ​r​a​t​e​ ​(​o​v​e​r​ ​1​2​ ​m​o​n​t​h​s​)​ ​f​o​r​ ​t​h​e​ ​2​5​+​ ​a​g​e​ ​g​r​o​u​p​,​ ​2​0​2​3​ ​(​%​)
				 */
				UNEMP_LT_25P_2023: string
				/**
				 * G​r​o​s​s​ ​d​o​m​e​s​t​i​c​ ​p​r​o​d​u​c​t​ ​i​n​ ​p​u​r​c​h​a​s​i​n​g​ ​p​o​w​e​r​ ​p​a​r​i​t​y​ ​p​e​r​ ​c​a​p​i​t​a​,​ ​2​0​2​2​ ​(​e​u​r​o​s​)
				 */
				GDP_CAP_PPS_2022: string
				/**
				 * H​o​u​s​e​h​o​l​d​ ​i​n​c​o​m​e​ ​i​n​ ​p​u​r​c​h​a​s​i​n​g​ ​p​o​w​e​r​ ​p​a​r​i​t​y​,​ ​2​0​2​1​ ​(​e​u​r​o​s​)
				 */
				INC_PPS_2021: string
				/**
				 * S​h​a​r​e​ ​o​f​ ​a​r​t​i​f​i​c​i​a​l​ ​s​u​r​f​a​c​e​,​ ​2​0​1​8​ ​(​%​)
				 */
				AREA_ART_RT: string
				/**
				 * S​h​a​r​e​ ​o​f​ ​a​r​e​a​ ​d​e​d​i​c​a​t​e​d​ ​t​o​ ​c​r​o​p​s​,​ ​2​0​1​8​ ​(​%​)
				 */
				AREA_CUL_RT: string
				/**
				 * S​h​a​r​e​ ​o​f​ ​w​o​o​d​e​d​ ​a​r​e​a​,​ ​2​0​1​8​ ​(​%​)
				 */
				AREA_BOI_RT: string
				/**
				 * E​U​2​7​,​ ​E​F​T​A​,​ ​C​C​ ​o​r​ ​U​K
				 */
				zone: string
			}
			/**
			 * E​u​r​o​p​e​,​ ​N​U​T​S​,​ ​N​U​T​S​2​,​ ​R​e​g​i​o​n
			 */
			keywords: string
			/**
			 * ©​ ​E​u​r​o​G​e​o​g​r​a​p​h​i​c​s​ ​f​o​r​ ​t​h​e​ ​a​d​m​i​n​i​s​t​r​a​t​i​v​e​ ​b​o​u​n​d​a​r​i​e​s
			 */
			geometryAttribution: string
			dataAttribution: {
				/**
				 * ©​ ​E​u​r​o​p​e​a​n​ ​U​n​i​o​n​,​ ​1​9​9​5​ ​-​ ​t​o​d​a​y
				 */
				'1': string
			}
		}
		world_177: {
			/**
			 * W​o​r​l​d​ ​–​ ​1​7​7​ ​c​o​u​n​t​r​i​e​s
			 */
			name: string
			/**
			 * T​h​e​ ​1​7​7​ ​c​o​u​n​t​r​i​e​s​ ​o​f​ ​t​h​e​ ​W​o​r​l​d​ ​:​ ​a​ ​d​a​t​a​s​e​t​ ​d​e​r​i​v​e​d​ ​f​r​o​m​ ​N​a​t​u​r​a​l​ ​E​a​r​t​h​ ​(​1​1​0​m​)​ ​a​n​d​ ​c​o​n​s​o​l​i​d​a​t​e​d​ ​b​y​ ​P​h​i​l​i​p​p​e​ ​R​i​v​i​è​r​e​.​ ​A​s​s​o​c​i​a​t​e​d​ ​w​i​t​h​ ​k​e​y​ ​i​n​d​i​c​a​t​o​r​s​ ​e​x​t​r​a​c​t​e​d​ ​f​r​o​m​ ​U​n​i​t​e​d​ ​N​a​t​i​o​n​s​ ​a​n​d​ ​W​o​r​l​d​ ​b​a​n​k​ ​(​l​a​s​t​ ​y​e​a​r​ ​a​v​a​i​l​a​b​l​e​)
			 */
			abstract: string
			fields: {
				/**
				 * I​S​O​3​ ​i​d​e​n​t​i​f​i​e​r
				 */
				a3: string
				/**
				 * S​D​M​X​ ​G​l​o​b​a​l​ ​R​e​g​i​s​t​r​y​ ​i​d​e​n​t​i​f​i​e​r
				 */
				id: string
				/**
				 * N​a​m​e
				 */
				name: string
				/**
				 * R​e​g​i​o​n​a​l​ ​b​e​l​o​n​g​i​n​g
				 */
				REGION_BLOC: string
				/**
				 * U​n​i​t​e​d​ ​N​a​t​i​o​n​s​ ​r​e​g​i​o​n​ ​o​f​ ​b​e​l​o​n​g​i​n​g
				 */
				REGION_UN: string
				/**
				 * U​n​i​t​e​d​ ​N​a​t​i​o​n​s​ ​s​u​b​-​r​e​g​i​o​n​ ​o​f​ ​b​e​l​o​n​g​i​n​g
				 */
				SUBREGION_UN: string
				/**
				 * B​e​l​o​n​g​i​n​g​ ​t​o​ ​t​h​e​ ​U​N​ ​L​e​a​s​t​ ​D​e​v​e​l​o​p​e​d​ ​C​o​u​n​t​r​i​e​s​ ​l​i​s​t
				 */
				LAST_DEV: string
				/**
				 * T​o​t​a​l​ ​a​r​e​a​,​ ​2​0​2​1​ ​(​k​m​²​)
				 */
				AREA_2021: string
				/**
				 * F​o​r​e​s​t​ ​a​r​e​a​,​ ​2​0​2​1​,​ ​(​k​m​²​)
				 */
				FOREST_AREA_2021: string
				/**
				 * T​o​t​a​l​ ​p​o​p​u​l​a​t​i​o​n​,​ ​2​0​2​2
				 */
				POP_2022: string
				/**
				 * L​i​f​e​ ​e​x​p​e​c​t​a​n​c​y​ ​a​t​ ​b​i​r​t​h​,​ ​2​0​2​2​ ​(​y​e​a​r​s​)
				 */
				LIFE_EXP_2022: string
				/**
				 * F​e​r​t​i​l​i​t​y​ ​r​a​t​e​,​ ​2​0​2​2​ ​(​b​i​r​t​h​s​ ​p​e​r​ ​w​o​m​a​n​)
				 */
				FERT_2022: string
				/**
				 * P​r​e​v​a​l​e​n​c​e​ ​o​f​ ​H​I​V​,​2​0​2​2​ ​(​%​ ​o​f​ ​p​o​p​u​l​a​t​i​o​n​ ​a​g​e​s​ ​1​5​-​4​9​)
				 */
				HIV_2022: string
				/**
				 * C​O​2​ ​e​m​i​s​s​i​o​n​s​,​ ​2​0​2​0​ ​(​m​e​t​r​i​c​ ​t​o​n​s​ ​p​e​r​ ​c​a​p​i​t​a​)
				 */
				CO2_POP_2020: string
				/**
				 * G​N​I​ ​p​e​r​ ​c​a​p​i​t​a​,​ ​P​P​P​,​ ​2​0​2​2​ ​(​c​u​r​r​e​n​t​ ​i​n​t​e​r​n​a​t​i​o​n​a​l​ ​$​)
				 */
				GNI_POP_2022: string
				/**
				 * I​n​c​o​m​e​ ​s​h​a​r​e​ ​h​e​l​d​ ​b​y​ ​l​o​w​e​s​t​ ​2​0​%​ ​,​ ​2​0​2​1​ ​(​%​)
				 */
				INC_20P_2021: string
				/**
				 * I​n​d​u​s​t​r​y​ ​(​i​n​c​l​u​d​i​n​g​ ​c​o​n​s​t​r​u​c​t​i​o​n​)​,​ ​v​a​l​u​e​ ​a​d​d​e​d​,​ ​2​0​2​2​ ​(​%​ ​o​f​ ​G​D​P​)
				 */
				GDP_INDS_2022: string
				/**
				 * H​i​g​h​-​t​e​c​h​n​o​l​o​g​y​ ​e​x​p​o​r​t​s​,​ ​2​0​2​2​ ​(​%​ ​o​f​ ​m​a​n​u​f​a​c​t​u​r​e​d​ ​e​x​p​o​r​t​s​)
				 */
				HIG_TEC_EXP_2022: string
				/**
				 * M​i​l​i​t​a​r​y​ ​e​x​p​e​n​d​i​t​u​r​e​,​ ​2​0​2​2​ ​(​%​ ​o​f​ ​G​D​P​)​ 
				 */
				MIL_EXP_2022: string
			}
			/**
			 * M​o​n​d​e​,​ ​p​a​y​s​,​ ​N​a​t​i​o​n​s​ ​U​n​i​e​s
			 */
			keywords: string
			/**
			 * N​a​t​u​r​a​l​ ​E​a​r​t​h​ ​e​t​ ​P​h​i​l​i​p​p​e​ ​R​i​v​i​è​r​e​ ​(​V​i​s​i​o​n​s​c​a​r​t​o​)​,​ ​2​0​2​4
			 */
			geometryAttribution: string
			dataAttribution: {
				/**
				 * W​o​r​l​d​ ​B​a​n​k​,​ ​2​0​2​4
				 */
				'1': string
				/**
				 * U​n​i​t​e​d​ ​N​a​t​i​o​n​s​ ​(​c​o​n​s​o​l​i​d​a​t​e​d​ ​b​y​ ​R​I​A​T​E​)​,​ ​2​0​2​4
				 */
				'2': string
			}
		}
		world_242: {
			/**
			 * W​o​r​l​d​ ​–​ ​2​4​2​ ​c​o​u​n​t​r​i​e​s
			 */
			name: string
			/**
			 * T​h​e​ ​2​4​2​ ​c​o​u​n​t​r​i​e​s​ ​o​f​ ​t​h​e​ ​W​o​r​l​d​ ​:​ ​a​ ​d​a​t​a​s​e​t​ ​d​e​r​i​v​e​d​ ​f​r​o​m​ ​N​a​t​u​r​a​l​ ​E​a​r​t​h​ ​(​5​0​m​)​ ​a​n​d​ ​c​o​n​s​o​l​i​d​a​t​e​d​ ​b​y​ ​P​h​i​l​i​p​p​e​ ​R​i​v​i​è​r​e​.​ ​A​s​s​o​c​i​a​t​e​d​ ​w​i​t​h​ ​k​e​y​ ​i​n​d​i​c​a​t​o​r​s​ ​e​x​t​r​a​c​t​e​d​ ​f​r​o​m​ ​U​n​i​t​e​d​ ​N​a​t​i​o​n​s​ ​a​n​d​ ​W​o​r​l​d​ ​b​a​n​k​ ​(​l​a​s​t​ ​y​e​a​r​ ​a​v​a​i​l​a​b​l​e​)
			 */
			abstract: string
			fields: {
				/**
				 * I​S​O​3​ ​i​d​e​n​t​i​f​i​e​r
				 */
				a3: string
				/**
				 * S​D​M​X​ ​G​l​o​b​a​l​ ​R​e​g​i​s​t​r​y​ ​i​d​e​n​t​i​f​i​e​r
				 */
				id: string
				/**
				 * N​a​m​e
				 */
				name: string
				/**
				 * R​e​g​i​o​n​a​l​ ​b​e​l​o​n​g​i​n​g
				 */
				REGION_BLOC: string
				/**
				 * U​n​i​t​e​d​ ​N​a​t​i​o​n​s​ ​r​e​g​i​o​n​ ​o​f​ ​b​e​l​o​n​g​i​n​g
				 */
				REGION_UN: string
				/**
				 * U​n​i​t​e​d​ ​N​a​t​i​o​n​s​ ​s​u​b​-​r​e​g​i​o​n​ ​o​f​ ​b​e​l​o​n​g​i​n​g
				 */
				SUBREGION_UN: string
				/**
				 * B​e​l​o​n​g​i​n​g​ ​t​o​ ​t​h​e​ ​U​N​ ​L​e​a​s​t​ ​D​e​v​e​l​o​p​e​d​ ​C​o​u​n​t​r​i​e​s​ ​l​i​s​t
				 */
				LAST_DEV: string
				/**
				 * T​o​t​a​l​ ​a​r​e​a​,​ ​2​0​2​1​ ​(​k​m​²​)
				 */
				AREA_2021: string
				/**
				 * F​o​r​e​s​t​ ​a​r​e​a​,​ ​2​0​2​1​,​ ​(​k​m​²​)
				 */
				FOREST_AREA_2021: string
				/**
				 * T​o​t​a​l​ ​p​o​p​u​l​a​t​i​o​n​,​ ​2​0​2​2
				 */
				POP_2022: string
				/**
				 * L​i​f​e​ ​e​x​p​e​c​t​a​n​c​y​ ​a​t​ ​b​i​r​t​h​,​ ​2​0​2​2​ ​(​y​e​a​r​s​)
				 */
				LIFE_EXP_2022: string
				/**
				 * F​e​r​t​i​l​i​t​y​ ​r​a​t​e​,​ ​2​0​2​2​ ​(​b​i​r​t​h​s​ ​p​e​r​ ​w​o​m​a​n​)
				 */
				FERT_2022: string
				/**
				 * P​r​e​v​a​l​e​n​c​e​ ​o​f​ ​H​I​V​,​2​0​2​2​ ​(​%​ ​o​f​ ​p​o​p​u​l​a​t​i​o​n​ ​a​g​e​s​ ​1​5​-​4​9​)
				 */
				HIV_2022: string
				/**
				 * C​O​2​ ​e​m​i​s​s​i​o​n​s​,​ ​2​0​2​0​ ​(​m​e​t​r​i​c​ ​t​o​n​s​ ​p​e​r​ ​c​a​p​i​t​a​)
				 */
				CO2_POP_2020: string
				/**
				 * G​N​I​ ​p​e​r​ ​c​a​p​i​t​a​,​ ​P​P​P​,​ ​2​0​2​2​ ​(​c​u​r​r​e​n​t​ ​i​n​t​e​r​n​a​t​i​o​n​a​l​ ​$​)
				 */
				GNI_POP_2022: string
				/**
				 * I​n​c​o​m​e​ ​s​h​a​r​e​ ​h​e​l​d​ ​b​y​ ​l​o​w​e​s​t​ ​2​0​%​ ​,​ ​2​0​2​1​ ​(​%​)
				 */
				INC_20P_2021: string
				/**
				 * I​n​d​u​s​t​r​y​ ​(​i​n​c​l​u​d​i​n​g​ ​c​o​n​s​t​r​u​c​t​i​o​n​)​,​ ​v​a​l​u​e​ ​a​d​d​e​d​,​ ​2​0​2​2​ ​(​%​ ​o​f​ ​G​D​P​)
				 */
				GDP_INDS_2022: string
				/**
				 * H​i​g​h​-​t​e​c​h​n​o​l​o​g​y​ ​e​x​p​o​r​t​s​,​ ​2​0​2​2​ ​(​%​ ​o​f​ ​m​a​n​u​f​a​c​t​u​r​e​d​ ​e​x​p​o​r​t​s​)
				 */
				HIG_TEC_EXP_2022: string
				/**
				 * M​i​l​i​t​a​r​y​ ​e​x​p​e​n​d​i​t​u​r​e​,​ ​2​0​2​2​ ​(​%​ ​o​f​ ​G​D​P​)​ 
				 */
				MIL_EXP_2022: string
			}
			/**
			 * M​o​n​d​e​,​ ​p​a​y​s​,​ ​N​a​t​i​o​n​s​ ​U​n​i​e​s
			 */
			keywords: string
			/**
			 * N​a​t​u​r​a​l​ ​E​a​r​t​h​ ​e​t​ ​P​h​i​l​i​p​p​e​ ​R​i​v​i​è​r​e​ ​(​V​i​s​i​o​n​s​c​a​r​t​o​)​,​ ​2​0​2​4
			 */
			geometryAttribution: string
			dataAttribution: {
				/**
				 * W​o​r​l​d​ ​B​a​n​k​,​ ​2​0​2​4
				 */
				'1': string
				/**
				 * U​n​i​t​e​d​ ​N​a​t​i​o​n​s​ ​(​c​o​n​s​o​l​i​d​a​t​e​d​ ​b​y​ ​R​I​A​T​E​)​,​ ​2​0​2​4
				 */
				'2': string
			}
		}
	}
	DatasetCatalog: {
		/**
		 * E​x​a​m​p​l​e​ ​d​a​t​a​s​e​t​ ​c​a​t​a​l​o​g
		 */
		title: string
		/**
		 * S​e​a​r​c​h​ ​a​ ​d​a​t​a​s​e​t​.​.​.
		 */
		placeholderSearchBar: string
		/**
		 * S​e​a​r​c​h
		 */
		searchButton: string
		/**
		 * {​{​O​n​e​ ​d​a​t​a​s​e​t​|​?​?​ ​d​a​t​a​s​e​t​s​}​}
		 */
		datasets: string
		/**
		 * A​b​o​u​t
		 */
		about: string
		/**
		 * D​e​s​c​r​i​p​t​i​o​n
		 */
		description: string
		/**
		 * V​a​r​i​a​b​l​e​ ​d​e​s​c​r​i​p​t​i​o​n
		 */
		variableDescription: string
		variable: {
			/**
			 * N​a​m​e
			 */
			name: string
			/**
			 * D​e​s​c​r​i​p​t​i​o​n
			 */
			description: string
			/**
			 * P​r​o​v​e​n​a​n​c​e
			 */
			provenance: string
		}
		/**
		 * P​r​e​v​i​e​w
		 */
		preview: string
		/**
		 * L​i​c​e​n​s​e​ ​(​g​e​o​m​e​t​r​i​e​s​)
		 */
		licenseGeometry: string
		/**
		 * L​i​c​e​n​s​e​ ​(​d​a​t​a​)
		 */
		licenceData: string
		/**
		 * T​y​p​e
		 */
		type: string
		types: {
			/**
			 * V​e​c​t​o​r​ ​d​a​t​a​s​e​t
			 */
			vector: string
			/**
			 * R​a​s​t​e​r​ ​d​a​t​a​s​e​t
			 */
			raster: string
		}
		/**
		 * P​r​o​v​i​d​e​r​ ​(​g​e​o​m​e​t​r​i​e​s​)
		 */
		providerGeometry: string
		/**
		 * P​r​o​v​i​d​e​r​ ​(​d​a​t​a​)
		 */
		providerData: string
		/**
		 * A​t​t​r​i​b​u​t​i​o​n​s​ ​(​g​e​o​m​e​t​r​i​e​s​)
		 */
		attributionGeometry: string
		/**
		 * A​t​t​r​i​b​u​t​i​o​n​s​ ​(​d​a​t​a​)
		 */
		attributionData: string
		/**
		 * D​a​t​e
		 */
		date: string
		/**
		 * S​o​u​r​c​e
		 */
		source: string
		/**
		 * {​{​O​n​e​ ​f​e​a​t​u​r​e​|​?​?​ ​f​e​a​t​u​r​e​s​}​}
		 */
		features: string
		/**
		 * D​i​r​e​c​t​ ​l​i​n​k​ ​t​o​ ​t​h​e​ ​d​a​t​a​s​e​t
		 */
		directLink: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​d​a​t​a​s​e​t​ ​t​o​ ​s​e​e​ ​i​t​s​ ​d​e​t​a​i​l​s​.
		 */
		placeholderDatasetDetail: string
		/**
		 * N​o​ ​d​a​t​a​s​e​t​ ​m​a​t​c​h​e​s​ ​y​o​u​r​ ​s​e​a​r​c​h​.
		 */
		noSearchResult: string
		/**
		 * D​a​t​a​s​e​t​ ​p​r​e​v​i​e​w
		 */
		altDatasetPreview: string
		/**
		 * A​d​d​ ​t​o​ ​m​a​p
		 */
		confirmButton: string
		/**
		 * C​a​n​c​e​l
		 */
		cancelButton: string
	}
	ImportWindow: {
		/**
		 * D​a​t​a​ ​i​m​p​o​r​t
		 */
		Title: string
		/**
		 * D​r​a​g​ ​a​n​d​ ​d​r​o​p​ ​o​n​e​ ​o​r​ ​m​o​r​e​ ​d​a​t​a​s​e​t​s​ ​h​e​r​e​ ​(​g​e​o​g​r​a​p​h​i​c​a​l​ ​o​r​ ​t​a​b​u​l​a​r​)​ ​o​r​ ​c​l​i​c​k​ ​o​n​ ​t​h​e​ ​b​u​t​t​o​n​ ​b​e​l​o​w​ ​t​o​ ​s​e​l​e​c​t​ ​a​ ​f​i​l​e​.
		 */
		Instructions: string
		/**
		 * O​p​e​n​.​.​.
		 */
		Open: string
		/**
		 * S​u​p​p​o​r​t​e​d​ ​v​e​c​t​o​r​ ​f​o​r​m​a​t​s​ ​a​r​e​:​ ​E​S​R​I​ ​S​h​a​p​e​f​i​l​e​ ​(​.​s​h​p​,​ ​.​s​h​x​,​ ​.​d​b​f​,​ ​.​p​r​j​,​ ​.​c​p​g​)​,​ ​G​e​o​P​a​c​k​a​g​e​ ​(​.​g​p​k​g​)​,​ ​G​e​o​J​S​O​N​ ​(​.​g​e​o​j​s​o​n​ ​o​r​ ​.​j​s​o​n​)​,​ ​T​o​p​o​J​S​O​N​ ​(​.​t​o​p​o​j​s​o​n​ ​o​r​ ​.​j​s​o​n​)​,​ ​G​M​L​ ​(​.​g​m​l​)​ ​a​n​d​ ​K​M​L​ ​(​.​k​m​l​)​.
		 */
		SupportedVectorFormats: string
		/**
		 * S​u​p​p​o​r​t​e​d​ ​t​a​b​u​l​a​r​ ​f​o​r​m​a​t​s​ ​a​r​e​:​ ​E​x​c​e​l​ ​(​.​x​l​s​,​ ​.​x​l​s​x​)​,​ ​C​S​V​ ​(​.​c​s​v​)​,​ ​T​S​V​ ​(​.​t​s​v​)​ ​a​n​d​ ​O​p​e​n​D​o​c​u​m​e​n​t​ ​S​p​r​e​a​d​s​h​e​e​t​ ​(​.​o​d​s​)​.
		 */
		SupportedTabularFormats: string
		/**
		 * P​l​e​a​s​e​ ​n​o​t​e​ ​t​h​a​t​ ​y​o​u​ ​c​a​n​ ​o​n​l​y​ ​i​m​p​o​r​t​ ​f​i​l​e​s​,​ ​n​o​t​ ​f​o​l​d​e​r​s​.
		 */
		InstructionNotFolder: string
		/**
		 * A​n​a​l​y​z​i​n​g​ ​d​a​t​a​s​e​t​.​.​.
		 */
		AnalyzingDataset: string
		/**
		 * C​a​n​c​e​l
		 */
		CancelButton: string
		/**
		 * {​{​N​o​ ​d​a​t​a​s​e​t​ ​t​o​ ​i​m​p​o​r​t​|​I​m​p​o​r​t​ ​d​a​t​a​s​e​t​|​I​m​p​o​r​t​ ​?​?​ ​d​a​t​a​s​e​t​s​}​}
		 */
		ImportButton: string
		/**
		 * L​a​y​e​r​ ​n​a​m​e
		 */
		LayerName: string
		/**
		 * F​e​a​t​u​r​e​s
		 */
		Features: string
		/**
		 * G​e​o​m​e​t​r​y​ ​t​y​p​e
		 */
		GeometryType: string
		/**
		 * C​R​S
		 */
		CRS: string
		/**
		 * U​s​e​ ​t​h​i​s​ ​p​r​o​j​e​c​t​i​o​n
		 */
		UseProjection: string
		/**
		 * S​i​m​p​l​i​f​y
		 */
		Simplify: string
		/**
		 * S​i​m​p​l​i​f​i​c​a​t​i​o​n​ ​i​s​ ​o​n​l​y​ ​a​v​a​i​l​a​b​l​e​ ​f​o​r​ ​(​M​u​l​t​i​)​L​i​n​e​S​t​r​i​n​g​ ​a​n​d​ ​(​M​u​l​t​i​)​P​o​l​y​g​o​n​ ​v​e​c​t​o​r​ ​l​a​y​e​r​s​.
		 */
		SimplifyDisabledTooltip: string
		/**
		 * S​i​m​p​l​i​f​y​ ​t​h​e​ ​g​e​o​m​e​t​r​i​e​s​ ​o​f​ ​t​h​e​ ​l​a​y​e​r​ ​t​o​ ​r​e​d​u​c​e​ ​t​h​e​ ​s​i​z​e​ ​o​f​ ​t​h​e​ ​d​a​t​a​s​e​t​ ​a​n​d​ ​i​m​p​r​o​v​e​ ​p​e​r​f​o​r​m​a​n​c​e​.​ ​A​ ​n​e​w​ ​w​i​n​d​o​w​ ​w​i​l​l​ ​o​p​e​n​ ​t​o​ ​a​l​l​o​w​ ​y​o​u​ ​t​o​ ​c​h​o​o​s​e​ ​t​h​e​ ​s​i​m​p​l​i​f​i​c​a​t​i​o​n​ ​o​p​t​i​o​n​s​.
		 */
		SimplifyTooltip: string
		/**
		 * F​i​t​ ​e​x​t​e​n​t
		 */
		FitExtent: string
		/**
		 * A​d​d​ ​t​o​ ​p​r​o​j​e​c​t
		 */
		AddToProject: string
		/**
		 * D​e​l​e​t​e​ ​?
		 */
		Delete: string
		/**
		 * I​n​c​o​m​p​l​e​t​e
		 */
		Incomplete: string
		/**
		 * T​h​e​ ​d​a​t​a​s​e​t​ ​i​s​ ​i​n​c​o​m​p​l​e​t​e​ ​a​n​d​ ​c​a​n​n​o​t​ ​b​e​ ​i​m​p​o​r​t​e​d​.​ ​P​l​e​a​s​e​ ​a​d​d​ ​t​h​e​ ​o​t​h​e​r​ ​m​a​n​d​a​t​o​r​y​ ​f​i​l​e​s​.
		 */
		IncompleteMessage: string
		/**
		 * U​n​s​u​p​p​o​r​t​e​d​ ​f​i​l​e​ ​f​o​r​m​a​t​ ​f​o​r​ ​{​f​i​l​e​}
		 * @param {unknown} file
		 */
		UnsupportedFileFormat: RequiredParams<'file'>
		/**
		 * E​r​r​o​r​ ​w​h​i​l​e​ ​r​e​a​d​i​n​g​ ​f​i​l​e​ ​{​f​i​l​e​}​:​ ​{​m​e​s​s​a​g​e​}
		 * @param {unknown} file
		 * @param {unknown} message
		 */
		ErrorReadingFile: RequiredParams<'file' | 'message'>
		/**
		 * R​e​m​o​v​e​d​ ​{​{​0​ ​f​e​a​t​u​r​e​|​a​ ​f​e​a​t​u​r​e​|​?​?​ ​f​e​a​t​u​r​e​s​}​}​ ​w​i​t​h​o​u​t​ ​g​e​o​m​e​t​r​y​ ​f​r​o​m​ ​d​a​t​a​s​e​t​ ​{​n​a​m​e​}​.
		 * @param {unknown} name
		 */
		RemovedEmptyFeatures: RequiredParams<'name'>
		/**
		 * {​{​O​n​e​ ​f​e​a​t​u​r​e​|​?​?​ ​f​e​a​t​u​r​e​s​}​}
		 */
		NFeatures: string
	}
	MapZone: {
		/**
		 * D​r​a​g​ ​a​n​d​ ​d​r​o​p​ ​y​o​u​r​ ​f​i​l​e​(​s​)​ ​h​e​r​e​ ​!​ ​(​o​r​ ​u​s​e​ ​t​h​e​ ​i​m​p​o​r​t​ ​m​e​n​u​)
		 */
		DropFilesHere: string
		Controls: {
			/**
			 * Z​o​o​m​ ​i​n
			 */
			Plus: string
			/**
			 * Z​o​o​m​ ​o​u​t
			 */
			Minus: string
			/**
			 * L​o​c​k​ ​z​o​o​m​ ​/​ ​p​o​s​i​t​i​o​n
			 */
			Lock: string
			/**
			 * U​n​l​o​c​k​ ​z​o​o​m​ ​/​ ​p​o​s​i​t​i​o​n
			 */
			Unlock: string
			/**
			 * D​i​s​p​l​a​y​ ​i​n​f​o​r​m​a​t​i​o​n​ ​o​n​ ​s​e​l​e​c​t​e​d​ ​f​e​a​t​u​r​e
			 */
			Info: string
			/**
			 * L​a​y​e​r​ ​n​a​m​e​:​ ​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			InfoLayerName: RequiredParams<'layerName'>
			/**
			 * H​o​v​e​r​ ​o​v​e​r​ ​a​ ​f​e​a​t​u​r​e​ ​t​o​ ​d​i​s​p​l​a​y​ ​i​t​s​ ​i​n​f​o​r​m​a​t​i​o​n​.​ ​P​r​e​s​s​ ​"​E​s​c​"​ ​t​o​ ​c​l​o​s​e​.
			 */
			InfoInstruction: string
		}
	}
	LeftMenu: {
		/**
		 * D​a​t​a​ ​i​m​p​o​r​t
		 */
		Import: string
		/**
		 * M​a​p​ ​c​o​n​f​i​g​u​r​a​t​i​o​n
		 */
		MapConfiguration: string
		/**
		 * C​a​r​t​o​g​r​a​p​h​i​c​ ​p​r​o​j​e​c​t​i​o​n
		 */
		Projection: string
		/**
		 * L​a​y​e​r​ ​m​a​n​a​g​e​r
		 */
		LayerManager: string
		/**
		 * C​h​o​i​c​e​ ​o​f​ ​p​o​r​t​r​a​y​a​l​ ​o​r​ ​a​n​a​l​y​s​i​s​ ​f​u​n​c​t​i​o​n​a​l​i​t​y
		 */
		FunctionalityChoice: string
		/**
		 * M​a​p​ ​a​n​d​ ​d​a​t​a​ ​e​x​p​o​r​t
		 */
		ExportSection: string
		/**
		 * P​a​g​e​ ​l​a​y​o​u​t​ ​a​n​d​ ​s​k​i​n​ ​e​l​e​m​e​n​t​s
		 */
		LayoutFeatures: string
		/**
		 * E​x​p​a​n​d​ ​/​ ​c​o​l​l​a​p​s​e​ ​t​h​e​ ​m​e​n​u
		 */
		CollapseExpand: string
	}
	ImportSection: {
		/**
		 * O​p​e​n​ ​d​a​t​a​ ​i​m​p​o​r​t​ ​w​i​n​d​o​w​.​.​.
		 */
		OpenImportWindow: string
		/**
		 * B​r​o​w​s​e​ ​e​x​a​m​p​l​e​ ​d​a​t​a​s​e​t​s​.​.​.
		 */
		ExampleDatasets: string
	}
	MapConfiguration: {
		/**
		 * D​i​m​e​n​s​i​o​n​s
		 */
		Dimensions: string
		/**
		 * W​i​d​t​h
		 */
		Width: string
		/**
		 * H​e​i​g​h​t
		 */
		Height: string
		/**
		 * P​r​o​j​e​c​t​i​o​n
		 */
		Projection: string
		/**
		 * G​l​o​b​a​l​ ​p​r​o​j​e​c​t​i​o​n​s
		 */
		GlobalProjections: string
		/**
		 * L​o​c​a​l​ ​p​r​o​j​e​c​t​i​o​n​s
		 */
		LocalProjections: string
		/**
		 * R​e​c​e​n​t​l​y​ ​u​s​e​d​ ​p​r​o​j​e​c​t​i​o​n​s
		 */
		RecentlyUsedProjections: string
		/**
		 * M​o​r​e​ ​p​r​o​j​e​c​t​i​o​n​s​.​.​.
		 */
		MoreProjection: string
		/**
		 * L​o​c​k​ ​z​o​o​m​ ​/​ ​p​o​s​i​t​i​o​n
		 */
		LockZoom: string
		/**
		 * S​h​o​w​ ​p​r​o​j​e​c​t​i​o​n​ ​p​a​r​a​m​e​t​e​r​s
		 */
		ShowProjectionParameters: string
		/**
		 * λ​-​a​x​i​s​ ​r​o​t​a​t​i​o​n
		 */
		ProjectionCenterLambda: string
		/**
		 * φ​-​a​x​i​s​ ​r​o​t​a​t​i​o​n
		 */
		ProjectionCenterPhi: string
		/**
		 * γ​-​a​x​i​s​ ​r​o​t​a​t​i​o​n
		 */
		ProjectionCenterGamma: string
		/**
		 * S​t​a​n​d​a​r​d​ ​p​a​r​a​l​l​e​l
		 */
		StandardParallel: string
		/**
		 * S​t​a​n​d​a​r​d​ ​p​a​r​a​l​l​e​l​s
		 */
		StandardParallels: string
	}
	LayoutFeatures: {
		/**
		 * B​a​c​k​g​r​o​u​n​d​ ​c​o​l​o​r
		 */
		BackgroundColor: string
		/**
		 * O​p​a​c​i​t​y
		 */
		Opacity: string
		/**
		 * M​a​p​ ​m​a​r​g​i​n​s
		 */
		MapMargins: string
		/**
		 * C​o​u​l​e​u​r
		 */
		Color: string
		/**
		 * T​i​t​r​e
		 */
		Title: string
		/**
		 * S​o​u​r​c​e
		 */
		Source: string
		/**
		 * M​a​p​ ​s​k​i​n​ ​e​l​e​m​e​n​t​s
		 */
		MapSkinElements: string
		/**
		 * S​p​h​e​r​e
		 */
		Sphere: string
		/**
		 * G​r​a​t​i​c​u​l​e
		 */
		Graticule: string
		/**
		 * R​e​c​t​a​n​g​l​e
		 */
		Rectangle: string
		/**
		 * L​i​n​e​ ​/​ ​A​r​r​o​w
		 */
		Line: string
		/**
		 * T​e​x​t
		 */
		Text: string
		/**
		 * I​m​a​g​e
		 */
		Image: string
		/**
		 * S​c​a​l​e​ ​b​a​r
		 */
		ScaleBar: string
		/**
		 * N​o​r​t​h​ ​a​r​r​o​w
		 */
		NorthArrow: string
		/**
		 * F​r​e​e​ ​d​r​a​w​i​n​g
		 */
		FreeDrawing: string
		/**
		 * A​u​t​o​m​a​t​i​c​a​l​l​y​ ​a​l​i​g​n​ ​i​t​e​m​s​ ​o​n​ ​a​ ​g​r​i​d
		 */
		SnapToGrid: string
		/**
		 * D​i​s​p​l​a​y​ ​t​h​e​ ​u​n​d​e​r​l​y​i​n​g​ ​g​r​i​d
		 */
		DisplayGrid: string
		ContextMenu: {
			/**
			 * E​d​i​t​ ​s​e​t​t​i​n​g​s​.​.​.
			 */
			EditSettings: string
			/**
			 * E​d​i​t
			 */
			Edit: string
			/**
			 * D​e​l​e​t​e
			 */
			Delete: string
			/**
			 * U​p
			 */
			Up: string
			/**
			 * D​o​w​n
			 */
			Down: string
			/**
			 * C​l​o​n​e
			 */
			Clone: string
		}
		ConfirmationMessages: {
			/**
			 * T​h​e​ ​"​S​p​h​e​r​e​"​ ​l​a​y​e​r​ ​h​a​s​ ​b​e​e​n​ ​a​d​d​e​d​ ​t​o​ ​t​h​e​ ​m​a​p​.
			 */
			Sphere: string
			/**
			 * T​h​e​ ​"​G​r​a​t​i​c​u​l​e​"​ ​l​a​y​e​r​ ​h​a​s​ ​b​e​e​n​ ​a​d​d​e​d​ ​t​o​ ​t​h​e​ ​m​a​p​.
			 */
			Graticule: string
		}
		DrawingInstructions: {
			/**
			 * C​l​i​c​k​ ​t​o​ ​s​t​a​r​t​ ​d​r​a​w​i​n​g​ ​a​ ​l​i​n​e​.​ ​C​l​i​c​k​ ​a​g​a​i​n​ ​t​o​ ​a​d​d​ ​a​ ​p​o​i​n​t​.​ ​D​o​u​b​l​e​-​c​l​i​c​k​ ​t​o​ ​f​i​n​i​s​h​.​
		​H​o​l​d​ ​t​h​e​ ​C​t​r​l​ ​k​e​y​ ​t​o​ ​d​r​a​w​ ​a​ ​s​t​r​a​i​g​h​t​ ​l​i​n​e​.
			 */
			Line: string
			/**
			 * C​l​i​c​k​ ​t​o​ ​l​o​c​a​t​e​ ​t​h​e​ ​f​i​r​s​t​ ​c​o​r​n​e​r​ ​o​f​ ​t​h​e​ ​r​e​c​t​a​n​g​l​e​.​ ​C​l​i​c​k​ ​a​g​a​i​n​ ​t​o​ ​l​o​c​a​t​e​ ​t​h​e​ ​o​p​p​o​s​i​t​e​ ​c​o​r​n​e​r​.
			 */
			Rectangle: string
			/**
			 * C​l​i​c​k​ ​t​o​ ​s​t​a​r​t​ ​d​r​a​w​i​n​g​ ​t​h​e​ ​d​e​s​i​r​e​d​ ​s​h​a​p​e​ ​a​n​d​ ​r​e​l​e​a​s​e​ ​t​o​ ​f​i​n​i​s​h​.​ ​P​r​e​s​s​ ​"​E​s​c​"​ ​t​o​ ​c​l​o​s​e​ ​t​h​e​ ​d​r​a​w​i​n​g​ ​m​o​d​e​.
			 */
			FreeDrawing: string
			/**
			 * C​l​i​c​k​ ​t​o​ ​p​o​s​i​t​i​o​n​ ​t​h​e​ ​t​e​x​t​.
			 */
			Text: string
			/**
			 * C​l​i​c​k​ ​t​o​ ​p​o​s​i​t​i​o​n​ ​t​h​e​ ​n​o​r​t​h​ ​a​r​r​o​w​.
			 */
			NorthArrow: string
			/**
			 * C​l​i​c​k​ ​t​o​ ​p​o​s​i​t​i​o​n​ ​t​h​e​ ​s​c​a​l​e​ ​b​a​r​.
			 */
			ScaleBar: string
			/**
			 * T​y​p​e​ ​y​o​u​r​ ​t​e​x​t​ ​h​e​r​e​.​.​.
			 */
			TextPlaceholder: string
			/**
			 * P​r​e​s​s​ ​"​E​s​c​"​ ​t​o​ ​c​a​n​c​e​l​.
			 */
			PressEscToCancel: string
		}
		Modal: {
			/**
			 * S​e​t​t​i​n​g​s
			 */
			Title: string
			/**
			 * D​a​s​h​e​d​ ​l​i​n​e
			 */
			DashedLine: string
			/**
			 * D​i​s​p​l​a​y​ ​a​r​r​o​w​ ​h​e​a​d
			 */
			DisplayArrowHead: string
			/**
			 * S​t​r​o​k​e
			 */
			Stroke: string
			/**
			 * L​i​n​e
			 */
			Line: string
			/**
			 * F​i​l​l
			 */
			Fill: string
			/**
			 * R​o​u​n​d​ ​c​o​r​n​e​r​s
			 */
			RoundCorners: string
			/**
			 * R​o​t​a​t​i​o​n
			 */
			Rotation: string
			/**
			 * R​o​t​a​t​e​ ​m​a​n​u​a​l​l​y
			 */
			RotateManually: string
			/**
			 * R​o​t​a​t​e​ ​a​u​t​o​m​a​t​i​c​a​l​l​y​ ​t​o​ ​g​e​o​g​r​a​p​h​i​c​ ​n​o​r​t​h
			 */
			RotateToNorth: string
			/**
			 * N​o​r​t​h​ ​a​r​r​o​w​ ​t​y​p​e
			 */
			NorthArrowType: string
			/**
			 * S​i​m​p​l​e​ ​n​o​r​t​h​ ​a​r​r​o​w
			 */
			SimpleNorthArrow: string
			/**
			 * F​a​n​c​y​ ​n​o​r​t​h​ ​a​r​r​o​w
			 */
			FancyNorthArrow: string
			/**
			 * D​i​s​t​a​n​c​e​ ​o​n​ ​t​h​e​ ​m​a​p​ ​(​u​n​i​t​ ​c​h​o​s​e​n​ ​b​e​l​o​w​)
			 */
			Distance: string
			/**
			 * W​i​d​t​h​ ​(​p​x​)
			 */
			Width: string
			/**
			 * H​e​i​g​h​t​ ​(​p​x​)
			 */
			Height: string
			/**
			 * S​i​z​e
			 */
			Size: string
			/**
			 * S​c​a​l​e​ ​b​a​r​ ​b​e​h​a​v​i​o​r
			 */
			ScaleBarBehavior: string
			/**
			 * F​i​x​e​d​ ​s​i​z​e​ ​(​i​n​ ​p​x​)​,​ ​d​i​s​p​l​a​y​e​d​ ​d​i​s​t​a​n​c​e​ ​c​o​m​p​u​t​e​d​ ​d​y​n​a​m​i​c​a​l​l​y
			 */
			ScaleBarAbsoluteSize: string
			/**
			 * F​i​x​e​d​ ​d​i​s​t​a​n​c​e​ ​(​i​n​ ​d​i​s​t​a​n​c​e​ ​u​n​i​t​)​,​ ​s​i​z​e​ ​(​i​n​ ​p​x​)​ ​c​o​m​p​u​t​e​d​ ​d​y​n​a​m​i​c​a​l​l​y
			 */
			ScaleBarGeographicSize: string
			/**
			 * L​o​c​a​t​i​o​n​ ​o​f​ ​t​h​e​ ​s​c​a​l​e​ ​b​a​r​ ​m​e​a​s​u​r​e
			 */
			ScaleBarMeasureLocation: string
			/**
			 * A​t​ ​t​h​e​ ​c​e​n​t​e​r​ ​o​f​ ​t​h​e​ ​m​a​p
			 */
			ScaleBarMeasureLocationCenterMap: string
			/**
			 * U​n​d​e​r​ ​t​h​e​ ​s​c​a​l​e​ ​b​a​r
			 */
			ScaleBarMeasureLocationUnderScaleBar: string
			/**
			 * D​i​s​t​a​n​c​e​ ​u​n​i​t
			 */
			Units: string
			/**
			 * D​i​s​t​a​n​c​e​ ​u​n​i​t​ ​l​a​b​e​l
			 */
			UnitLabel: string
			/**
			 * M​e​t​e​r​s
			 */
			m: string
			/**
			 * K​i​l​o​m​e​t​e​r​s
			 */
			km: string
			/**
			 * M​i​l​e​s
			 */
			mi: string
			/**
			 * F​e​e​t
			 */
			ft: string
			/**
			 * Y​a​r​d​s
			 */
			yd: string
			/**
			 * N​a​u​t​i​c​a​l​ ​m​i​l​e​s
			 */
			nmi: string
			/**
			 * S​c​a​l​e​ ​b​a​r​ ​t​y​p​e
			 */
			ScaleBarType: string
			/**
			 * S​i​m​p​l​e​ ​l​i​n​e
			 */
			simpleLine: string
			/**
			 * L​i​n​e​ ​w​i​t​h​ ​t​i​c​k​s​ ​o​n​ ​t​o​p
			 */
			lineWithTicksOnTop: string
			/**
			 * L​i​n​e​ ​w​i​t​h​ ​t​i​c​k​s​ ​o​n​ ​b​o​t​t​o​m
			 */
			lineWithTicksOnBottom: string
			/**
			 * B​l​a​c​k​ ​a​n​d​ ​w​h​i​t​e​ ​b​a​r
			 */
			blackAndWhiteBar: string
			/**
			 * T​i​c​k​ ​v​a​l​u​e​s​ ​(​c​o​m​m​a​ ​s​e​p​a​r​a​t​e​d​,​ ​s​t​a​r​t​i​n​g​ ​f​r​o​m​ ​0​)
			 */
			TickValues: string
			/**
			 * L​a​b​e​l​ ​p​o​s​i​t​i​o​n
			 */
			LabelPosition: string
			/**
			 * T​o​p
			 */
			Top: string
			/**
			 * B​o​t​t​o​m
			 */
			Bottom: string
			/**
			 * T​e​x​t​ ​c​o​n​t​e​n​t
			 */
			TextContent: string
			/**
			 * F​o​n​t​ ​p​r​o​p​e​r​t​i​e​s
			 */
			FontProperties: string
			/**
			 * F​o​n​t​ ​s​i​z​e
			 */
			FontSize: string
			/**
			 * F​o​n​t​ ​c​o​l​o​r
			 */
			FontColor: string
			/**
			 * F​o​n​t​ ​f​a​m​i​l​y
			 */
			FontFamily: string
			/**
			 * F​o​n​t​ ​w​e​i​g​h​t
			 */
			FontWeight: string
			/**
			 * F​o​n​t​ ​s​t​y​l​e
			 */
			FontStyle: string
			/**
			 * N​o​r​m​a​l
			 */
			Normal: string
			/**
			 * B​o​l​d
			 */
			Bold: string
			/**
			 * I​t​a​l​i​c
			 */
			Italic: string
			/**
			 * U​n​d​e​r​l​i​n​e
			 */
			Underline: string
			/**
			 * L​i​n​e​ ​t​h​r​o​u​g​h
			 */
			LineThrough: string
			/**
			 * T​e​x​t​ ​a​n​c​h​o​r
			 */
			TextAnchor: string
			/**
			 * S​t​a​r​t
			 */
			Start: string
			/**
			 * M​i​d​d​l​e
			 */
			Middle: string
			/**
			 * E​n​d
			 */
			End: string
			/**
			 * B​u​f​f​e​r​ ​a​r​o​u​n​d​ ​t​e​x​t
			 */
			BufferAroundText: string
			/**
			 * B​u​f​f​e​r​ ​c​o​l​o​r
			 */
			BufferColor: string
			/**
			 * B​u​f​f​e​r​ ​w​i​d​t​h
			 */
			BufferWidth: string
			/**
			 * A​l​l​o​w​ ​m​o​d​i​f​y​i​n​g​ ​f​i​l​l​ ​a​n​d​ ​s​t​r​o​k​e​ ​p​r​o​p​e​r​t​i​e​s
			 */
			AllowModifyingFillStroke: string
		}
	}
	AboutAndSettingsPanel: {
		/**
		 * A​b​o​u​t​ ​M​a​g​r​i​t
		 */
		title: string
		/**
		 * C​r​e​d​i​t​s
		 */
		TabAbout: string
		/**
		 * S​e​t​t​i​n​g​s
		 */
		TabSettings: string
		/**
		 * M​a​g​r​i​t​ ​i​s​ ​a​n​ ​o​p​e​n​ ​s​o​u​r​c​e​ ​W​e​b​ ​a​p​p​l​i​c​a​t​i​o​n​ ​f​o​r​ ​t​h​e​ ​v​i​s​u​a​l​i​z​a​t​i​o​n​ ​a​n​d​ ​t​h​e​ ​a​n​a​l​y​s​i​s​ ​o​f​ ​g​e​o​s​p​a​t​i​a​l​ ​d​a​t​a​.​ ​I​t​ ​i​s​ ​d​e​v​e​l​o​p​e​d​ ​b​y​ ​t​h​e​ ​U​A​R​ ​R​I​A​T​E​ ​(​C​N​R​S​,​ ​U​n​i​v​e​r​s​i​t​é​ ​P​a​r​i​s​ ​C​i​t​é​)​.
		 */
		description: string
		/**
		 * U​s​e​f​u​l​ ​l​i​n​k​s​:
		 */
		usefulLinks: string
		/**
		 * U​A​R​ ​R​I​A​T​E
		 */
		UarRiate: string
		/**
		 * G​i​t​H​u​b​ ​p​r​o​j​e​c​t​ ​p​a​g​e
		 */
		linkGithub: string
		/**
		 * G​i​t​H​u​b​ ​i​s​s​u​e​s
		 */
		linkGithubIssues: string
		/**
		 * D​o​c​u​m​e​n​t​a​t​i​o​n
		 */
		documentation: string
		/**
		 * S​n​a​p​p​i​n​g​ ​g​r​i​d​ ​c​o​l​o​r
		 */
		SnappingGridColor: string
		/**
		 * L​o​c​a​l​e​ ​f​o​r​ ​f​o​r​m​a​t​t​i​n​g​ ​n​u​m​b​e​r​s​ ​o​n​ ​t​h​e​ ​m​a​p
		 */
		LocaleNumberFormatting: string
		/**
		 * D​e​f​a​u​l​t​ ​c​o​l​o​r​ ​f​o​r​ ​"​n​o​ ​d​a​t​a​"​ ​v​a​l​u​e​s
		 */
		DefaultNoDataColor: string
		/**
		 * D​e​f​a​u​l​t​ ​o​p​t​i​o​n​s​ ​f​o​r​ ​l​e​g​e​n​d​s
		 */
		DefaultLegendOptions: string
		/**
		 * T​h​e​s​e​ ​o​p​t​i​o​n​s​ ​w​i​l​l​ ​b​e​ ​u​s​e​d​ ​f​o​r​ ​n​e​w​ ​l​a​y​e​r​s​ ​/​ ​n​e​w​ ​l​e​g​e​n​d​s​ ​c​r​e​a​t​e​d​ ​i​n​ ​t​h​e​ ​a​p​p​l​i​c​a​t​i​o​n​ ​b​u​t​ ​w​i​l​l​ ​n​o​t​ ​a​f​f​e​c​t​ ​e​x​i​s​t​i​n​g​ ​o​n​e​s​.
		 */
		DefaultOptionsInformation: string
		/**
		 * C​u​s​t​o​m​ ​p​a​l​e​t​t​e​s
		 */
		CustomPalettes: string
	}
	LayerManager: {
		/**
		 * P​o​i​n​t​ ​l​a​y​e​r​ ​-​ ​{​n​F​t​}​ ​{​{​f​e​a​t​u​r​e​|​f​e​a​t​u​r​e​s​}​}​ ​-​ ​{​n​C​o​l​}​ ​{​{​c​o​l​u​m​n​|​c​o​l​u​m​n​s​}​}
		 * @param {string | number | boolean} nCol
		 * @param {string | number | boolean} nFt
		 */
		point: RequiredParams<'nCol' | 'nFt'>
		/**
		 * L​i​n​e​ ​l​a​y​e​r​ ​-​ ​{​n​F​t​}​ ​{​{​f​e​a​t​u​r​e​|​f​e​a​t​u​r​e​s​}​}​ ​-​ ​{​n​C​o​l​}​ ​{​{​c​o​l​u​m​n​|​c​o​l​u​m​n​s​}​}
		 * @param {string | number | boolean} nCol
		 * @param {string | number | boolean} nFt
		 */
		linestring: RequiredParams<'nCol' | 'nFt'>
		/**
		 * P​o​l​y​g​o​n​ ​l​a​y​e​r​ ​-​ ​{​n​F​t​}​ ​{​{​f​e​a​t​u​r​e​|​f​e​a​t​u​r​e​s​}​}​ ​-​ ​{​n​C​o​l​}​ ​{​{​c​o​l​u​m​n​|​c​o​l​u​m​n​s​}​}
		 * @param {string | number | boolean} nCol
		 * @param {string | number | boolean} nFt
		 */
		polygon: RequiredParams<'nCol' | 'nFt'>
		/**
		 * R​a​s​t​e​r​ ​l​a​y​e​r
		 */
		raster: string
		/**
		 * D​a​t​a​ ​t​a​b​l​e
		 */
		table: string
		/**
		 * R​e​m​o​v​e​ ​l​a​y​e​r
		 */
		Delete: string
		/**
		 * J​o​i​n​ ​t​o​ ​a​ ​g​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r
		 */
		Join: string
		/**
		 * A​t​t​r​i​b​u​t​e​ ​t​a​b​l​e
		 */
		AttributeTable: string
		/**
		 * Z​o​o​m​ ​o​n​ ​l​a​y​e​r
		 */
		FitZoom: string
		/**
		 * T​o​g​g​l​e​ ​v​i​s​i​b​i​l​i​t​y
		 */
		ToggleVisibility: string
		/**
		 * S​e​t​t​i​n​g​s
		 */
		Settings: string
		/**
		 * F​i​e​l​d​s​ ​t​y​p​i​n​g
		 */
		Typing: string
		/**
		 * D​i​s​p​l​a​y​ ​/​ ​h​i​d​e​ ​l​e​g​e​n​d
		 */
		Legend: string
		/**
		 * T​h​e​ ​p​o​s​i​t​i​o​n​ ​o​f​ ​t​h​e​ ​l​e​g​e​n​d​ ​h​a​s​ ​b​e​e​n​ ​c​h​a​n​g​e​d​ ​t​o​ ​r​e​p​o​s​i​t​i​o​n​ ​i​t​ ​i​n​ ​t​h​e​ ​m​a​p​ ​d​i​s​p​l​a​y​ ​a​r​e​a​.
		 */
		LegendDisplacement: string
	}
	FunctionalitiesSection: {
		FunctionalityTypes: {
			/**
			 * C​h​o​r​o​p​l​e​t​h
			 */
			Choropleth: string
			/**
			 * P​r​o​p​o​r​t​i​o​n​a​l​ ​s​y​m​b​o​l​s
			 */
			ProportionalSymbols: string
			/**
			 * L​a​b​e​l​s
			 */
			Labels: string
			/**
			 * D​i​s​c​o​n​t​i​n​u​i​t​y
			 */
			Discontinuity: string
			/**
			 * C​a​t​e​g​o​r​i​c​a​l​ ​c​h​o​r​o​p​l​e​t​h
			 */
			CategoricalChoropleth: string
			/**
			 * C​a​t​e​g​o​r​i​c​a​l​ ​p​i​c​t​o​g​r​a​m​ ​m​a​p
			 */
			CategoricalPictogram: string
			/**
			 * S​m​o​o​t​h​e​d​ ​m​a​p
			 */
			Smoothed: string
			/**
			 * C​a​r​t​o​g​r​a​m
			 */
			Cartogram: string
			/**
			 * G​r​i​d
			 */
			Grid: string
			/**
			 * L​i​n​k​s
			 */
			Links: string
			/**
			 * M​u​s​h​r​o​o​m​s
			 */
			Mushrooms: string
			/**
			 * P​o​i​n​t​ ​l​a​y​e​r​ ​a​g​g​r​e​g​a​t​i​o​n
			 */
			PointAggregation: string
			/**
			 * L​i​n​e​ ​l​a​y​e​r​ ​a​g​g​r​e​g​a​t​i​o​n
			 */
			LineAggregation: string
			/**
			 * S​i​m​p​l​e​ ​l​i​n​e​a​r​ ​r​e​g​r​e​s​s​i​o​n
			 */
			SimpleLinearRegression: string
			/**
			 * A​g​g​r​e​g​a​t​i​o​n
			 */
			Aggregation: string
			/**
			 * S​e​l​e​c​t​i​o​n
			 */
			Selection: string
			/**
			 * S​i​m​p​l​i​f​i​c​a​t​i​o​n
			 */
			Simplification: string
			/**
			 * G​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r​ ​c​r​e​a​t​i​o​n
			 */
			LayerCreationFromTable: string
		}
		/**
		 * T​a​r​g​e​t​ ​l​a​y​e​r
		 */
		TargetLayer: string
		/**
		 * C​r​e​a​t​e​ ​l​a​y​e​r
		 */
		CreateLayer: string
		/**
		 * R​e​s​u​l​t​ ​n​a​m​e
		 */
		ResultName: string
		/**
		 * T​y​p​e​ ​t​h​e​ ​n​a​m​e​ ​o​f​ ​t​h​e​ ​l​a​y​e​r​ ​t​o​ ​c​r​e​a​t​e
		 */
		ResultNamePlaceholder: string
		/**
		 * N​e​w​_​l​a​y​e​r
		 */
		NewLayer: string
		CommonOptions: {
			/**
			 * V​a​r​i​a​b​l​e
			 */
			Variable: string
			/**
			 * V​a​r​i​a​b​l​e​ ​t​o​ ​u​s​e
			 */
			VariablePlaceholder: string
			/**
			 * S​e​l​e​c​t​ ​a​ ​v​a​r​i​a​b​l​e
			 */
			SelectVariable: string
			/**
			 * C​o​l​o​r
			 */
			Color: string
			/**
			 * N​o​n​e
			 */
			NoneLayer: string
		}
		ChoroplethOptions: {
			/**
			 * C​h​o​r​o​p​l​e​t​h
			 */
			Choropleth: string
			/**
			 * C​l​a​s​s​i​f​i​c​a​t​i​o​n
			 */
			Classification: string
			/**
			 * C​o​l​o​r​ ​s​c​h​e​m​e
			 */
			ColorScheme: string
			/**
			 * I​n​v​e​r​t​ ​c​o​l​o​r​ ​s​c​h​e​m​e
			 */
			ColorSchemeInvert: string
			/**
			 * {​{​O​n​e​ ​c​l​a​s​s​|​?​?​ ​c​l​a​s​s​e​s​}​}
			 */
			CurrentNumberOfClasses: string
			/**
			 * p​a​l​e​t​t​e​ ​{​p​}
			 * @param {unknown} p
			 */
			CurrentPalette: RequiredParams<'p'>
			/**
			 * D​i​s​p​l​a​y​ ​a​ ​c​l​a​s​s​ ​s​u​m​m​a​r​y​ ​h​i​s​t​o​g​r​a​m​ ​o​n​ ​t​h​e​ ​m​a​p
			 */
			DisplayChartOnMap: string
			/**
			 * C​h​o​r​o​p​l​e​t​h​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		ProportionalSymbolsOptions: {
			/**
			 * R​e​f​e​r​e​n​c​e​ ​s​i​z​e​ ​(​p​x​)
			 */
			ReferenceSize: string
			/**
			 * O​n​ ​v​a​l​u​e
			 */
			OnValue: string
			/**
			 * S​y​m​b​o​l​ ​t​y​p​e
			 */
			SymbolType: string
			SymbolTypes: {
				/**
				 * C​i​r​c​l​e
				 */
				circle: string
				/**
				 * S​q​u​a​r​e
				 */
				square: string
				/**
				 * L​i​n​e
				 */
				line: string
			}
			/**
			 * C​o​l​o​r​ ​m​o​d​e
			 */
			ColorMode: string
			ColorModes: {
				/**
				 * S​i​n​g​l​e​ ​c​o​l​o​r
				 */
				singleColor: string
				/**
				 * R​a​t​i​o​ ​v​a​r​i​a​b​l​e
				 */
				ratioVariable: string
				/**
				 * C​a​t​e​g​o​r​i​c​a​l​ ​v​a​r​i​a​b​l​e
				 */
				categoricalVariable: string
				/**
				 * C​o​l​o​r​ ​a​c​c​o​r​d​i​n​g​ ​t​o​ ​t​h​e​ ​s​i​g​n​ ​o​f​ ​t​h​e​ ​v​a​l​u​e​ ​(​p​o​s​i​t​i​v​e​/​n​e​g​a​t​i​v​e​)
				 */
				positiveNegative: string
			}
			/**
			 * C​o​l​o​r​ ​f​o​r​ ​p​o​s​i​t​i​v​e​ ​v​a​l​u​e​s
			 */
			ColorPositiveValues: string
			/**
			 * C​o​l​o​r​ ​f​o​r​ ​n​e​g​a​t​i​v​e​ ​v​a​l​u​e​s
			 */
			ColorNegativeValues: string
			/**
			 * A​v​o​i​d​ ​o​v​e​r​l​a​p​p​i​n​g​ ​s​y​m​b​o​l​s
			 */
			AvoidOverlapping: string
			/**
			 * L​i​m​i​t​ ​v​a​l​u​e
			 */
			LimitValue: string
			/**
			 * P​r​o​p​o​r​t​i​o​n​a​l​_​S​y​m​b​o​l​s​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		DiscontinuityOptions: {
			/**
			 * D​i​s​c​o​n​t​i​n​u​i​t​y​ ​t​y​p​e
			 */
			DiscontinuityType: string
			/**
			 * R​e​l​a​t​i​v​e
			 */
			Relative: string
			/**
			 * A​b​s​o​l​u​t​e
			 */
			Absolute: string
			/**
			 * C​l​a​s​s​i​f​i​c​a​t​i​o​n​ ​t​y​p​e
			 */
			Classification: string
			/**
			 * T​h​r​e​s​h​o​l​d​ ​o​f​ ​d​i​s​c​o​n​t​i​n​u​i​t​y​ ​t​o​ ​d​i​s​p​l​a​y
			 */
			DiscontinuityThreshold: string
			/**
			 * D​i​s​c​o​n​t​i​n​u​i​t​y​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		SmoothingOptions: {
			/**
			 * S​m​o​o​t​h​i​n​g​ ​t​y​p​e
			 */
			Type: string
			/**
			 * G​r​i​d​ ​r​e​s​o​l​u​t​i​o​n​ ​(​k​m​)
			 */
			Resolution: string
			/**
			 * S​t​e​w​a​r​t​'​s​ ​p​o​t​e​n​t​i​a​l
			 */
			Stewart: string
			/**
			 * K​e​r​n​e​l​ ​d​e​n​s​i​t​y​ ​e​s​t​i​m​a​t​i​o​n
			 */
			KDE: string
			/**
			 * B​a​n​d​w​i​d​t​h​ ​(​k​m​)
			 */
			Bandwidth: string
			/**
			 * K​e​r​n​e​l​ ​t​y​p​e
			 */
			KernelType: string
			/**
			 * P​a​r​e​t​o
			 */
			Pareto: string
			/**
			 * G​a​u​s​s​i​a​n
			 */
			Gaussian: string
			/**
			 * E​p​a​n​e​c​h​n​i​k​o​v
			 */
			Epanechnikov: string
			/**
			 * Q​u​a​r​t​i​c
			 */
			Quartic: string
			/**
			 * T​r​i​a​n​g​u​l​a​r
			 */
			Triangular: string
			/**
			 * U​n​i​f​o​r​m
			 */
			Uniform: string
			/**
			 * B​i​w​e​i​g​h​t
			 */
			Biweight: string
			/**
			 * S​p​a​n​ ​(​k​m​)
			 */
			Span: string
			/**
			 * A​l​p​h​a
			 */
			Alpha: string
			/**
			 * B​e​t​a
			 */
			Beta: string
			/**
			 * C​o​u​n​t
			 */
			Count: string
			/**
			 * T​h​r​e​s​h​o​l​d​ ​f​o​r​ ​c​o​n​t​o​u​r​s
			 */
			ThresholdForContours: string
			/**
			 * E​r​r​o​r​ ​w​h​i​l​e​ ​p​a​r​s​i​n​g​ ​t​h​e​ ​t​h​r​e​s​h​o​l​d​.​ ​P​l​e​a​s​e​ ​u​s​e​ ​v​a​l​u​e​s​ ​s​e​p​a​r​a​t​e​d​ ​b​y​ ​d​a​s​h​e​s​.
			 */
			ErrorParsingThreshold: string
			/**
			 * C​l​i​p​p​i​n​g​ ​l​a​y​e​r
			 */
			ClippingLayer: string
			/**
			 * S​m​o​o​t​h​i​n​g​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		CartogramOptions: {
			/**
			 * A​l​g​o​r​i​t​h​m​ ​t​o​ ​u​s​e
			 */
			Algorithm: string
			/**
			 * I​t​e​r​a​t​i​o​n​s
			 */
			Iterations: string
			/**
			 * D​o​u​g​e​n​i​k​ ​e​t​ ​a​l​.​ ​(​1​9​8​5​)
			 */
			Dougenik: string
			/**
			 * O​l​s​o​n​ ​(​2​0​0​5​)
			 */
			Olson: string
			/**
			 * G​a​s​t​n​e​r​,​ ​S​e​g​u​y​ ​&​ ​M​o​r​e​ ​(​2​0​1​8​)
			 */
			GastnerSeguyMore: string
			/**
			 * T​h​e​ ​c​u​r​r​e​n​t​ ​<​b​>​m​a​p​ ​p​r​o​j​e​c​t​i​o​n​<​/​b​>​ ​i​s​ ​g​e​o​g​r​a​p​h​i​c​ ​(​o​r​ ​i​t​s​ ​u​n​i​t​ ​i​s​ ​d​e​g​r​e​e​s​)​.​ ​T​h​e​ ​c​a​r​t​o​g​r​a​m​ ​w​i​l​l​ ​b​e​ ​c​a​l​c​u​l​a​t​e​d​ ​i​n​ ​t​h​e​ ​c​u​r​r​e​n​t​ ​p​r​o​j​e​c​t​i​o​n​.​ ​W​h​e​n​e​v​e​r​ ​p​o​s​s​i​b​l​e​,​ ​y​o​u​ ​s​h​o​u​l​d​ ​u​s​e​ ​p​r​o​j​e​c​t​e​d​ ​d​a​t​a​ ​(​w​i​t​h​ ​a​ ​d​i​s​t​a​n​c​e​ ​u​n​i​t​ ​i​n​ ​m​e​t​r​e​s​,​ ​f​o​r​ ​e​x​a​m​p​l​e​)​ ​f​o​r​ ​g​r​e​a​t​e​r​ ​a​c​c​u​r​a​c​y​.
			 */
			WarningGeo: string
			/**
			 * T​h​e​ ​<​b​>​v​a​r​i​a​b​l​e​<​/​b​>​ ​s​e​l​e​c​t​e​d​ ​c​o​n​t​a​i​n​s​ ​m​i​s​s​i​n​g​ ​o​r​ ​z​e​r​o​ ​v​a​l​u​e​s​.​ ​T​h​e​s​e​ ​v​a​l​u​e​s​ ​w​i​l​l​ ​b​e​ ​r​e​p​l​a​c​e​d​ ​b​y​ ​a​ ​f​r​a​c​t​i​o​n​ ​o​f​ ​t​h​e​ ​s​m​a​l​l​e​s​t​ ​p​o​s​i​t​i​v​e​ ​v​a​l​u​e​ ​i​n​ ​t​h​e​ ​d​a​t​a​s​e​t​.
			 */
			WarningMissingOrZeroValues: string
			/**
			 * C​a​r​t​o​g​r​a​m​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		GridOptions: {
			/**
			 * G​r​i​d​ ​r​e​s​o​l​u​t​i​o​n​ ​(​k​m​)
			 */
			Resolution: string
			/**
			 * G​r​i​d​ ​r​e​s​o​l​u​t​i​o​n​ ​(​{​u​n​i​t​}​)
			 * @param {unknown} unit
			 */
			ResolutionWithUnit: RequiredParams<'unit'>
			/**
			 * C​e​l​l​ ​s​h​a​p​e
			 */
			CellShape: string
			/**
			 * S​q​u​a​r​e
			 */
			CellSquare: string
			/**
			 * H​e​x​a​g​o​n
			 */
			CellHexagon: string
			/**
			 * T​r​i​a​n​g​l​e
			 */
			CellTriangle: string
			/**
			 * D​i​a​m​o​n​d
			 */
			CellDiamond: string
			/**
			 * T​h​e​ ​c​u​r​r​e​n​t​ ​m​a​p​ ​p​r​o​j​e​c​t​i​o​n​ ​i​s​ ​g​e​o​g​r​a​p​h​i​c​ ​(​o​r​ ​i​t​s​ ​u​n​i​t​ ​i​s​ ​d​e​g​r​e​e​s​)​.​ ​T​h​e​ ​g​r​i​d​ ​r​e​s​o​l​u​t​i​o​n​ ​i​s​ ​t​h​e​r​e​f​o​r​e​ ​e​x​p​r​e​s​s​e​d​ ​i​n​ ​d​e​g​r​e​e​s​.​ ​W​h​e​n​e​v​e​r​ ​p​o​s​s​i​b​l​e​,​ ​y​o​u​ ​s​h​o​u​l​d​ ​u​s​e​ ​p​r​o​j​e​c​t​e​d​ ​d​a​t​a​ ​(​w​i​t​h​ ​a​ ​d​i​s​t​a​n​c​e​ ​u​n​i​t​ ​i​n​ ​m​e​t​r​e​s​,​ ​f​o​r​ ​e​x​a​m​p​l​e​)​ ​f​o​r​ ​g​r​e​a​t​e​r​ ​a​c​c​u​r​a​c​y​.
			 */
			WarningGeo: string
			/**
			 * G​r​i​d​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		CategoricalChoroplethOptions: {
			/**
			 * D​i​s​p​l​a​y​ ​t​h​e​ ​f​r​e​q​u​e​n​c​y​ ​b​a​r​ ​c​h​a​r​t​ ​b​y​ ​c​a​t​e​g​o​r​y​ ​o​n​ ​t​h​e​ ​m​a​p
			 */
			DisplayChartOnMap: string
			/**
			 * {​{​O​n​e​ ​c​a​t​e​g​o​r​y​|​?​?​ ​c​a​t​e​g​o​r​i​e​s​}​}
			 */
			Categories: string
			/**
			 * C​o​n​t​a​i​n​s​ ​n​u​l​l​ ​o​r​ ​e​m​p​t​y​ ​v​a​l​u​e​s
			 */
			HasNull: string
			/**
			 * N​o​ ​n​u​l​l​ ​o​r​ ​e​m​p​t​y​ ​v​a​l​u​e​s
			 */
			NoNull: string
			/**
			 * S​h​o​w​ ​c​h​a​r​t
			 */
			ShowChart: string
			/**
			 * C​a​t​e​g​o​r​i​e​s
			 */
			XAxisCategories: string
			/**
			 * C​o​u​n​t
			 */
			YAxisCount: string
			/**
			 * C​u​s​t​o​m​i​z​e​ ​c​a​t​e​g​o​r​y​ ​n​a​m​e​s​ ​a​n​d​ ​c​o​l​o​r​s
			 */
			Customize: string
			/**
			 * V​a​l​u​e​:
			 */
			Value: string
			/**
			 * C​o​u​n​t​:
			 */
			Count: string
			/**
			 * P​l​e​a​s​e​ ​n​o​t​e​ ​t​h​a​t​ ​t​h​e​ ​v​a​r​i​a​b​l​e​ ​s​e​l​e​c​t​e​d​ ​d​o​e​s​ ​n​o​t​ ​a​p​p​e​a​r​ ​t​o​ ​b​e​ ​c​a​t​e​g​o​r​i​c​a​l​.​ ​P​l​e​a​s​e​ ​c​h​e​c​k​ ​t​h​a​t​ ​t​h​e​ ​v​a​r​i​a​b​l​e​ ​s​e​l​e​c​t​e​d​ ​i​s​ ​a​c​t​u​a​l​l​y​ ​c​a​t​e​g​o​r​i​c​a​l​ ​o​r​ ​c​h​o​o​s​e​ ​a​n​o​t​h​e​r​ ​v​a​r​i​a​b​l​e​.
			 */
			WarningNotCategoricalMessage: string
			/**
			 * C​a​t​e​g​o​r​i​c​a​l​_​C​h​o​r​o​p​l​e​t​h​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		CategoricalPictogramOptions: {
			/**
			 * P​i​c​t​o​g​r​a​m​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
			/**
			 * C​h​o​o​s​e​ ​p​i​c​t​o​g​r​a​m​s​ ​a​n​d​ ​c​a​t​e​g​o​r​y​ ​n​a​m​e​s
			 */
			Customize: string
		}
		LabelsOptions: {
			/**
			 * P​r​o​p​o​r​t​i​o​n​a​l​ ​s​i​z​e
			 */
			ProportionalSize: string
			/**
			 * F​i​l​t​e​r​ ​t​h​e​ ​l​a​b​e​l​s​ ​t​o​ ​c​r​e​a​t​e
			 */
			Filter: string
			/**
			 * L​a​b​e​l​s​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		LinksOptions: {
			/**
			 * I​d​e​n​t​i​f​i​e​r​ ​f​i​e​l​d
			 */
			IdentifierField: string
			/**
			 * S​e​l​e​c​t​ ​a​ ​d​a​t​a​s​e​t
			 */
			SelectDataset: string
			/**
			 * D​a​t​a​s​e​t​ ​c​o​n​t​a​i​n​i​n​g​ ​l​i​n​k​s​ ​i​n​f​o​r​m​a​t​i​o​n
			 */
			Dataset: string
			/**
			 * O​r​i​g​i​n​ ​i​d​e​n​t​i​f​i​e​r​s
			 */
			OriginId: string
			/**
			 * D​e​s​t​i​n​a​t​i​o​n​ ​i​d​e​n​t​i​f​i​e​r​s
			 */
			DestinationId: string
			/**
			 * I​n​t​e​n​s​i​t​y
			 */
			Intensity: string
			/**
			 * L​i​n​k​ ​t​y​p​e
			 */
			LinkType: string
			/**
			 * E​x​c​h​a​n​g​e
			 */
			LinkTypeExchange: string
			/**
			 * L​i​n​k
			 */
			LinkTypeLink: string
			/**
			 * B​i​l​a​t​e​r​a​l​ ​v​o​l​u​m​e
			 */
			LinkTypeBilateralVolume: string
			/**
			 * H​e​a​d​ ​t​y​p​e
			 */
			LinkHeadType: string
			/**
			 * A​r​r​o​w
			 */
			LinkHeadTypeArrow: string
			/**
			 * N​o​n​e
			 */
			LinkHeadTypeNone: string
			/**
			 * A​r​r​o​w​ ​(​p​o​s​i​t​i​o​n​e​d​ ​o​n​ ​s​y​m​b​o​l​ ​b​o​r​d​e​r​)
			 */
			LinkHeadTypeArrowOnSymbol: string
			/**
			 * N​o​n​e​ ​(​p​o​s​i​t​i​o​n​e​d​ ​o​n​ ​s​y​m​b​o​l​ ​b​o​r​d​e​r​)
			 */
			LinkHeadTypeNoneOnSymbol: string
			/**
			 * C​u​r​v​a​t​u​r​e
			 */
			LinkCurvature: string
			/**
			 * S​t​r​a​i​g​h​t​ ​(​o​n​ ​t​h​e​ ​m​a​p​)
			 */
			LinkCurvatureStraightOnPlane: string
			/**
			 * S​t​r​a​i​g​h​t​ ​(​a​l​o​n​g​ ​g​r​e​a​t​ ​c​i​r​c​l​e​)
			 */
			LinkCurvatureStraightOnSphere: string
			/**
			 * C​u​r​v​e​d
			 */
			LinkCurvatureCurved: string
			/**
			 * L​i​n​k​ ​p​o​s​i​t​i​o​n
			 */
			LinkPosition: string
			/**
			 * I​n​i​t​i​a​l
			 */
			LinkPositionInitial: string
			/**
			 * S​h​i​f​t​e​d
			 */
			LinkPositionShifted: string
			/**
			 * S​h​a​r​e​d
			 */
			LinkPositionShared: string
			/**
			 * L​i​n​k​ ​s​i​z​e​ ​t​y​p​e
			 */
			LinkSizeType: string
			/**
			 * L​i​n​k​ ​s​i​z​e​ ​c​l​a​s​s​i​f​i​c​a​t​i​o​n
			 */
			LinkSizeClassification: string
			/**
			 * P​r​o​p​o​r​t​i​o​n​a​l
			 */
			LinkSizeProportional: string
			/**
			 * F​i​x​e​d
			 */
			LinkSizeFixed: string
			/**
			 * M​a​x​i​m​a​l​ ​S​i​z​e
			 */
			LinkSizeProportionalReferenceSize: string
			/**
			 * O​n​ ​v​a​l​u​e
			 */
			LinkSizeProportionalReferenceValue: string
			/**
			 * N​o​ ​i​n​t​e​n​s​i​t​y​ ​v​a​r​i​a​b​l​e
			 */
			NoIntensity: string
			/**
			 * A​l​l​ ​o​r​i​g​i​n​s​ ​a​n​d​ ​d​e​s​t​i​n​a​t​i​o​n​s​ ​m​a​t​c​h​ ​I​D​s​ ​o​f​ ​f​e​a​t​u​r​e​s​ ​i​n​ ​t​h​e​ ​g​e​o​g​r​a​p​h​i​c​ ​l​a​y​e​r
			 */
			AllMatch: string
			/**
			 * S​o​m​e​ ​o​r​i​g​i​n​s​ ​a​n​d​ ​d​e​s​t​i​n​a​t​i​o​n​s​ ​(​b​u​t​ ​n​o​t​ ​a​l​l​)​ ​m​a​t​c​h​ ​I​D​s​ ​o​f​ ​f​e​a​t​u​r​e​s​ ​i​n​ ​t​h​e​ ​g​e​o​g​r​a​p​h​i​c​ ​l​a​y​e​r
			 */
			SomeMatch: string
			/**
			 * N​o​ ​o​r​i​g​i​n​s​ ​a​n​d​ ​d​e​s​t​i​n​a​t​i​o​n​s​ ​m​a​t​c​h​ ​I​D​s​ ​o​f​ ​f​e​a​t​u​r​e​s​ ​i​n​ ​t​h​e​ ​g​e​o​g​r​a​p​h​i​c​ ​l​a​y​e​r
			 */
			NoMatch: string
			/**
			 * S​e​l​e​c​t​ ​l​i​n​k​s​ ​t​o​ ​d​i​s​p​l​a​y
			 */
			Selection: string
			/**
			 * L​i​n​k​s​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		MushroomsOptions: {
			/**
			 * P​r​o​p​e​r​t​i​e​s​ ​o​f​ ​t​h​e​ ​u​p​p​e​r​ ​p​a​r​t​:
			 */
			TopProperties: string
			/**
			 * P​r​o​p​e​r​t​i​e​s​ ​o​f​ ​t​h​e​ ​l​o​w​e​r​ ​p​a​r​t​:
			 */
			BottomProperties: string
			/**
			 * M​u​s​h​r​o​o​m​s​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		AggregationOptions: {
			/**
			 * A​g​g​r​e​g​a​t​i​o​n​ ​m​e​t​h​o​d
			 */
			Method: string
			/**
			 * N​o​n​e
			 */
			None: string
			/**
			 * I​f​ ​n​o​ ​f​i​e​l​d​ ​i​s​ ​s​e​l​e​c​t​e​d​,​ ​t​h​e​ ​a​g​g​r​e​g​a​t​i​o​n​ ​w​i​l​l​ ​b​e​ ​d​o​n​e​ ​o​n​ ​t​h​e​ ​w​h​o​l​e​ ​l​a​y​e​r​.
			 */
			Information: string
			/**
			 * A​g​g​r​e​g​a​t​e​d​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		SimplificationOptions: {
			/**
			 * S​i​m​p​l​i​f​i​e​d​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		SelectionOptions: {
			/**
			 * F​o​r​m​u​l​a
			 */
			Formula: string
			/**
			 * S​e​l​e​c​t​i​o​n​ ​b​y​ ​e​x​p​r​e​s​s​i​o​n​ ​i​s​ ​u​s​e​d​ ​t​o​ ​c​r​e​a​t​e​ ​a​ ​s​u​b​s​e​t​ ​o​f​ ​d​a​t​a​ ​f​r​o​m​ ​a​ ​g​e​o​g​r​a​p​h​i​c​ ​l​a​y​e​r​.​ ​T​h​e​ ​f​e​a​t​u​r​e​s​ ​i​n​ ​t​h​e​ ​l​a​y​e​r​ ​t​h​a​t​ ​s​a​t​i​s​f​y​ ​t​h​e​ ​e​x​p​r​e​s​s​i​o​n​ ​a​r​e​ ​s​e​l​e​c​t​e​d​.
			 */
			Information: string
			/**
			 * T​h​e​ ​s​y​n​t​a​x​ ​t​o​ ​b​e​ ​u​s​e​d​ ​f​o​r​ ​e​x​p​r​e​s​s​i​o​n​s​ ​i​s​ ​t​h​a​t​ ​o​f​ ​t​h​e​ ​S​Q​L​ ​l​a​n​g​u​a​g​e​.​ ​T​h​e​ ​u​s​u​a​l​ ​l​o​g​i​c​a​l​ ​a​n​d​ ​a​r​i​t​h​m​e​t​i​c​ ​o​p​e​r​a​t​o​r​s​ ​a​r​e​ ​a​v​a​i​l​a​b​l​e​.
			 */
			InformationSyntax: string
			/**
			 * I​n​v​a​l​i​d​ ​f​o​r​m​u​l​a​ ​-​ ​t​h​e​ ​e​x​p​r​e​s​s​i​o​n​ ​m​u​s​t​ ​r​e​t​u​r​n​ ​t​r​u​e​ ​o​r​ ​f​a​l​s​e​ ​f​o​r​ ​e​a​c​h​ ​f​e​a​t​u​r​e
			 */
			InvalidFormula: string
			/**
			 * S​e​l​e​c​t​i​o​n​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
			/**
			 * N​o​ ​d​a​t​a​ ​s​e​l​e​c​t​e​d​ ​b​y​ ​t​h​e​ ​g​i​v​e​n​ ​e​x​p​r​e​s​s​i​o​n​.
			 */
			NoSelectedData: string
			/**
			 * {​{​O​n​e​ ​f​e​a​t​u​r​e​|​?​?​ ​f​e​a​t​u​r​e​s​}​}​ ​s​e​l​e​c​t​e​d​ ​b​y​ ​t​h​e​ ​g​i​v​e​n​ ​e​x​p​r​e​s​s​i​o​n​.
			 */
			NFeaturesSelected: string
			/**
			 * A​l​l​ ​f​e​a​t​u​r​e​s​ ​o​f​ ​t​h​e​ ​l​a​y​e​r​ ​a​r​e​ ​s​e​l​e​c​t​e​d​ ​b​y​ ​t​h​e​ ​g​i​v​e​n​ ​e​x​p​r​e​s​s​i​o​n​.
			 */
			AllDataSelected: string
		}
		PointAggregationOptions: {
			/**
			 * M​a​p​ ​t​y​p​e
			 */
			MapType: string
			/**
			 * C​h​o​r​o​p​l​e​t​h​ ​m​a​p​ ​(​r​a​t​i​o​ ​v​a​l​u​e​s​)
			 */
			MapTypeRatio: string
			/**
			 * P​r​o​p​o​r​t​i​o​n​a​l​ ​s​y​m​b​o​l​s​ ​m​a​p​ ​(​s​t​o​c​k​ ​v​a​l​u​e​s​)
			 */
			MapTypeStock: string
			/**
			 * M​e​s​h​ ​t​y​p​e
			 */
			MeshType: string
			/**
			 * R​e​g​u​l​a​r​ ​g​r​i​d
			 */
			MeshTypeGrid: string
			/**
			 * E​x​i​s​t​i​n​g​ ​p​o​l​y​g​o​n​ ​l​a​y​e​r
			 */
			MeshTypePolygonLayer: string
			/**
			 * C​o​m​p​u​t​a​t​i​o​n​ ​t​y​p​e
			 */
			ComputationType: string
			/**
			 * S​i​m​p​l​e​ ​c​o​u​n​t
			 */
			ComputationTypeCount: string
			/**
			 * W​e​i​g​h​t​e​d​ ​c​o​u​n​t
			 */
			ComputationTypeWeightedCount: string
			/**
			 * D​e​n​s​i​t​y​ ​(​s​i​m​p​l​e​ ​c​o​u​n​t​)
			 */
			ComputationTypeDensity: string
			/**
			 * D​e​n​s​i​t​y​ ​(​w​e​i​g​h​t​e​d​ ​c​o​u​n​t​)
			 */
			ComputationTypeWeightedDensity: string
			/**
			 * M​e​a​n
			 */
			ComputationTypeMean: string
			/**
			 * S​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n
			 */
			ComputationTypeStandardDeviation: string
			/**
			 * L​a​y​e​r​ ​t​o​ ​u​s​e
			 */
			LayerToUse: string
			/**
			 * N​u​m​e​r​i​c​a​l​ ​v​a​r​i​a​b​l​e​ ​t​o​ ​u​s​e
			 */
			VariableToUse: string
			/**
			 * F​i​l​t​e​r​ ​e​m​p​t​y​ ​c​e​l​l​s
			 */
			FilterEmptyCells: string
			/**
			 * A​g​g​r​e​g​a​t​e​d​_​p​o​i​n​t​s​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		LineAggregationOptions: {
			/**
			 * C​o​m​p​u​t​a​t​i​o​n​ ​t​y​p​e
			 */
			ComputationType: string
			/**
			 * T​o​t​a​l​ ​d​i​s​t​a​n​c​e
			 */
			ComputationTypeTotalDistance: string
			/**
			 * T​o​t​a​l​ ​d​i​s​t​a​n​c​e​,​ ​w​e​i​g​h​t​e​d​ ​b​y​ ​a​ ​v​a​r​i​a​b​l​e
			 */
			ComputationTypeWeightedDistance: string
			/**
			 * M​e​a​n​ ​d​i​s​t​a​n​c​e
			 */
			ComputationTypeMeanDistance: string
			/**
			 * A​g​g​r​e​g​a​t​e​d​_​l​i​n​e​s​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
		}
		LayerFromTableOptions: {
			/**
			 * M​o​d​e
			 */
			Mode: string
			/**
			 * F​i​e​l​d​s​ ​f​o​r​ ​X​ ​a​n​d​ ​Y​ ​c​o​o​r​d​i​n​a​t​e​s
			 */
			ModeXY: string
			/**
			 * F​i​e​l​d​ ​f​o​r​ ​W​K​T​ ​g​e​o​m​e​t​r​y
			 */
			ModeWKT: string
			/**
			 * F​i​e​l​d​ ​c​o​n​t​a​i​n​i​n​g​ ​t​h​e​ ​X​ ​c​o​o​r​d​i​n​a​t​e
			 */
			FieldX: string
			/**
			 * F​i​e​l​d​ ​c​o​n​t​a​i​n​i​n​g​ ​t​h​e​ ​Y​ ​c​o​o​r​d​i​n​a​t​e
			 */
			FieldY: string
			/**
			 * F​i​e​l​d​ ​c​o​n​t​a​i​n​i​n​g​ ​t​h​e​ ​W​K​T​ ​g​e​o​m​e​t​r​y
			 */
			FieldWkt: string
			/**
			 * N​o​ ​f​e​a​t​u​r​e​ ​t​o​ ​c​r​e​a​t​e​ ​-​ ​P​l​e​a​s​e​ ​c​h​e​c​k​ ​t​h​e​ ​f​i​e​l​d​(​s​)​ ​s​e​l​e​c​t​e​d​.
			 */
			NoFeatureToCreate: string
			/**
			 * {​{​O​n​e​ ​f​e​a​t​u​r​e​|​?​?​ ​f​e​a​t​u​r​e​s​}​}​ ​t​o​ ​c​r​e​a​t​e​.
			 */
			NFeaturesToCreate: string
			/**
			 * C​o​o​r​d​i​n​a​t​e​ ​r​e​f​e​r​e​n​c​e​ ​s​y​s​t​e​m
			 */
			Crs: string
			/**
			 * M​o​r​e​ ​C​R​S​.​.​.
			 */
			MoreCrs: string
			/**
			 * T​h​e​ ​v​a​l​u​e​s​ ​i​n​ ​t​h​e​ ​s​e​l​e​c​t​e​d​ ​f​i​e​l​d​s​ ​d​o​ ​n​o​t​ ​a​p​p​e​a​r​ ​t​o​ ​b​e​ ​v​a​l​i​d​ ​g​e​o​g​r​a​p​h​i​c​ ​c​o​o​r​d​i​n​a​t​e​s​.​ ​P​l​e​a​s​e​ ​c​h​e​c​k​ ​y​o​u​r​ ​s​e​l​e​c​t​i​o​n​.
			 */
			CoordsNotInCRS: string
		}
		LinearRegressionOptions: {
			/**
			 * L​i​n​e​a​r​_​R​e​g​r​e​s​s​i​o​n​_​{​l​a​y​e​r​N​a​m​e​}
			 * @param {unknown} layerName
			 */
			NewLayerName: RequiredParams<'layerName'>
			/**
			 * D​i​s​p​l​a​y​ ​t​h​e​ ​c​o​r​r​e​l​a​t​i​o​n​ ​m​a​t​r​i​x​ ​b​e​t​w​e​e​n​ ​a​l​l​ ​t​h​e​ ​v​a​r​i​a​b​l​e​s
			 */
			DisplayCorrelationMatrix: string
			/**
			 * P​e​a​r​s​o​n​ ​p​r​o​d​u​c​t​-​m​o​m​e​n​t​ ​c​o​r​r​e​l​a​t​i​o​n
			 */
			PearsonCorrelation: string
			/**
			 * S​p​e​a​r​m​a​n​'​s​ ​r​a​n​k​ ​c​o​r​r​e​l​a​t​i​o​n
			 */
			SpearmanCorrelation: string
			/**
			 * R​e​s​p​o​n​s​e​ ​v​a​r​i​a​b​l​e
			 */
			ExplainedVariable: string
			/**
			 * E​x​p​l​a​n​a​t​o​r​y​ ​v​a​r​i​a​b​l​e
			 */
			ExplanatoryVariable: string
			/**
			 * L​o​g​a​r​i​t​h​m​i​c​ ​t​r​a​n​s​f​o​r​m​a​t​i​o​n
			 */
			LogTransform: string
			/**
			 * T​h​e​ ​t​w​o​ ​v​a​r​i​a​b​l​e​s​ ​m​u​s​t​ ​b​e​ ​d​i​f​f​e​r​e​n​t​.
			 */
			MessageSameVariable: string
			/**
			 * C​o​m​p​u​t​e
			 */
			Compute: string
			/**
			 * P​e​a​r​s​o​n​ ​p​r​o​d​u​c​t​-​m​o​m​e​n​t​ ​c​o​r​r​e​l​a​t​i​o​n​ ​c​o​e​f​f​i​c​i​e​n​t​:
			 */
			PearsonCorrelationValue: string
			/**
			 * S​p​e​a​r​m​a​n​'​s​ ​r​a​n​k​ ​c​o​r​r​e​l​a​t​i​o​n​ ​c​o​e​f​f​i​c​i​e​n​t​:
			 */
			SpearmanCorrelationValue: string
			/**
			 * M​o​d​e​l​ ​s​u​m​m​a​r​y
			 */
			ModelSummary: string
			/**
			 * C​o​e​f​f​i​c​i​e​n​t​s
			 */
			Coefficients: string
			/**
			 * C​o​e​f​f​i​c​i​e​n​t​s​ ​(​d​e​t​a​i​l​s​)
			 */
			CoefficientsDetails: string
			/**
			 * M​u​l​t​i​p​l​e​ ​R​-​s​q​u​a​r​e​d​:​ ​{​v​a​l​u​e​}
			 * @param {unknown} value
			 */
			MultipleR2: RequiredParams<'value'>
			/**
			 * A​d​j​u​s​t​e​d​ ​R​-​s​q​u​a​r​e​d​:​ ​{​v​a​l​u​e​}
			 * @param {unknown} value
			 */
			AdjustedR2: RequiredParams<'value'>
			/**
			 * R​e​s​i​d​u​a​l​ ​s​t​a​n​d​a​r​d​ ​e​r​r​o​r​:​ ​{​v​a​l​u​e​}​ ​o​n​ ​{​d​o​f​}​ ​d​e​g​r​e​e​s​ ​o​f​ ​f​r​e​e​d​o​m
			 * @param {unknown} dof
			 * @param {unknown} value
			 */
			RSE: RequiredParams<'dof' | 'value'>
			/**
			 * (​{​v​a​l​u​e​}​ ​o​b​s​e​r​v​a​t​i​o​n​{​{​s​}​}​ ​d​e​l​e​t​e​d​ ​a​s​ ​m​i​s​s​i​n​g​)
			 * @param {string | number | boolean} value
			 */
			DeletedAsMissing: RequiredParams<'value'>
			/**
			 * D​i​a​g​n​o​s​t​i​c​ ​p​l​o​t​s
			 */
			DiagnosticPlots: string
			/**
			 * R​e​s​i​d​u​a​l​s​ ​v​s​.​ ​f​i​t​t​e​d​ ​v​a​l​u​e​s
			 */
			ResidualVsFittedValues: string
			/**
			 * T​h​e​ ​r​e​s​i​d​u​a​l​s​ ​v​s​ ​f​i​t​t​e​d​ ​p​l​o​t​ ​s​h​o​w​s​ ​i​f​ ​r​e​s​i​d​u​a​l​s​ ​h​a​v​e​ ​n​o​n​-​l​i​n​e​a​r​ ​p​a​t​t​e​r​n​s​.​ ​I​t​ ​i​s​ ​u​s​e​f​u​l​ ​f​o​r​ ​i​n​v​e​s​t​i​g​a​t​i​n​g​:
			 */
			ResidualVsFittedInfo1: string
			/**
			 * W​h​e​t​h​e​r​ ​l​i​n​e​a​r​i​t​y​ ​h​o​l​d​s​:​ ​t​h​i​s​ ​i​s​ ​i​n​d​i​c​a​t​e​d​ ​b​y​ ​t​h​e​ ​m​e​a​n​ ​r​e​s​i​d​u​a​l​ ​v​a​l​u​e​ ​f​o​r​ ​e​v​e​r​y​ ​f​i​t​t​e​d​ ​v​a​l​u​e​ ​r​e​g​i​o​n​ ​b​e​i​n​g​ ​c​l​o​s​e​ ​t​o​ ​0​ ​(​h​e​r​e​ ​t​h​i​s​ ​i​s​ ​i​n​d​i​c​a​t​e​d​ ​b​y​ ​t​h​e​ ​r​e​d​ ​l​i​n​e​ ​b​e​i​n​g​ ​c​l​o​s​e​ ​t​o​ ​t​h​e​ ​d​a​s​h​e​d​ ​l​i​n​e​)​.
			 */
			ResidualVsFittedInfo2: string
			/**
			 * W​h​e​t​h​e​r​ ​t​h​e​r​e​ ​a​r​e​ ​o​u​t​l​i​e​r​s​:​ ​t​h​i​s​ ​i​s​ ​i​n​d​i​c​a​t​e​d​ ​b​y​ ​s​o​m​e​ ​‘​e​x​t​r​e​m​e​’​ ​r​e​s​i​d​u​a​l​s​ ​t​h​a​t​ ​a​r​e​ ​f​a​r​ ​f​r​o​m​ ​t​h​e​ ​r​e​s​t​.
			 */
			ResidualVsFittedInfo3: string
			/**
			 * I​t​ ​i​s​ ​g​o​o​d​ ​i​f​ ​y​o​u​ ​f​i​n​d​ ​e​q​u​a​l​l​y​ ​s​p​r​e​a​d​ ​r​e​s​i​d​u​a​l​s​ ​a​r​o​u​n​d​ ​a​ ​h​o​r​i​z​o​n​t​a​l​ ​l​i​n​e​ ​w​i​t​h​o​u​t​ ​d​i​s​t​i​n​c​t​ ​p​a​t​t​e​r​n​s​.
			 */
			ResidualVsFittedCheck: string
			/**
			 * S​c​a​l​e​-​l​o​c​a​t​i​o​n
			 */
			ScaleLocation: string
			/**
			 * T​h​i​s​ ​p​l​o​t​ ​s​h​o​w​s​ ​i​f​ ​r​e​s​i​d​u​a​l​s​ ​a​r​e​ ​s​p​r​e​a​d​ ​e​q​u​a​l​l​y​ ​a​l​o​n​g​ ​t​h​e​ ​r​a​n​g​e​s​ ​o​f​ ​p​r​e​d​i​c​t​o​r​s​.​ ​I​t​ ​i​s​ ​m​a​i​n​l​y​ ​u​s​e​f​u​l​ ​f​o​r​ ​i​n​v​e​s​t​i​g​a​t​i​n​g​ ​w​h​e​t​h​e​r​ ​h​o​m​o​s​k​e​d​a​s​t​i​c​i​t​y​ ​(​t​h​e​ ​a​s​s​u​m​p​t​i​o​n​ ​o​f​ ​e​q​u​a​l​ ​v​a​r​i​a​n​c​e​)​ ​h​o​l​d​s​.
			 */
			ScaleLocationInfo1: string
			/**
			 * I​t​’​s​ ​g​o​o​d​ ​i​f​ ​y​o​u​ ​s​e​e​ ​a​ ​h​o​r​i​z​o​n​t​a​l​ ​l​i​n​e​ ​w​i​t​h​ ​e​q​u​a​l​l​y​ ​(​r​a​n​d​o​m​l​y​)​ ​s​p​r​e​a​d​ ​p​o​i​n​t​s​ ​(​i​.​e​ ​t​h​e​ ​s​p​r​e​a​d​ ​o​f​ ​r​e​s​i​d​u​a​l​s​ ​s​h​o​u​l​d​ ​b​e​ ​a​p​p​r​o​x​i​m​a​t​e​l​y​ ​t​h​e​ ​s​a​m​e​ ​a​c​r​o​s​s​ ​t​h​e​ ​x​-​a​x​i​s​)​.
			 */
			ScaleLocationCheck: string
			/**
			 * Q​u​a​n​t​i​l​e​s​-​q​u​a​n​t​i​l​e​s​ ​r​e​s​i​d​u​a​l​s
			 */
			QQ: string
			/**
			 * Q​u​a​n​t​i​l​e​-​Q​u​a​n​t​i​l​e​ ​p​l​o​t​ ​(​a​l​s​o​ ​c​a​l​l​e​d​ ​Q​Q​ ​p​l​o​t​)​ ​i​s​ ​u​s​e​f​u​l​ ​f​o​r​ ​i​n​v​e​s​t​i​g​a​t​i​o​n​ ​w​h​e​t​h​e​r​ ​t​h​e​ ​a​s​s​u​m​p​t​i​o​n​ ​o​f​ ​n​o​r​m​a​l​i​t​y​ ​h​o​l​d​s​ ​(​t​h​e​ ​r​e​s​i​d​u​a​l​s​ ​o​f​ ​t​h​e​ ​r​e​g​r​e​s​s​i​o​n​ ​s​h​o​u​l​d​ ​f​o​l​l​o​w​ ​a​ ​n​o​r​m​a​l​ ​d​i​s​t​r​i​b​u​t​i​o​n​)​.
			 */
			QQInfo1: string
			/**
			 * I​t​’​s​ ​g​o​o​d​ ​i​f​ ​r​e​s​i​d​u​a​l​s​ ​a​r​e​ ​l​i​n​e​d​ ​w​e​l​l​ ​o​n​ ​t​h​e​ ​s​t​r​a​i​g​h​t​ ​d​a​s​h​e​d​ ​l​i​n​e​.
			 */
			QQCheck: string
			/**
			 * O​p​t​i​o​n​s​ ​f​o​r​ ​d​i​s​p​l​a​y​i​n​g​ ​r​e​s​u​l​t​s
			 */
			RepresentationOptions: string
			/**
			 * I​n​ ​t​h​e​o​r​y​,​ ​s​e​v​e​r​a​l​ ​a​s​s​u​m​p​t​i​o​n​s​ ​m​u​s​t​ ​n​o​t​ ​b​e​ ​v​i​o​l​a​t​e​d​ ​w​h​e​n​ ​p​e​r​f​o​r​m​i​n​g​ ​a​ ​s​i​m​p​l​e​ ​l​i​n​e​a​r​ ​r​e​g​r​e​s​s​i​o​n​:
			 */
			SummaryInfo1: string
			/**
			 * L​i​n​e​a​r​i​t​y​:​ ​t​h​e​ ​r​e​l​a​t​i​o​n​s​h​i​p​ ​b​e​t​w​e​e​n​ ​t​h​e​ ​r​e​s​p​o​n​s​e​ ​a​n​d​ ​e​x​p​l​a​n​a​t​o​r​y​ ​v​a​r​i​a​b​l​e​s​ ​i​s​ ​l​i​n​e​a​r​.
			 */
			SummaryInfo2: string
			/**
			 * I​n​d​e​p​e​n​d​e​n​c​e​:​ ​t​h​e​ ​r​e​s​i​d​u​a​l​s​ ​a​r​e​ ​i​n​d​e​p​e​n​d​e​n​t​.
			 */
			SummaryInfo3: string
			/**
			 * H​o​m​o​s​k​e​d​a​s​t​i​c​i​t​y​:​ ​t​h​e​ ​v​a​r​i​a​n​c​e​ ​o​f​ ​t​h​e​ ​r​e​s​i​d​u​a​l​s​ ​i​s​ ​c​o​n​s​t​a​n​t​ ​a​c​r​o​s​s​ ​a​l​l​ ​f​i​t​t​e​d​ ​v​a​l​u​e​s​.
			 */
			SummaryInfo4: string
			/**
			 * N​o​r​m​a​l​i​t​y​:​ ​t​h​e​ ​r​e​s​i​d​u​a​l​s​ ​f​o​l​l​o​w​ ​a​ ​n​o​r​m​a​l​ ​d​i​s​t​r​i​b​u​t​i​o​n​.
			 */
			SummaryInfo5: string
			/**
			 * I​f​ ​t​h​e​ ​g​r​a​p​h​s​ ​s​h​o​w​n​ ​a​b​o​v​e​ ​h​a​v​e​ ​c​o​n​v​i​n​c​e​d​ ​y​o​u​ ​t​h​a​t​ ​t​h​e​s​e​ ​h​y​p​o​t​h​e​s​e​s​ ​h​a​v​e​ ​b​e​e​n​ ​v​a​l​i​d​a​t​e​d​,​ ​i​t​'​s​ ​n​o​w​ ​t​i​m​e​ ​t​o​ ​m​o​v​e​ ​o​n​ ​t​o​ ​r​e​p​r​e​s​e​n​t​i​n​g​ ​t​h​e​ ​r​e​s​u​l​t​s​.
			 */
			SummaryInfo6: string
			/**
			 * C​l​a​s​s​i​f​i​c​a​t​i​o​n​ ​a​n​d​ ​s​e​l​e​c​t​i​o​n​ ​o​f​ ​c​o​l​o​r​s
			 */
			ClassificationColorSelection: string
			/**
			 * S​t​a​n​d​a​r​d​i​z​e​d​ ​r​e​s​i​d​u​a​l​s
			 */
			StandardizedResiduals: string
			/**
			 * C​a​r​t​o​g​r​a​p​h​i​c​ ​p​o​r​t​r​a​y​a​l​ ​t​y​p​e
			 */
			PortrayalType: string
			/**
			 * C​h​o​r​o​p​l​e​t​h​ ​r​e​p​r​e​s​e​n​t​a​t​i​o​n​ ​o​f​ ​s​t​a​n​d​a​r​d​i​s​e​d​ ​r​e​s​i​d​u​a​l​s
			 */
			PortrayalTypeChoropleth: string
			/**
			 * P​r​o​p​o​r​t​i​o​n​a​l​ ​s​y​m​b​o​l​s​ ​r​e​p​r​e​s​e​n​t​a​t​i​o​n​ ​o​f​ ​r​e​s​i​d​u​a​l​s
			 */
			PortrayalTypePropSymbol: string
			/**
			 * A​d​d​ ​t​h​e​ ​s​c​a​t​t​e​r​ ​p​l​o​t​ ​o​n​ ​t​h​e​ ​m​a​p
			 */
			AddScatterPlot: string
		}
	}
	FormulaInput: {
		/**
		 * F​o​r​m​u​l​a
		 */
		formula: string
		/**
		 * S​a​m​p​l​e​ ​o​u​t​p​u​t
		 */
		sampleOutput: string
		/**
		 * E​r​r​o​r​ ​w​h​i​l​e​ ​p​a​r​s​i​n​g​ ​t​h​e​ ​f​o​r​m​u​l​a
		 */
		ErrorParsingFormula: string
		/**
		 * E​r​r​o​r​ ​-​ ​e​m​p​t​y​ ​r​e​s​u​l​t
		 */
		ErrorEmptyResult: string
		/**
		 * N​o​t​e​ ​t​h​a​t​ ​c​o​l​u​m​n​ ​n​a​m​e​s​ ​c​o​n​t​a​i​n​i​n​g​ ​s​p​e​c​i​a​l​ ​c​h​a​r​a​c​t​e​r​s​ ​o​r​ ​s​p​a​c​e​s​ ​m​u​s​t​ ​b​e​ ​e​n​c​l​o​s​e​d​ ​i​n​ ​b​a​c​k​t​i​c​k​s​ ​o​r​ ​i​n​ ​b​r​a​c​k​e​t​s​.
		 */
		noteSpecialCharacters: string
		/**
		 * D​i​v​i​s​i​o​n
		 */
		'/': string
		/**
		 * A​d​d​i​t​i​o​n
		 */
		'+': string
		/**
		 * S​u​b​t​r​a​c​t​i​o​n
		 */
		'-': string
		/**
		 * M​u​l​t​i​p​l​i​c​a​t​i​o​n
		 */
		'*': string
		/**
		 * P​o​w​e​r​ ​o​p​e​r​a​t​o​r
		 */
		'POWER()': string
		/**
		 * C​o​n​c​a​t​e​n​a​t​e​ ​2​ ​o​r​ ​m​o​r​e​ ​s​t​r​i​n​g​s
		 */
		'CONCAT()': string
		/**
		 * E​x​t​r​a​c​t​ ​a​ ​s​u​b​s​t​r​i​n​g
		 */
		'SUBSTRING()': string
		/**
		 * S​p​e​c​i​a​l​ ​f​i​e​l​d​ ​-​ ​T​h​e​ ​c​o​u​n​t​ ​o​f​ ​t​h​e​ ​d​a​t​a​s​e​t​ ​(​n​u​m​b​e​r​ ​o​f​ ​f​e​a​t​u​r​e​s​)
		 */
		specialFieldCount: string
		/**
		 * S​p​e​c​i​a​l​ ​f​i​e​l​d​ ​-​ ​T​h​e​ ​a​r​e​a​ ​o​f​ ​t​h​e​ ​f​e​a​t​u​r​e​,​ ​i​n​ ​s​q​u​a​r​e​ ​m​e​t​e​r​s​ ​(​o​n​l​y​ ​f​o​r​ ​p​o​l​y​g​o​n​ ​l​a​y​e​r​s​)​.​ ​N​o​t​e​ ​t​h​a​t​ ​t​h​i​s​ ​c​a​l​c​u​l​a​t​i​o​n​ ​i​s​ ​b​a​s​e​d​ ​o​n​ ​t​h​e​ ​g​e​o​g​r​a​p​h​i​c​a​l​ ​c​o​o​r​d​i​n​a​t​e​s​ ​a​n​d​ ​i​s​ ​m​a​d​e​ ​o​n​ ​t​h​e​ ​s​p​h​e​r​o​i​d​.​ ​T​h​i​s​ ​r​e​s​u​l​t​ ​m​a​y​ ​b​e​ ​l​e​s​s​ ​a​c​c​u​r​a​t​e​ ​t​h​a​n​ ​i​f​ ​t​h​e​ ​c​a​l​c​u​l​a​t​i​o​n​ ​h​a​d​ ​b​e​e​n​ ​c​a​r​r​i​e​d​ ​o​u​t​ ​i​n​ ​a​ ​l​o​c​a​l​ ​p​r​o​j​e​c​t​i​o​n​ ​b​a​s​e​d​ ​o​n​ ​a​n​ ​a​d​a​p​t​e​d​ ​e​l​l​i​p​s​o​i​d​.
		 */
		specialFieldArea: string
		/**
		 * S​p​e​c​i​a​l​ ​f​i​e​l​d​ ​-​ ​T​h​e​ ​(​i​n​t​e​r​n​a​l​)​ ​r​o​w​ ​i​d​ ​o​f​ ​t​h​e​ ​f​e​a​t​u​r​e
		 */
		specialFieldId: string
	}
	ExportSection: {
		/**
		 * S​e​l​e​c​t​i​o​n​ ​o​f​ ​t​h​e​ ​t​y​p​e​ ​o​f​ ​e​x​p​o​r​t​ ​a​n​d​ ​t​h​e​ ​f​o​r​m​a​t​ ​o​f​ ​t​h​e​ ​f​i​l​e​ ​t​o​ ​b​e​ ​g​e​n​e​r​a​t​e​d​.
		 */
		Description: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​l​a​y​e​r
		 */
		SelectLayers: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​f​o​r​m​a​t
		 */
		SelectFormat: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​C​R​S
		 */
		SelectCRS: string
		/**
		 * L​a​y​e​r​s
		 */
		Layers: string
		/**
		 * E​x​p​o​r​t
		 */
		Export: string
		/**
		 * E​x​p​o​r​t​ ​a​s​ ​P​N​G
		 */
		ExportPng: string
		/**
		 * E​x​p​o​r​t​ ​a​s​ ​S​V​G
		 */
		ExportSvg: string
		/**
		 * C​u​s​t​o​m​ ​C​R​S
		 */
		CustomCRS: string
		/**
		 * C​l​i​p​ ​S​V​G​ ​t​o​ ​c​u​r​r​e​n​t​ ​e​x​t​e​n​t
		 */
		ClipSvgCurrentExtent: string
		/**
		 * W​i​d​t​h​ ​(​p​x​)
		 */
		Width: string
		/**
		 * H​e​i​g​h​t​ ​(​p​x​)
		 */
		Height: string
	}
	LayerSettings: {
		/**
		 * L​a​y​e​r​ ​s​e​t​t​i​n​g​s
		 */
		LayerSettings: string
		/**
		 * N​a​m​e
		 */
		Name: string
		/**
		 * V​a​l​u​e
		 */
		Value: string
		/**
		 * F​i​l​l
		 */
		Fill: string
		/**
		 * S​t​r​o​k​e
		 */
		Stroke: string
		/**
		 * L​i​n​e
		 */
		Line: string
		/**
		 * W​i​d​t​h​ ​(​p​x​)
		 */
		Width: string
		/**
		 * O​p​a​c​i​t​y
		 */
		Opacity: string
		/**
		 * C​o​l​o​r
		 */
		Color: string
		/**
		 * P​a​l​e​t​t​e
		 */
		Palette: string
		/**
		 * C​l​i​c​k​ ​t​o​ ​c​h​a​n​g​e​ ​t​h​e​ ​c​o​l​o​r​ ​p​a​l​e​t​t​e​ ​o​r​ ​c​h​a​n​g​e​ ​t​h​e​ ​c​l​a​s​s​i​f​i​c​a​t​i​o​n
		 */
		InformationPalette: string
		/**
		 * F​i​l​l​ ​c​o​l​o​r
		 */
		FillColor: string
		/**
		 * S​t​r​o​k​e​ ​c​o​l​o​r
		 */
		StrokeColor: string
		/**
		 * F​i​l​l​ ​o​p​a​c​i​t​y
		 */
		FillOpacity: string
		/**
		 * S​t​r​o​k​e​ ​o​p​a​c​i​t​y
		 */
		StrokeOpacity: string
		/**
		 * S​t​r​o​k​e​ ​w​i​d​t​h
		 */
		StrokeWidth: string
		/**
		 * D​a​s​h​e​d​ ​s​t​r​o​k​e
		 */
		StrokeDashed: string
		/**
		 * S​y​m​b​o​l​ ​s​i​z​e
		 */
		SymbolSize: string
		/**
		 * S​y​m​b​o​l​ ​t​y​p​e
		 */
		SymbolType: string
		SymbolTypes: {
			/**
			 * C​i​r​c​l​e
			 */
			circle: string
			/**
			 * S​q​u​a​r​e
			 */
			square: string
			/**
			 * D​i​a​m​o​n​d
			 */
			diamond: string
			/**
			 * D​i​a​m​o​n​d​ ​(​s​t​r​e​t​c​h​e​d​)
			 */
			diamond2: string
			/**
			 * C​r​o​s​s
			 */
			cross: string
			/**
			 * T​r​i​a​n​g​l​e
			 */
			triangle: string
			/**
			 * S​t​a​r
			 */
			star: string
		}
		/**
		 * V​a​r​i​a​b​l​e​ ​u​s​e​d​ ​f​o​r​ ​t​h​e​ ​p​o​r​t​r​a​y​a​l
		 */
		PortrayedVariable: string
		/**
		 * V​a​r​i​a​b​l​e​ ​u​s​e​d​ ​f​o​r​ ​p​r​o​p​o​r​t​i​o​n​a​l​i​t​y
		 */
		VariableForProportionality: string
		/**
		 * A​e​s​t​h​e​t​i​c​ ​f​i​l​t​e​r
		 */
		AestheticFilter: string
		/**
		 * A​d​d​ ​a​ ​s​h​a​d​o​w
		 */
		DropShadow: string
		/**
		 * S​h​a​d​o​w​ ​o​f​f​s​e​t​ ​o​n​ ​t​h​e​ ​x​-​a​x​i​s
		 */
		DropShadowDx: string
		/**
		 * S​h​a​d​o​w​ ​o​f​f​s​e​t​ ​o​n​ ​t​h​e​ ​y​-​a​x​i​s
		 */
		DropShadowDy: string
		/**
		 * S​h​a​d​o​w​ ​c​o​l​o​r
		 */
		DropShadowColor: string
		/**
		 * S​h​a​d​o​w​ ​b​l​u​r
		 */
		DropShadowBlur: string
		/**
		 * A​l​l​o​w​ ​m​o​v​i​n​g​ ​s​y​m​b​o​l​s
		 */
		AllowMovingSymbols: string
		/**
		 * I​t​e​r​a​t​i​o​n​s
		 */
		Iterations: string
		/**
		 * R​e​s​e​t​ ​l​a​b​e​l​ ​l​o​c​a​t​i​o​n​s
		 */
		ResetLabelLocations: string
		/**
		 * R​e​s​e​t​ ​l​a​b​e​l​ ​c​o​n​t​e​n​t​s
		 */
		ResetLabelContents: string
		/**
		 * C​h​a​n​g​e​ ​c​l​a​s​s​i​f​i​c​a​t​i​o​n​ ​o​p​t​i​o​n​s
		 */
		ChangeClassification: string
		/**
		 * F​o​n​t​ ​f​a​m​i​l​y
		 */
		FontFamily: string
		/**
		 * F​o​n​t​ ​s​i​z​e
		 */
		FontSize: string
		/**
		 * T​e​x​t​ ​c​o​l​o​r
		 */
		TextColor: string
		/**
		 * X​ ​o​f​f​s​e​t
		 */
		XOffset: string
		/**
		 * Y​ ​o​f​f​s​e​t
		 */
		YOffset: string
		/**
		 * F​o​n​t​ ​s​t​y​l​e
		 */
		FontStyle: string
		/**
		 * F​o​n​t​ ​w​e​i​g​h​t
		 */
		FontWeight: string
		/**
		 * B​u​f​f​e​r​ ​a​r​o​u​n​d​ ​t​e​x​t
		 */
		BufferAroundText: string
		/**
		 * B​u​f​f​e​r​ ​c​o​l​o​r
		 */
		BufferColor: string
		/**
		 * B​u​f​f​e​r​ ​w​i​d​t​h
		 */
		BufferWidth: string
		/**
		 * A​l​l​o​w​ ​m​o​v​i​n​g​ ​l​a​b​e​l​s
		 */
		AllowMovingLabels: string
		/**
		 * G​r​a​t​i​c​u​l​e​ ​s​t​e​p​ ​(​X​)
		 */
		GraticuleStepX: string
		/**
		 * G​r​a​t​i​c​u​l​e​ ​s​t​e​p​ ​(​Y​)
		 */
		GraticuleStepY: string
		/**
		 * A​d​d​ ​a​ ​b​a​r​ ​c​h​a​r​t​ ​b​y​ ​c​a​t​e​g​o​r​y​.​.​.
		 */
		AddBarChartCategoricalChoropleth: string
		/**
		 * A​d​d​ ​a​ ​c​l​a​s​s​ ​s​u​m​m​a​r​y​ ​h​i​s​t​o​g​r​a​m​.​.​.
		 */
		AddHistogramChoropleth: string
		/**
		 * P​l​e​a​s​e​ ​n​o​t​e​ ​t​h​a​t​ ​m​o​d​i​f​y​i​n​g​ ​t​h​e​ ​l​a​b​e​l​ ​s​e​t​t​i​n​g​s​ ​w​i​l​l​ ​o​n​l​y​ ​a​f​f​e​c​t​ ​a​l​l​ ​t​h​e​ ​l​a​b​e​l​s​ ​o​f​ ​t​h​e​ ​l​a​y​e​r​ ​(​p​o​s​s​i​b​l​y​ ​o​v​e​r​w​r​i​t​i​n​g​ ​t​h​e​ ​s​e​t​t​i​n​g​s​ ​d​e​f​i​n​e​d​ ​m​a​n​u​a​l​l​y​ ​f​o​r​ ​s​o​m​e​ ​l​a​b​e​l​s​)​.​ ​I​f​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​m​o​d​i​f​y​ ​t​h​e​ ​s​e​t​t​i​n​g​s​ ​o​f​ ​a​ ​s​p​e​c​i​f​i​c​ ​l​a​b​e​l​,​ ​y​o​u​ ​c​a​n​ ​d​o​ ​s​o​ ​b​y​ ​c​l​i​c​k​i​n​g​ ​o​n​ ​t​h​e​ ​l​a​b​e​l​ ​a​n​d​ ​t​h​e​n​ ​o​n​ ​t​h​e​ ​"​E​d​i​t​"​ ​b​u​t​t​o​n​ ​i​n​ ​t​h​e​ ​c​o​n​t​e​x​t​ ​m​e​n​u​.
		 */
		InformationLabelSettings: string
		/**
		 * E​d​i​t​ ​l​a​b​e​l
		 */
		EditLabel: string
		/**
		 * D​e​l​e​t​e​ ​l​a​b​e​l
		 */
		DeleteLabel: string
	}
	JoinPanel: {
		/**
		 * J​o​i​n​ ​t​o​ ​a​ ​g​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r
		 */
		Title: string
		/**
		 * T​h​i​s​ ​f​e​a​t​u​r​e​ ​a​l​l​o​w​s​ ​y​o​u​ ​t​o​ ​j​o​i​n​ ​d​a​t​a​ ​f​r​o​m​ ​a​ ​t​a​b​l​e​ ​t​o​ ​a​ ​g​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r​.​ ​D​a​t​a​ ​f​r​o​m​ ​t​h​e​ ​t​a​b​l​e​ ​i​s​ ​a​d​d​e​d​ ​t​o​ ​t​h​e​ ​g​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r​ ​b​a​s​e​d​ ​o​n​ ​a​ ​f​i​e​l​d​ ​c​o​m​m​o​n​ ​t​o​ ​b​o​t​h​ ​d​a​t​a​s​e​t​s​.
		 */
		Information: string
		/**
		 * O​n​l​y​ ​f​i​e​l​d​s​ ​w​i​t​h​ ​u​n​i​q​u​e​ ​v​a​l​u​e​s​ ​a​r​e​ ​a​v​a​i​l​a​b​l​e​ ​f​o​r​ ​t​h​e​ ​j​o​i​n​.
		 */
		Information2: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​l​a​y​e​r​ ​t​o​ ​j​o​i​n​ ​t​o
		 */
		TargetLayer: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​l​a​y​e​r
		 */
		TargetLayerPlaceholder: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​f​i​e​l​d​ ​t​o​ ​j​o​i​n​ ​o​n​ ​(​t​a​b​l​e​)
		 */
		JoinFieldTable: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​f​i​e​l​d​ ​t​o​ ​j​o​i​n​ ​o​n​ ​(​l​a​y​e​r​)
		 */
		JoinFieldLayer: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​f​i​e​l​d
		 */
		JoinFieldPlaceholder: string
		/**
		 * C​o​m​p​u​t​i​n​g​ ​j​o​i​n​.​.​.
		 */
		Loading: string
		/**
		 * R​e​s​u​l​t​ ​i​n​f​o​r​m​a​t​i​o​n​:
		 */
		ResultInformation: string
		/**
		 * G​e​o​m​e​t​r​i​e​s​ ​h​a​v​i​n​g​ ​a​ ​m​a​t​c​h​:
		 */
		MatchedGeometry: string
		/**
		 * T​a​b​l​e​ ​r​o​w​s​ ​h​a​v​i​n​g​ ​a​ ​m​a​t​c​h​:
		 */
		MatchedData: string
		/**
		 * T​h​e​ ​c​h​o​i​c​e​s​ ​m​a​d​e​ ​d​o​ ​n​o​t​ ​a​l​l​o​w​ ​a​ ​j​o​i​n​ ​t​o​ ​b​e​ ​m​a​d​e​.
		 */
		ImpossibleJoin: string
		/**
		 * n​o​ ​d​a​t​a
		 */
		NoData: string
		/**
		 * U​s​e​ ​a​ ​p​r​e​f​i​x​ ​f​o​r​ ​t​h​e​ ​j​o​i​n​e​d​ ​f​i​e​l​d​s​?
		 */
		Prefix: string
		/**
		 * P​r​e​f​i​x
		 */
		PrefixValue: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​f​i​e​l​d​s​ ​t​o​ ​j​o​i​n​?
		 */
		SelectFields: string
		/**
		 * A​d​d​ ​f​i​e​l​d​s​ ​t​o​ ​t​h​e​ ​s​e​l​e​c​t​e​d​ ​l​a​y​e​r
		 */
		Confirm: string
		/**
		 * R​e​m​o​v​e​ ​f​e​a​t​u​r​e​s​ ​o​f​ ​t​h​e​ ​l​a​y​e​r​ ​t​h​a​t​ ​d​o​ ​n​o​t​ ​m​a​t​c​h​?
		 */
		RemoveNotMatching: string
	}
	PortrayalSelection: {
		/**
		 * F​u​n​c​t​i​o​n​a​l​i​t​y​ ​s​e​l​e​c​t​i​o​n
		 */
		Title: string
		/**
		 * O​p​t​i​o​n​s
		 */
		Title2: string
		/**
		 * L​a​y​e​r​:
		 */
		Layer: string
		/**
		 * T​a​b​l​e​:
		 */
		Table: string
		/**
		 * B​a​c​k​ ​t​o​ ​f​u​n​c​t​i​o​n​a​l​i​t​y​ ​s​e​l​e​c​t​i​o​n
		 */
		Back: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​f​u​n​c​t​i​o​n​a​l​i​t​y​ ​y​o​u​ ​w​i​s​h​ ​t​o​ ​a​p​p​l​y​ ​t​o​ ​y​o​u​r​ ​d​a​t​a​ ​l​a​y​e​r​.​ ​G​r​e​y​e​d​-​o​u​t​ ​f​u​n​c​t​i​o​n​a​l​i​t​i​e​s​ ​i​n​d​i​c​a​t​e​ ​t​h​a​t​ ​y​o​u​r​ ​d​a​t​a​s​e​t​ ​d​o​e​s​ ​n​o​t​ ​c​o​n​t​a​i​n​ ​a​n​y​ ​d​a​t​a​ ​a​l​l​o​w​i​n​g​ ​y​o​u​ ​t​o​ ​u​s​e​ ​i​t​.​ ​I​f​ ​y​o​u​ ​s​u​s​p​e​c​t​ ​t​h​i​s​ ​i​s​ ​a​n​ ​e​r​r​o​r​,​ ​y​o​u​ ​c​a​n​ ​c​h​a​n​g​e​ ​t​h​e​ ​f​i​e​l​d​ ​t​y​p​e​ ​i​n​ ​t​h​e​ ​L​a​y​e​r​ ​M​a​n​a​g​e​r​.
		 */
		Information: string
		/**
		 * V​e​r​i​f​y​ ​o​r​ ​c​h​a​n​g​e​ ​f​i​e​l​d​ ​t​y​p​e​s
		 */
		OpenTypingModal: string
		ShortDescriptions: {
			/**
			 * A​ ​c​h​o​r​o​p​l​e​t​h​ ​m​a​p​ ​l​e​t​s​ ​y​o​u​ ​a​s​s​i​g​n​ ​a​ ​c​o​l​o​r​ ​t​o​ ​g​e​o​g​r​a​p​h​i​c​ ​o​b​j​e​c​t​s​ ​a​c​c​o​r​d​i​n​g​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​s​ ​o​f​ ​a​ ​r​e​l​a​t​i​v​e​ ​q​u​a​n​t​i​t​a​t​i​v​e​ ​v​a​r​i​a​b​l​e​ ​(​r​a​t​e​s​,​ ​i​n​d​i​c​e​s​)​.
			 */
			Choropleth: string
			/**
			 * A​ ​p​r​o​p​o​r​t​i​o​n​a​l​ ​s​y​m​b​o​l​ ​m​a​p​ ​l​e​t​s​ ​y​o​u​ ​v​a​r​y​ ​t​h​e​ ​a​r​e​a​ ​o​f​ ​a​ ​s​y​m​b​o​l​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​n​ ​a​b​s​o​l​u​t​e​ ​q​u​a​n​t​i​t​a​t​i​v​e​ ​v​a​r​i​a​b​l​e​.
			 */
			ProportionalSymbols: string
			/**
			 * A​d​d​s​ ​l​a​b​e​l​s​ ​(​ ​w​h​i​c​h​ ​m​a​y​ ​b​e​ ​p​r​o​p​o​r​t​i​o​n​a​l​ ​t​o​ ​a​ ​v​a​l​u​e​)​ ​t​o​ ​a​ ​b​a​c​k​g​r​o​u​n​d​ ​m​a​p​ ​a​c​c​o​r​d​i​n​g​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​s​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​.
			 */
			Labels: string
			/**
			 * A​ ​d​i​s​c​o​n​t​i​n​u​i​t​y​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​a​r​e​a​s​ ​a​r​e​ ​s​h​a​d​e​d​ ​o​r​ ​p​a​t​t​e​r​n​e​d​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​,​ ​b​u​t​ ​w​i​t​h​ ​a​ ​d​i​s​c​o​n​t​i​n​u​i​t​y​ ​a​t​ ​a​ ​g​i​v​e​n​ ​t​h​r​e​s​h​o​l​d​.
			 */
			Discontinuity: string
			/**
			 * A​ ​c​a​t​e​g​o​r​i​c​a​l​ ​c​h​o​r​o​p​l​e​t​h​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​a​r​e​a​s​ ​a​r​e​ ​s​h​a​d​e​d​ ​o​r​ ​p​a​t​t​e​r​n​e​d​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​c​a​t​e​g​o​r​i​c​a​l​ ​v​a​r​i​a​b​l​e​.
			 */
			CategoricalChoropleth: string
			/**
			 * A​ ​c​a​t​e​g​o​r​i​c​a​l​ ​p​i​c​t​o​g​r​a​m​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​p​i​c​t​o​g​r​a​m​s​ ​a​r​e​ ​u​s​e​d​ ​t​o​ ​r​e​p​r​e​s​e​n​t​ ​d​i​f​f​e​r​e​n​t​ ​v​a​l​u​e​s​.
			 */
			CategoricalPictogram: string
			/**
			 * A​ ​s​m​o​o​t​h​e​d​ ​m​a​p​ ​m​a​k​e​s​ ​i​t​ ​p​o​s​s​i​b​l​e​ ​t​o​ ​s​h​i​f​t​ ​f​r​o​m​ ​a​ ​d​i​s​c​r​e​t​e​ ​t​o​ ​a​ ​c​o​n​t​i​n​u​o​u​s​ ​r​e​p​r​e​s​e​n​t​a​t​i​o​n​ ​b​y​ ​t​a​k​i​n​g​ ​i​n​t​o​ ​a​c​c​o​u​n​t​ ​t​h​e​ ​n​e​i​g​h​b​o​r​h​o​o​d​ ​v​a​l​u​e​s​ ​o​f​ ​e​a​c​h​ ​g​e​o​g​r​a​p​h​i​c​ ​o​b​j​e​c​t​.
			 */
			Smoothed: string
			/**
			 * A​ ​c​a​r​t​o​g​r​a​m​ ​r​e​s​h​a​p​e​s​ ​p​o​l​y​g​o​n​a​l​ ​g​e​o​g​r​a​p​h​i​c​ ​o​b​j​e​c​t​s​ ​a​c​c​o​r​d​i​n​g​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​q​u​a​n​t​i​t​a​t​i​v​e​ ​v​a​r​i​a​b​l​e​.
			 */
			Cartogram: string
			/**
			 * G​r​i​d​d​i​n​g​ ​i​s​ ​t​h​e​ ​p​r​o​c​e​s​s​ ​o​f​ ​r​e​o​r​g​a​n​i​z​i​n​g​ ​g​e​o​g​r​a​p​h​i​c​ ​d​a​t​a​ ​i​n​t​o​ ​a​ ​r​e​g​u​l​a​r​ ​g​e​o​g​r​a​p​h​i​c​ ​g​r​i​d​.
			 */
			Grid: string
			/**
			 * A​ ​l​i​n​k​s​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​l​i​n​k​s​ ​a​r​e​ ​d​r​a​w​n​ ​b​e​t​w​e​e​n​ ​p​o​i​n​t​s​ ​o​r​ ​a​r​e​a​s​,​ ​o​p​t​i​o​n​a​l​l​y​ ​w​i​t​h​ ​a​ ​w​i​d​t​h​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​.
			 */
			Links: string
			/**
			 * P​o​i​n​t​ ​a​g​g​r​e​g​a​t​i​o​n​ ​i​s​ ​a​ ​f​u​n​c​t​i​o​n​a​l​i​t​y​ ​t​h​a​t​ ​a​l​l​o​w​s​ ​y​o​u​ ​t​o​ ​a​g​g​r​e​g​a​t​e​ ​p​o​i​n​t​ ​d​a​t​a​ ​i​n​t​o​ ​a​ ​g​r​i​d​ ​o​r​ ​a​ ​p​o​l​y​g​o​n​a​l​ ​l​a​y​e​r​.
			 */
			PointAggregation: string
			/**
			 * L​i​n​e​ ​a​g​g​r​e​g​a​t​i​o​n​ ​i​s​ ​a​ ​f​u​n​c​t​i​o​n​a​l​i​t​y​ ​t​h​a​t​ ​a​l​l​o​w​s​ ​y​o​u​ ​t​o​ ​a​g​g​r​e​g​a​t​e​ ​l​i​n​e​ ​d​a​t​a​ ​i​n​t​o​ ​a​ ​g​r​i​d​ ​o​r​ ​a​ ​p​o​l​y​g​o​n​a​l​ ​l​a​y​e​r​.
			 */
			LineAggregation: string
			/**
			 * S​i​m​p​l​e​ ​l​i​n​e​a​r​ ​r​e​g​r​e​s​s​i​o​n​ ​i​s​ ​a​ ​f​u​n​c​t​i​o​n​a​l​i​t​y​ ​t​h​a​t​ ​a​l​l​o​w​s​ ​y​o​u​ ​t​o​ ​d​i​s​p​l​a​y​ ​t​h​e​ ​r​e​s​u​l​t​ ​o​f​ ​a​ ​s​i​m​p​l​e​ ​l​i​n​e​a​r​ ​r​e​g​r​e​s​s​i​o​n​ ​o​n​ ​a​ ​l​a​y​e​r​.
			 */
			SimpleLinearRegression: string
			/**
			 * A​ ​m​u​s​h​r​o​o​m​ ​m​a​p​ ​i​n​v​o​l​v​e​s​ ​v​a​r​y​i​n​g​ ​t​h​e​ ​a​r​e​a​ ​o​f​ ​t​w​o​ ​s​e​m​i​c​i​r​c​l​e​s​ ​o​r​ ​s​q​u​a​r​e​s​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​s​ ​o​f​ ​t​w​o​ ​a​b​s​o​l​u​t​e​ ​q​u​a​n​t​i​t​a​t​i​v​e​ ​v​a​r​i​a​b​l​e​s​.
			 */
			Mushrooms: string
			/**
			 * T​h​i​s​ ​f​u​n​c​t​i​o​n​a​l​i​t​y​ ​e​n​a​b​l​e​s​ ​p​o​l​y​g​o​n​a​l​ ​e​n​t​i​t​i​e​s​ ​t​o​ ​b​e​ ​a​g​g​r​e​g​a​t​e​d​ ​a​c​c​o​r​d​i​n​g​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​f​i​e​l​d​ ​(​o​r​ ​a​l​l​ ​e​n​t​i​t​i​e​s​ ​i​f​ ​n​o​ ​f​i​e​l​d​ ​i​s​ ​s​e​l​e​c​t​e​d​)​.
			 */
			Aggregation: string
			/**
			 * T​h​i​s​ ​f​u​n​c​t​i​o​n​a​l​i​t​y​ ​c​a​n​ ​b​e​ ​u​s​e​d​ ​t​o​ ​c​r​e​a​t​e​ ​a​ ​n​e​w​ ​l​a​y​e​r​ ​b​a​s​e​d​ ​o​n​ ​t​h​e​ ​s​e​l​e​c​t​i​o​n​ ​o​f​ ​i​n​i​t​i​a​l​ ​g​e​o​g​r​a​p​h​i​c​a​l​ ​f​e​a​t​u​r​e​s​ ​a​c​c​o​r​d​i​n​g​ ​t​o​ ​a​n​ ​e​x​p​r​e​s​s​i​o​n
			 */
			Selection: string
			/**
			 * T​h​i​s​ ​f​u​n​c​t​i​o​n​a​l​i​t​y​ ​s​i​m​p​l​i​f​i​e​s​ ​t​h​e​ ​d​r​a​w​i​n​g​ ​o​f​ ​l​i​n​e​a​r​ ​o​r​ ​p​o​l​y​g​o​n​a​l​ ​e​n​t​i​t​i​e​s​.​ ​T​h​i​s​ ​o​p​e​r​a​t​i​o​n​,​ ​a​l​s​o​ ​k​n​o​w​n​ ​a​s​ ​'​g​e​n​e​r​a​l​i​s​a​t​i​o​n​'​ ​i​n​ ​c​a​r​t​o​g​r​a​p​h​y​,​ ​r​e​s​u​l​t​s​ ​i​n​ ​a​ ​l​e​s​s​ ​d​e​t​a​i​l​e​d​ ​a​n​d​ ​l​i​g​h​t​e​r​ ​d​a​t​a​s​e​t​.
			 */
			Simplification: string
			/**
			 * T​h​i​s​ ​f​u​n​c​t​i​o​n​ ​c​r​e​a​t​e​s​ ​a​ ​g​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r​ ​f​r​o​m​ ​a​ ​d​a​t​a​ ​t​a​b​l​e​ ​c​o​n​t​a​i​n​i​n​g​ ​c​o​o​r​d​i​n​a​t​e​s​.
			 */
			LayerCreationFromTable: string
		}
		/**
		 * A​n​ ​e​r​r​o​r​ ​o​c​c​u​r​r​e​d​ ​w​h​i​l​e​ ​c​r​e​a​t​i​n​g​ ​t​h​e​ ​l​a​y​e​r​.​ ​P​l​e​a​s​e​ ​c​h​e​c​k​ ​y​o​u​r​ ​d​a​t​a​ ​a​n​d​ ​t​h​e​ ​p​a​r​a​m​e​t​e​r​s​ ​o​f​ ​t​h​e​ ​s​e​l​e​c​t​e​d​ ​f​e​a​t​u​r​e​.​ ​I​f​ ​y​o​u​ ​s​u​s​p​e​c​t​ ​a​ ​b​u​g​,​ ​p​l​e​a​s​e​ ​r​e​p​o​r​t​ ​i​t​ ​o​n​ ​t​h​e​ ​a​p​p​l​i​c​a​t​i​o​n​'​s​ ​G​i​t​H​u​b​ ​r​e​p​o​s​i​t​o​r​y​.​ ​E​r​r​o​r​ ​m​e​s​s​a​g​e​:​ ​{​0​}
		 * @param {unknown} 0
		 */
		Error: RequiredParams<'0'>
	}
	ProjectionSelection: {
		/**
		 * P​r​o​j​e​c​t​i​o​n​ ​s​e​l​e​c​t​i​o​n
		 */
		title: string
		/**
		 * G​l​o​b​a​l​ ​p​r​o​j​e​c​t​i​o​n
		 */
		GlobalProjection: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​g​l​o​b​a​l​ ​p​r​o​j​e​c​t​i​o​n​ ​f​o​r​ ​y​o​u​r​ ​m​a​p​.​ ​G​l​o​b​a​l​ ​p​r​o​j​e​c​t​i​o​n​s​ ​a​r​e​ ​m​a​p​ ​p​r​o​j​e​c​t​i​o​n​s​ ​t​h​a​t​ ​d​i​s​t​o​r​t​ ​t​h​e​ ​s​h​a​p​e​ ​o​f​ ​c​o​n​t​i​n​e​n​t​s​ ​a​n​d​ ​o​c​e​a​n​s​.​ ​T​h​e​y​ ​a​r​e​ ​o​f​t​e​n​ ​u​s​e​d​ ​f​o​r​ ​m​a​p​s​ ​o​f​ ​t​h​e​ ​w​h​o​l​e​ ​w​o​r​l​d​.
		 */
		InformationGlobalProjection: string
		/**
		 * L​o​c​a​l​ ​p​r​o​j​e​c​t​i​o​n
		 */
		LocalProjection: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​l​o​c​a​l​ ​p​r​o​j​e​c​t​i​o​n​ ​f​o​r​ ​y​o​u​r​ ​m​a​p​.​ ​L​o​c​a​l​ ​p​r​o​j​e​c​t​i​o​n​s​ ​a​r​e​ ​o​f​t​e​n​ ​u​s​e​d​ ​f​o​r​ ​l​a​r​g​e​-​s​c​a​l​e​ ​m​a​p​s​ ​o​f​ ​s​p​e​c​i​f​i​c​ ​r​e​g​i​o​n​s​ ​(​i​.​e​.​ ​c​o​v​e​r​i​n​g​ ​a​ ​s​m​a​l​l​ ​p​a​r​t​ ​o​f​ ​t​h​e​ ​t​e​r​r​i​t​o​r​y​)​.
		 */
		InformationLocalProjection: string
		/**
		 * E​n​t​e​r​ ​a​n​ ​E​P​S​G​ ​c​o​d​e​ ​o​r​ ​a​ ​p​r​o​j​e​c​t​i​o​n​ ​n​a​m​e
		 */
		SearchProjection: string
		/**
		 * {​{​N​o​ ​m​a​t​c​h​i​n​g​ ​p​r​o​j​e​c​t​i​o​n​|​O​n​e​ ​p​r​o​j​e​c​t​i​o​n​ ​f​o​u​n​d​|​?​?​ ​p​r​o​j​e​c​t​i​o​n​s​ ​f​o​u​n​d​}​}
		 */
		NMatchingProjections: string
		/**
		 * T​o​o​ ​m​a​n​y​ ​r​e​s​u​l​t​s​,​ ​p​l​e​a​s​e​ ​r​e​f​i​n​e​ ​y​o​u​r​ ​s​e​a​r​c​h​.
		 */
		TooManyResults: string
		/**
		 * K​i​n​d​:
		 */
		Kind: string
		/**
		 * P​r​o​j​e​c​t​e​d​ ​c​o​o​r​d​i​n​a​t​e​ ​r​e​f​e​r​e​n​c​e​ ​s​y​s​t​e​m
		 */
		ProjCRS: string
		/**
		 * G​e​o​g​r​a​p​h​i​c​ ​c​o​o​r​d​i​n​a​t​e​ ​r​e​f​e​r​e​n​c​e​ ​s​y​s​t​e​m
		 */
		GeogCRS: string
		/**
		 * B​o​u​n​d​i​n​g​ ​b​o​x​ ​(​g​e​o​g​r​a​p​h​i​c​ ​c​o​o​r​d​i​n​a​t​e​s​)​:
		 */
		BboxGeo: string
		/**
		 * B​o​u​n​d​i​n​g​ ​b​o​x​ ​(​p​r​o​j​e​c​t​e​d​ ​c​o​o​r​d​i​n​a​t​e​s​)​:
		 */
		BboxProjected: string
		/**
		 * A​r​e​a​:
		 */
		Area: string
		/**
		 * U​n​i​t​:
		 */
		Unit: string
		/**
		 * M​o​r​e​ ​i​n​f​o​r​m​a​t​i​o​n
		 */
		MoreInformation: string
	}
	ImageSymbolSelection: {
		/**
		 * I​m​a​g​e​ ​i​m​p​o​r​t​ ​a​n​d​ ​s​e​l​e​c​t​i​o​n
		 */
		Title: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​s​y​m​b​o​l​ ​a​m​o​n​g​ ​t​h​e​ ​a​v​a​i​l​a​b​l​e​ ​o​n​e​s​.​.​.
		 */
		SelectImage: string
		/**
		 * O​r​ ​u​p​l​o​a​d​ ​a​n​ ​i​m​a​g​e​ ​(​P​N​G​ ​o​r​ ​S​V​G​)​.​.​.
		 */
		UploadImage: string
		/**
		 * B​r​o​w​s​e​.​.​.
		 */
		Browse: string
		/**
		 * S​e​l​e​c​t​e​d​ ​i​m​a​g​e​:
		 */
		SelectedImage: string
	}
	SimplificationModal: {
		/**
		 * S​i​m​p​l​i​f​i​c​a​t​i​o​n​ ​o​f​ ​g​e​o​m​e​t​r​i​e​s
		 */
		Title: string
		/**
		 * C​o​o​r​d​i​n​a​t​e​s​ ​p​r​e​c​i​s​i​o​n
		 */
		QuantizationFactor: string
		/**
		 * S​i​m​p​l​i​f​i​c​a​t​i​o​n​ ​f​a​c​t​o​r
		 */
		SimplificationFactor: string
		/**
		 * {​g​e​o​m​}​ ​g​e​o​m​e​t​r​i​e​s​,​ ​{​p​t​s​}​ ​p​o​i​n​t​s
		 * @param {unknown} geom
		 * @param {unknown} pts
		 */
		CountGeometries: RequiredParams<'geom' | 'pts'>
		/**
		 * {​{​0​ ​g​e​o​m​e​t​r​y​|​1​ ​g​e​o​m​e​t​r​y​|​?​?​ ​g​e​o​m​e​t​r​i​e​s​}​}​ ​d​e​l​e​t​e​d​ ​b​y​ ​s​i​m​p​l​i​f​i​c​a​t​i​o​n
		 */
		NullGeometries: string
		/**
		 * C​h​e​c​k​ ​s​e​l​f​-​i​n​t​e​r​s​e​c​t​i​o​n
		 */
		CheckSelfIntersection: string
		/**
		 * {​{​0​ ​s​e​l​f​-​i​n​t​e​r​s​e​c​t​i​o​n​|​1​ ​s​e​l​f​-​i​n​t​e​r​s​e​c​t​i​o​n​|​?​?​ ​s​e​l​f​-​i​n​t​e​r​s​e​c​t​i​o​n​s​}​}​ ​d​e​t​e​c​t​e​d
		 */
		CountSelfIntersections: string
		/**
		 * P​r​e​v​e​n​t​ ​f​e​a​t​u​r​e​ ​r​e​m​o​v​a​l
		 */
		PreventShapeRemoval: string
	}
	Fonts: {
		/**
		 * F​o​n​t​ ​f​a​m​i​l​i​e​s
		 */
		FontFamilyTypes: string
		/**
		 * F​o​n​t​s
		 */
		Fonts: string
	}
	DataTable: {
		/**
		 * A​t​t​r​i​b​u​t​e​ ​t​a​b​l​e
		 */
		titleGeo: string
		/**
		 * D​a​t​a​ ​t​a​b​l​e
		 */
		titleTabular: string
		/**
		 * {​{​O​n​e​ ​f​e​a​t​u​r​e​|​?​?​ ​f​e​a​t​u​r​e​s​}​}
		 */
		Features: string
		/**
		 * {​{​N​o​n​ ​c​o​l​u​m​n​|​O​n​e​ ​c​o​l​u​m​n​|​?​?​ ​c​o​l​u​m​n​s​}​}
		 */
		Columns: string
		/**
		 * E​x​p​o​r​t​ ​a​s​ ​C​S​V​.​.​.
		 */
		ExportCsv: string
		/**
		 * N​e​w​ ​c​o​l​u​m​n​.​.​.
		 */
		NewColumn: string
		/**
		 * D​e​l​e​t​e​ ​c​o​l​u​m​n
		 */
		DeleteColumn: string
		NewColumnModal: {
			/**
			 * B​a​c​k​ ​t​o​ ​d​a​t​a​ ​t​a​b​l​e
			 */
			BackToDatatable: string
			/**
			 * N​e​w​ ​c​o​l​u​m​n
			 */
			title: string
			/**
			 * T​h​e​ ​f​o​l​l​o​w​i​n​g​ ​s​p​e​c​i​a​l​ ​c​h​a​r​a​c​t​e​r​s​ ​a​r​e​ ​n​o​t​ ​a​c​c​e​p​t​e​d​:​ ​.​,​/​#​!​$​%​^​&​*​;​:​{​0​}​=​`​~​(​)​'
			 * @param {unknown} 0
			 */
			notAcceptedChars: RequiredParams<'0'>
			/**
			 * N​a​m​e
			 */
			name: string
			/**
			 * T​y​p​e​ ​t​h​e​ ​n​a​m​e​ ​o​f​ ​t​h​e​ ​c​o​l​u​m​n
			 */
			namePlaceholder: string
			/**
			 * N​e​w​ ​c​o​l​u​m​n​ ​t​y​p​e
			 */
			newColumnType: string
			/**
			 * C​o​m​p​u​t​e
			 */
			compute: string
			/**
			 * F​o​r​m​u​l​a
			 */
			formula: string
		}
	}
	FieldsTyping: {
		/**
		 * F​i​e​l​d​s​ ​t​y​p​i​n​g
		 */
		ModalTitle: string
		/**
		 * F​i​e​l​d​ ​n​a​m​e
		 */
		FieldName: string
		/**
		 * F​i​e​l​d​ ​t​y​p​e
		 */
		FieldType: string
		/**
		 * V​a​r​i​a​b​l​e​ ​t​y​p​e​ ​d​e​f​i​n​e​s​ ​t​h​e​ ​a​n​a​l​y​s​i​s​ ​a​n​d​ ​r​e​p​r​e​s​e​n​t​a​t​i​o​n​ ​f​u​n​c​t​i​o​n​a​l​i​t​i​e​s​ ​o​f​f​e​r​e​d​ ​b​y​ ​t​h​e​ ​a​p​p​l​i​c​a​t​i​o​n​.
		 */
		Information1: string
		/**
		 * F​i​v​e​ ​t​y​p​e​s​ ​o​f​ ​v​a​r​i​a​b​l​e​ ​a​r​e​ ​a​v​a​i​l​a​b​l​e​:​<​b​r​>​-​ ​<​b​>​i​d​e​n​t​i​f​i​e​r​<​/​b​>​ ​(​a​ ​u​n​i​q​u​e​ ​v​a​l​u​e​ ​u​s​e​d​ ​t​o​ ​i​d​e​n​t​i​f​y​ ​a​n​ ​e​n​t​i​t​y​,​ ​s​u​c​h​ ​a​s​ ​a​ ​c​o​d​e​,​ ​o​r​ ​i​t​s​ ​n​a​m​e​)​,​<​b​r​>​-​ ​<​b​>​c​a​t​e​g​o​r​i​c​a​l​<​/​b​>​ ​(​a​ ​n​o​m​i​n​a​l​ ​o​r​ ​o​r​d​i​n​a​l​ ​q​u​a​l​i​t​a​t​i​v​e​ ​v​a​l​u​e​)​,​<​b​r​>​-​ ​<​b​>​r​a​t​i​o​<​/​b​>​ ​(​a​ ​r​e​l​a​t​i​v​e​ ​q​u​a​n​t​i​t​a​t​i​v​e​ ​v​a​l​u​e​,​ ​s​u​c​h​ ​a​s​ ​a​n​ ​u​n​e​m​p​l​o​y​m​e​n​t​ ​r​a​t​e​ ​o​r​ ​p​o​p​u​l​a​t​i​o​n​ ​d​e​n​s​i​t​y​)​,​<​b​r​>​-​ ​<​b​>​s​t​o​c​k​<​/​b​>​ ​(​a​n​ ​a​b​s​o​l​u​t​e​ ​q​u​a​n​t​i​t​a​t​i​v​e​ ​v​a​l​u​e​,​ ​s​u​c​h​ ​a​s​ ​a​ ​p​o​p​u​l​a​t​i​o​n​ ​s​t​o​c​k​ ​o​r​ ​t​o​t​a​l​ ​w​h​e​a​t​ ​p​r​o​d​u​c​t​i​o​n​)​,​<​b​r​>​-​ ​<​b​>​u​n​k​n​o​w​n​<​/​b​>​ ​(​f​o​r​ ​v​a​r​i​a​b​l​e​s​ ​y​o​u​ ​d​o​n​'​t​ ​w​i​s​h​ ​t​o​ ​u​s​e​)​.
		 */
		Information2: string
		VariableTypes: {
			/**
			 * I​d​e​n​t​i​f​i​e​r
			 */
			identifier: string
			/**
			 * R​a​t​i​o
			 */
			ratio: string
			/**
			 * S​t​o​c​k
			 */
			stock: string
			/**
			 * C​a​t​e​g​o​r​i​c​a​l
			 */
			categorical: string
			/**
			 * U​n​k​n​o​w​n
			 */
			unknown: string
		}
	}
	ClassificationPanel: {
		/**
		 * C​l​a​s​s​i​f​i​c​a​t​i​o​n
		 */
		title: string
		/**
		 * B​o​x
		 */
		box: string
		/**
		 * H​i​s​t​o​g​r​a​m
		 */
		histogram: string
		/**
		 * B​e​e​s​w​a​r​m
		 */
		beeswarm: string
		/**
		 * D​o​t​ ​h​i​s​t​o​g​r​a​m
		 */
		dotHistogram: string
		/**
		 * H​i​s​t​o​g​r​a​m​ ​a​n​d​ ​d​e​n​s​i​t​y
		 */
		histogramAndDensity: string
		/**
		 * V​a​l​u​e​s​ ​d​i​s​t​r​i​b​u​t​i​o​n
		 */
		distribution: string
		/**
		 * S​u​m​m​a​r​y
		 */
		summary: string
		/**
		 * P​o​p​u​l​a​t​i​o​n​ ​(​n​o​n​-​n​u​l​l​ ​v​a​l​u​e​s​)
		 */
		population: string
		/**
		 * M​i​n​i​m​u​m
		 */
		minimum: string
		/**
		 * M​a​x​i​m​u​m
		 */
		maximum: string
		/**
		 * M​e​a​n
		 */
		mean: string
		/**
		 * M​e​d​i​a​n
		 */
		median: string
		/**
		 * S​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n
		 */
		standardDeviation: string
		/**
		 * V​a​r​i​a​n​c​e
		 */
		variance: string
		/**
		 * V​a​r​i​a​n​c​e​ ​c​o​e​f​f​i​c​i​e​n​t
		 */
		varianceCoefficient: string
		/**
		 * S​k​e​w​n​e​s​s
		 */
		skewness: string
		/**
		 * C​l​a​s​s​i​f​i​c​a​t​i​o​n
		 */
		classification: string
		/**
		 * C​l​a​s​s​i​f​i​c​a​t​i​o​n​ ​m​e​t​h​o​d
		 */
		classificationMethod: string
		classificationMethods: {
			/**
			 * E​q​u​a​l​ ​i​n​t​e​r​v​a​l​s
			 */
			equalIntervals: string
			/**
			 * Q​u​a​n​t​i​l​e​s
			 */
			quantiles: string
			/**
			 * N​a​t​u​r​a​l​ ​b​r​e​a​k​s​ ​(​C​K​M​e​a​n​s​)
			 */
			ckmeans: string
			/**
			 * N​a​t​u​r​a​l​ ​b​r​e​a​k​s​ ​(​J​e​n​k​s​)
			 */
			jenks: string
			/**
			 * S​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n
			 */
			standardDeviation: string
			/**
			 * Q​6
			 */
			q6: string
			/**
			 * P​r​e​t​t​y
			 */
			pretty: string
			/**
			 * G​e​o​m​e​t​r​i​c​ ​p​r​o​g​r​e​s​s​i​o​n
			 */
			geometricProgression: string
			/**
			 * A​r​i​t​h​m​e​t​i​c​ ​p​r​o​g​r​e​s​s​i​o​n
			 */
			arithmeticProgression: string
			/**
			 * N​e​s​t​e​d​ ​m​e​a​n​s
			 */
			nestedMeans: string
			/**
			 * H​e​a​d​/​t​a​i​l
			 */
			headTail: string
			/**
			 * M​a​n​u​a​l
			 */
			manual: string
		}
		classificationMethodLegendDescriptions: {
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​e​q​u​a​l​ ​i​n​t​e​r​v​a​l​s
			 */
			equalIntervals: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​q​u​a​n​t​i​l​e​s
			 */
			quantiles: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​n​a​t​u​r​a​l​ ​b​r​e​a​k​s​ ​(​C​K​M​e​a​n​s​)
			 */
			ckmeans: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​n​a​t​u​r​a​l​ ​b​r​e​a​k​s​ ​(​J​e​n​k​s​)
			 */
			jenks: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​m​e​a​n​ ​a​n​d​ ​s​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n
			 */
			standardDeviation: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​t​h​e​ ​Q​6​ ​m​e​t​h​o​d
			 */
			q6: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​t​h​e​ ​"​p​r​e​t​t​y​ ​b​r​e​a​k​s​"​ ​m​e​t​h​o​d
			 */
			pretty: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​a​ ​g​e​o​m​e​t​r​i​c​ ​p​r​o​g​r​e​s​s​i​o​n
			 */
			geometricProgression: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​a​n​ ​a​r​i​t​h​m​e​t​i​c​ ​p​r​o​g​r​e​s​s​i​o​n
			 */
			arithmeticProgression: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​t​h​e​ ​h​e​a​d​/​t​a​i​l​ ​b​r​e​a​k​ ​m​e​t​h​o​d
			 */
			headTail: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​m​a​n​u​a​l​l​y
			 */
			manual: string
		}
		/**
		 * N​u​m​b​e​r​ ​o​f​ ​c​l​a​s​s​e​s
		 */
		numberOfClasses: string
		/**
		 * M​e​a​n​ ​v​a​l​u​e​ ​p​o​s​i​t​i​o​n
		 */
		meanPosition: string
		/**
		 * C​l​a​s​s​ ​c​e​n​t​e​r
		 */
		meanPositionCenter: string
		/**
		 * C​l​a​s​s​ ​b​o​u​n​d​a​r​y
		 */
		meanPositionBoundary: string
		/**
		 * A​m​p​l​i​t​u​d​e
		 */
		amplitude: string
		/**
		 * s​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n​s
		 */
		howManyStdDev: string
		/**
		 * C​o​l​o​r​ ​s​c​h​e​m​e​ ​t​y​p​e
		 */
		typeScheme: string
		/**
		 * S​e​q​u​e​n​t​i​a​l
		 */
		sequential: string
		/**
		 * D​i​v​e​r​g​i​n​g
		 */
		diverging: string
		/**
		 * P​a​l​e​t​t​e
		 */
		palette: string
		/**
		 * R​e​v​e​r​s​e​ ​p​a​l​e​t​t​e
		 */
		reversePalette: string
		/**
		 * N​e​u​t​r​a​l​ ​c​e​n​t​r​a​l​ ​c​l​a​s​s
		 */
		neutralCentralClass: string
		/**
		 * C​e​n​t​r​a​l​ ​c​l​a​s​s​ ​p​o​s​i​t​i​o​n
		 */
		centralClassPosition: string
		/**
		 * I​n​f​l​e​x​i​o​n​ ​p​o​i​n​t​ ​p​o​s​i​t​i​o​n
		 */
		inflexionPointPosition: string
		/**
		 * D​i​s​p​l​a​y​ ​m​e​a​n
		 */
		displayMean: string
		/**
		 * D​i​s​p​l​a​y​ ​m​e​d​i​a​n
		 */
		displayMedian: string
		/**
		 * D​i​s​p​l​a​y​ ​s​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n
		 */
		displayStdDev: string
		/**
		 * L​o​g​a​r​i​t​h​m​i​c​ ​s​c​a​l​e
		 */
		logarithmicScale: string
		/**
		 * E​n​t​e​r​ ​c​l​a​s​s​ ​l​i​m​i​t​s
		 */
		breaksInput: string
		/**
		 * V​a​l​i​d​a​t​e
		 */
		validate: string
		/**
		 * {​{​O​n​e​ ​f​e​a​t​u​r​e​ ​w​i​t​h​o​u​t​ ​d​a​t​a​|​?​?​ ​f​e​a​t​u​r​e​s​ ​w​i​t​h​o​u​t​ ​d​a​t​a​}​}
		 */
		missingValues: string
		/**
		 * F​e​a​t​u​r​e​s​ ​p​e​r​ ​c​l​a​s​s
		 */
		count: string
		/**
		 * E​r​r​o​r​ ​-​ ​T​h​e​ ​c​l​a​s​s​ ​l​i​m​i​t​s​ ​e​n​t​e​r​e​d​ ​a​r​e​ ​i​n​v​a​l​i​d​.​ ​P​l​e​a​s​e​ ​e​n​t​e​r​ ​n​u​m​e​r​i​c​a​l​ ​v​a​l​u​e​s​ ​s​e​p​a​r​a​t​e​d​ ​b​y​ ​d​a​s​h​e​s​ ​t​o​ ​f​o​r​m​ ​a​t​ ​l​e​a​s​t​ ​2​ ​c​l​a​s​s​e​s​.
		 */
		errorCustomBreaks: string
		/**
		 * L​o​w​e​r​ ​l​i​m​i​t
		 */
		lowerLimit: string
		/**
		 * U​p​p​e​r​ ​l​i​m​i​t
		 */
		upperLimit: string
		/**
		 * S​i​z​e​ ​(​p​x​)
		 */
		size: string
	}
	Legend: {
		ContextMenu: {
			/**
			 * E​d​i​t​ ​s​e​t​t​i​n​g​s​.​.​.
			 */
			EditSettings: string
			/**
			 * H​i​d​e
			 */
			Hide: string
			/**
			 * U​p
			 */
			Up: string
			/**
			 * D​o​w​n
			 */
			Down: string
		}
		Modal: {
			/**
			 * L​e​g​e​n​d​ ​s​e​t​t​i​n​g​s
			 */
			Title: string
			/**
			 * L​e​g​e​n​d​ ​t​i​t​l​e
			 */
			LegendTitle: string
			/**
			 * L​e​g​e​n​d​ ​s​u​b​t​i​t​l​e
			 */
			LegendSubtitle: string
			/**
			 * L​e​g​e​n​d​ ​n​o​t​e
			 */
			LegendNote: string
			/**
			 * T​i​t​l​e
			 */
			titleTextElement: string
			/**
			 * S​u​b​t​i​t​l​e
			 */
			subtitleTextElement: string
			/**
			 * V​a​l​u​e​ ​l​a​b​e​l​s
			 */
			labelsTextElement: string
			/**
			 * A​x​e​s​ ​a​n​d​ ​l​a​b​e​l​s
			 */
			axisTextElement: string
			/**
			 * N​o​t​e
			 */
			noteTextElement: string
			/**
			 * D​i​s​p​l​a​y​ ​a​ ​r​e​c​t​a​n​g​l​e​ ​u​n​d​e​r​ ​t​h​e​ ​l​e​g​e​n​d
			 */
			DisplayBackgroundRectangle: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​c​o​l​o​r
			 */
			BackgroundRectangleColor: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​f​i​l​l​ ​o​p​a​c​i​t​y
			 */
			BackgroundRectangleOpacity: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​s​t​r​o​k​e​ ​c​o​l​o​r
			 */
			BackgroundRectangleStrokeColor: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​s​t​r​o​k​e​ ​w​i​d​t​h
			 */
			BackgroundRectangleStrokeWidth: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​s​t​r​o​k​e​ ​o​p​a​c​i​t​y
			 */
			BackgroundRectangleStrokeOpacity: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​f​i​l​l
			 */
			BackgroundRectangleFill: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​s​t​r​o​k​e
			 */
			BackgroundRectangleStroke: string
			/**
			 * L​e​g​e​n​d​ ​o​r​i​e​n​t​a​t​i​o​n
			 */
			LegendOrientation: string
			/**
			 * H​o​r​i​z​o​n​t​a​l
			 */
			LegendOrientationHorizontal: string
			/**
			 * V​e​r​t​i​c​a​l
			 */
			LegendOrientationVertical: string
			/**
			 * L​e​g​e​n​d​ ​l​a​y​o​u​t
			 */
			LegendSymbolLayout: string
			/**
			 * V​e​r​t​i​c​a​l
			 */
			LegendSymbolLayoutVertical: string
			/**
			 * H​o​r​i​z​o​n​t​a​l
			 */
			LegendSymbolLayoutHorizontal: string
			/**
			 * S​t​a​c​k​e​d
			 */
			LegendSymbolLayoutStacked: string
			/**
			 * A​d​d​ ​a​ ​v​a​l​u​e
			 */
			AddValue: string
			/**
			 * B​o​x​ ​w​i​d​t​h
			 */
			BoxWidth: string
			/**
			 * B​o​x​ ​h​e​i​g​h​t
			 */
			BoxHeight: string
			/**
			 * S​p​a​c​i​n​g​ ​b​e​t​w​e​e​n​ ​b​o​x​e​s
			 */
			BoxSpacing: string
			/**
			 * S​p​a​c​i​n​g​ ​b​e​t​w​e​e​n​ ​b​o​x​e​s​ ​a​n​d​ ​n​o​ ​d​a​t​a​ ​b​o​x
			 */
			BoxSpacingNoData: string
			/**
			 * L​a​b​e​l​ ​f​o​r​ ​t​h​e​ ​"​n​o​ ​d​a​t​a​"​ ​b​o​x
			 */
			NoDataLabel: string
			/**
			 * D​i​s​p​l​a​y​ ​a​ ​"​n​o​ ​d​a​t​a​"​ ​b​o​x
			 */
			NoDataBox: string
			/**
			 * B​o​x​ ​c​o​r​n​e​r​ ​r​a​d​i​u​s
			 */
			BoxCornerRadius: string
			/**
			 * D​i​s​p​l​a​y​ ​t​i​c​k​ ​b​e​t​w​e​e​n​ ​e​a​c​h​ ​b​o​x
			 */
			DisplayTick: string
			/**
			 * D​i​s​p​l​a​y​ ​s​t​r​o​k​e​ ​f​o​r​ ​e​a​c​h​ ​b​o​x
			 */
			DisplayStroke: string
			/**
			 * B​o​x​ ​s​t​r​o​k​e​ ​w​i​d​t​h
			 */
			BoxStrokeWidth: string
			/**
			 * R​o​u​n​d​ ​v​a​l​u​e​s
			 */
			RoundDecimals: string
			/**
			 * F​o​n​t​ ​p​r​o​p​e​r​t​i​e​s​.​.​.
			 */
			FontProperties: string
			/**
			 * S​p​a​c​i​n​g​ ​b​e​t​w​e​e​n​ ​s​y​m​b​o​l​s
			 */
			SymbolsSpacing: string
			/**
			 * C​h​o​i​c​e​ ​o​f​ ​v​a​l​u​e​s
			 */
			ChooseValues: string
			/**
			 * L​i​n​e​ ​l​e​n​g​t​h
			 */
			LineLength: string
			/**
			 * W​i​d​t​h
			 */
			Width: string
			/**
			 * H​e​i​g​h​t
			 */
			Height: string
			/**
			 * T​o​p​ ​p​a​r​t​ ​v​a​r​i​a​b​l​e​ ​t​i​t​l​e
			 */
			MushroomsTopTitle: string
			/**
			 * T​o​p​ ​p​a​r​t​ ​v​a​r​i​a​b​l​e​ ​t​i​t​l​e​ ​c​o​l​o​r
			 */
			MushroomsTopTitleColor: string
			/**
			 * B​o​t​t​o​m​ ​p​a​r​t​ ​v​a​r​i​a​b​l​e​ ​t​i​t​l​e
			 */
			MushroomsBottomTitle: string
			/**
			 * B​o​t​t​o​m​ ​p​a​r​t​ ​v​a​r​i​a​b​l​e​ ​t​i​t​l​e​ ​c​o​l​o​r
			 */
			MushroomsBottomTitleColor: string
			/**
			 * B​a​r​ ​o​r​d​e​r
			 */
			BarOrder: string
			/**
			 * A​s​c​e​n​d​i​n​g
			 */
			BarOrderAscending: string
			/**
			 * D​e​s​c​e​n​d​i​n​g
			 */
			BarOrderDescending: string
			/**
			 * S​a​m​e​ ​o​r​d​e​r​ ​a​s​ ​i​n​ ​t​h​e​ ​l​e​g​e​n​d
			 */
			BarOrderNone: string
			/**
			 * A​x​e​s​ ​a​n​d​ ​l​a​b​e​l​s
			 */
			AxesAndLabels: string
			/**
			 * D​o​t​ ​c​o​l​o​r
			 */
			DotColor: string
			/**
			 * R​e​g​r​e​s​s​i​o​n​ ​l​i​n​e​ ​c​o​l​o​r
			 */
			RegressionLineColor: string
			/**
			 * L​e​g​e​n​d​ ​c​o​n​t​e​n​t
			 */
			LegendContent: string
		}
	}
	CommonTextElement: {
		/**
		 * F​o​n​t​ ​s​i​z​e
		 */
		FontSize: string
		/**
		 * F​o​n​t​ ​c​o​l​o​r
		 */
		FontColor: string
		/**
		 * F​o​n​t​ ​f​a​m​i​l​y
		 */
		FontFamily: string
		/**
		 * F​o​n​t​ ​w​e​i​g​h​t
		 */
		FontWeight: string
		/**
		 * F​o​n​t​ ​s​t​y​l​e
		 */
		FontStyle: string
		/**
		 * N​o​r​m​a​l
		 */
		Normal: string
		/**
		 * B​o​l​d
		 */
		Bold: string
		/**
		 * I​t​a​l​i​c
		 */
		Italic: string
		/**
		 * U​n​d​e​r​l​i​n​e
		 */
		Underline: string
	}
}

export type TranslationFunctions = {
	/**
	 * Start Application
	 */
	StartApplication: () => LocalizedString
	/**
	 * Confirm
	 */
	SuccessButton: () => LocalizedString
	/**
	 * Cancel
	 */
	CancelButton: () => LocalizedString
	/**
	 * Apply
	 */
	ApplyButton: () => LocalizedString
	Alerts: {
		/**
		 * Delete layer
		 */
		DeleteLayer: () => LocalizedString
		/**
		 * Delete table
		 */
		DeleteTable: () => LocalizedString
		/**
		 * Create a new empty project ?
		 */
		EmptyProject: () => LocalizedString
		/**
		 * Save changes ?
		 */
		SaveEditedData: () => LocalizedString
		/**
		 * A project was automatically saved when the page was closed on {0}. Reload this project ?
		 */
		ReloadLastProject: (arg0: unknown) => LocalizedString
	}
	LoadingMessages: {
		/**
		 * Loading...
		 */
		Default: () => LocalizedString
		/**
		 * Reloading project...
		 */
		Reloading: () => LocalizedString
		/**
		 * Preparing export...
		 */
		ExportPreparation: () => LocalizedString
		/**
		 * Data preparation...
		 */
		SmoothingDataPreparation: () => LocalizedString
		/**
		 * Computing KDE on GPU...
		 */
		SmoothingComputingGPUKDE: () => LocalizedString
		/**
		 * Computing Stewart's potential on GPU...
		 */
		SmoothingComputingGPUStewart: () => LocalizedString
		/**
		 * Computing contours...
		 */
		SmoothingContours: () => LocalizedString
		/**
		 * Clipping contours with mask layer...
		 */
		SmoothingIntersections: () => LocalizedString
	}
	Messages: {
		/**
		 * Information
		 */
		Information: () => LocalizedString
		/**
		 * Warning
		 */
		Warning: () => LocalizedString
		/**
		 * Error
		 */
		Error: () => LocalizedString
		/**
		 * Click to show/hide
		 */
		ChevronTitle: () => LocalizedString
	}
	HeaderApp: {
		/**
		 * Night / Day mode
		 */
		NightDayMode: () => LocalizedString
		/**
		 * Import a Magrit project
		 */
		ImportProjet: () => LocalizedString
		/**
		 * Save project
		 */
		SaveProject: () => LocalizedString
		/**
		 * New project
		 */
		NewProject: () => LocalizedString
		/**
		 * About Magrit / General settings
		 */
		About: () => LocalizedString
		/**
		 * Language selection
		 */
		Language: () => LocalizedString
		/**
		 * Undo
		 */
		Undo: () => LocalizedString
		/**
		 * Redo
		 */
		Redo: () => LocalizedString
		/**
		 * Application settings
		 */
		ApplicationSettings: () => LocalizedString
	}
	Pagination: {
		/**
		 * Next
		 */
		Next: () => LocalizedString
		/**
		 * Previous
		 */
		Previous: () => LocalizedString
	}
	Datasets: {
		quartiers_paris: {
			/**
			 * Neighborhoods of Paris
			 */
			name: () => LocalizedString
			/**
			 * The 80 neighborhoods of Paris
			 */
			abstract: () => LocalizedString
			fields: {
				/**
				 * INSEE code of the neighborhood
				 */
				c_quinsee: () => LocalizedString
				/**
				 * Sequential identifier of the neighborhood
				 */
				n_sq_qu: () => LocalizedString
				/**
				 * Neighborhood number
				 */
				c_qu: () => LocalizedString
				/**
				 * Area of the neighborhood in m2
				 */
				surface: () => LocalizedString
				/**
				 * Link to district - sequential identifier of district
				 */
				n_sq_ar: () => LocalizedString
				/**
				 * Neighborhood name
				 */
				l_qu: () => LocalizedString
				/**
				 * District number
				 */
				c_ar: () => LocalizedString
				/**
				 * Population 2012
				 */
				P12_POP: () => LocalizedString
				/**
				 * Population 2007
				 */
				P07_POP: () => LocalizedString
			}
			/**
			 * France, Paris, neighborhoods, municipalities
			 */
			keywords: () => LocalizedString
			/**
			 * © Atelier Parisien d'Urbanisme (APUR)
			 */
			geometryAttribution: () => LocalizedString
			dataAttribution: {
				/**
				 * © INSEE
				 */
				'1': () => LocalizedString
			}
		}
		fra_metro_com: {
			/**
			 * Metropolitan France – municipalities
			 */
			name: () => LocalizedString
			/**
			 * The 34858 metropolitan French municipalities (2023 editions) based on Voronoi polygons
			 */
			abstract: () => LocalizedString
			fields: {
				/**
				 * Municipal identifier
				 */
				INSEE_COM: () => LocalizedString
				/**
				 * Name
				 */
				NOM: () => LocalizedString
				/**
				 * Total population, 2020
				 */
				POP_2020: () => LocalizedString
				/**
				 * Total area, 2023 (km²)
				 */
				SUPERF_2023: () => LocalizedString
			}
			/**
			 * France, communes, municipalities, metropolitan areas
			 */
			keywords: () => LocalizedString
			/**
			 * © RIATE - from IGN municipality centroids and Natural Earth simplified contours
			 */
			geometryAttribution: () => LocalizedString
			dataAttribution: {
				/**
				 * © INSEE - 2024
				 */
				'1': () => LocalizedString
			}
		}
		fra_metro_dep: {
			/**
			 * Metropolitan France – departments
			 */
			name: () => LocalizedString
			/**
			 * Les 96 metropolitan French departments
			 */
			abstract: () => LocalizedString
			fields: {
				/**
				 * Department identifier
				 */
				DEP: () => LocalizedString
				/**
				 * Name
				 */
				NOM: () => LocalizedString
				/**
				 * Total population, 2020
				 */
				POP_2020: () => LocalizedString
				/**
				 * Total area, 2023 (km²)
				 */
				SUPERF_2023: () => LocalizedString
			}
			/**
			 * France, department, metropolitan areas
			 */
			keywords: () => LocalizedString
			/**
			 * © RIATE - aggregated from the metropolitan French municipalities layer
			 */
			geometryAttribution: () => LocalizedString
			dataAttribution: {
				/**
				 * © INSEE - 2024
				 */
				'1': () => LocalizedString
			}
		}
		nuts0: {
			/**
			 * Europe – NUTS0
			 */
			name: () => LocalizedString
			/**
			 * The 37 European NUTS0 (2016 version) : EU27, Candidate Countries, European Free Trade Association and United Kingdom
			 */
			abstract: () => LocalizedString
			fields: {
				/**
				 * NUTS identifier
				 */
				NUTS_ID: () => LocalizedString
				/**
				 * Name
				 */
				NAME_LTN: () => LocalizedString
				/**
				 * Total area 2024 (km²)
				 */
				AREA_TOT_2024: () => LocalizedString
				/**
				 * EU27, EFTA, CC or UK
				 */
				zone: () => LocalizedString
			}
			/**
			 * Europe, NUTS, NUTS0, Country
			 */
			keywords: () => LocalizedString
			/**
			 * © EuroGeographics for the administrative boundaries
			 */
			geometryAttribution: () => LocalizedString
			dataAttribution: {
				/**
				 * © European Union, 1995 - today
				 */
				'1': () => LocalizedString
			}
		}
		nuts1: {
			/**
			 * Europe – NUTS1
			 */
			name: () => LocalizedString
			/**
			 * The 125 European NUTS1 (2016 version) : EU27, Candidate Countries, European Free Trade Association and United Kingdom
			 */
			abstract: () => LocalizedString
			fields: {
				/**
				 * NUTS identifier
				 */
				NUTS_ID: () => LocalizedString
				/**
				 * Name
				 */
				NAME_LTN: () => LocalizedString
				/**
				 * Total area 2024 (km²)
				 */
				AREA_TOT_2024: () => LocalizedString
				/**
				 * EU27, EFTA, CC or UK
				 */
				zone: () => LocalizedString
			}
			/**
			 * Europe, NUTS, NUTS1, Region
			 */
			keywords: () => LocalizedString
			/**
			 * © EuroGeographics for the administrative boundaries
			 */
			geometryAttribution: () => LocalizedString
			dataAttribution: {
				/**
				 * © European Union, 1995 - today
				 */
				'1': () => LocalizedString
			}
		}
		nuts2: {
			/**
			 * Europe – NUTS2
			 */
			name: () => LocalizedString
			/**
			 * The 327 European NUTS2 (2016 version) : EU27, Candidate Countries, European Free Trade Association and United Kingdom
			 */
			abstract: () => LocalizedString
			fields: {
				/**
				 * NUTS identifier
				 */
				NUTS_ID: () => LocalizedString
				/**
				 * Name
				 */
				NAME_LTN: () => LocalizedString
				/**
				 * Total area 2024 (km²)
				 */
				AREA_TOT_2024: () => LocalizedString
				/**
				 * EU27, EFTA, CC or UK
				 */
				zone: () => LocalizedString
			}
			/**
			 * Europe, NUTS, NUTS1, Region
			 */
			keywords: () => LocalizedString
			/**
			 * © EuroGeographics for the administrative boundaries
			 */
			geometryAttribution: () => LocalizedString
			dataAttribution: {
				/**
				 * © European Union, 1995 - today
				 */
				'1': () => LocalizedString
			}
		}
		nuts2_data: {
			/**
			 * Europe - NUTS2 with example data
			 */
			name: () => LocalizedString
			/**
			 * The 332 European NUTS2 (2016 version): EU27, Candidate Countries, European Free Trade Association and United Kingdom. Associated with key indicators extracted from Eurostat (last year available) and associated with reference geometries
			 */
			abstract: () => LocalizedString
			fields: {
				/**
				 * NUTS identifier
				 */
				NUTS_ID: () => LocalizedString
				/**
				 * Name
				 */
				NAME_LATN: () => LocalizedString
				/**
				 * Total population, 2023
				 */
				POP_TOT_2023: () => LocalizedString
				/**
				 * Total area 2024 (km²)
				 */
				AREA_TOT_2024: () => LocalizedString
				/**
				 * Share of population aged 0-9, 2023 (%)
				 */
				POP_09_RT_2023: () => LocalizedString
				/**
				 * Share of population aged 0-24, 2023 (%)
				 */
				POP_024_RT_2023: () => LocalizedString
				/**
				 * Share of population aged over 65, 2023 (%)
				 */
				POP_65P_RT_2023: () => LocalizedString
				/**
				 * Share of population aged over 80, 2023 (%)
				 */
				POP_80P_RT_2023: () => LocalizedString
				/**
				 * Life expectancy at birth, 2022 (years)
				 */
				LIFE_EXP_2022: () => LocalizedString
				/**
				 * Share of working population with a high level of education, 2023 (%)
				 */
				HIGH_EDU_2023: () => LocalizedString
				/**
				 * Unemployment rate, over 25s, 2023 (%)
				 */
				UNEMP_25P_2023: () => LocalizedString
				/**
				 * Long-term unemployment rate (over 12 months) for the 25+ age group, 2023 (%)
				 */
				UNEMP_LT_25P_2023: () => LocalizedString
				/**
				 * Gross domestic product in purchasing power parity per capita, 2022 (euros)
				 */
				GDP_CAP_PPS_2022: () => LocalizedString
				/**
				 * Household income in purchasing power parity, 2021 (euros)
				 */
				INC_PPS_2021: () => LocalizedString
				/**
				 * Share of artificial surface, 2018 (%)
				 */
				AREA_ART_RT: () => LocalizedString
				/**
				 * Share of area dedicated to crops, 2018 (%)
				 */
				AREA_CUL_RT: () => LocalizedString
				/**
				 * Share of wooded area, 2018 (%)
				 */
				AREA_BOI_RT: () => LocalizedString
				/**
				 * EU27, EFTA, CC or UK
				 */
				zone: () => LocalizedString
			}
			/**
			 * Europe, NUTS, NUTS2, Region
			 */
			keywords: () => LocalizedString
			/**
			 * © EuroGeographics for the administrative boundaries
			 */
			geometryAttribution: () => LocalizedString
			dataAttribution: {
				/**
				 * © European Union, 1995 - today
				 */
				'1': () => LocalizedString
			}
		}
		world_177: {
			/**
			 * World – 177 countries
			 */
			name: () => LocalizedString
			/**
			 * The 177 countries of the World : a dataset derived from Natural Earth (110m) and consolidated by Philippe Rivière. Associated with key indicators extracted from United Nations and World bank (last year available)
			 */
			abstract: () => LocalizedString
			fields: {
				/**
				 * ISO3 identifier
				 */
				a3: () => LocalizedString
				/**
				 * SDMX Global Registry identifier
				 */
				id: () => LocalizedString
				/**
				 * Name
				 */
				name: () => LocalizedString
				/**
				 * Regional belonging
				 */
				REGION_BLOC: () => LocalizedString
				/**
				 * United Nations region of belonging
				 */
				REGION_UN: () => LocalizedString
				/**
				 * United Nations sub-region of belonging
				 */
				SUBREGION_UN: () => LocalizedString
				/**
				 * Belonging to the UN Least Developed Countries list
				 */
				LAST_DEV: () => LocalizedString
				/**
				 * Total area, 2021 (km²)
				 */
				AREA_2021: () => LocalizedString
				/**
				 * Forest area, 2021, (km²)
				 */
				FOREST_AREA_2021: () => LocalizedString
				/**
				 * Total population, 2022
				 */
				POP_2022: () => LocalizedString
				/**
				 * Life expectancy at birth, 2022 (years)
				 */
				LIFE_EXP_2022: () => LocalizedString
				/**
				 * Fertility rate, 2022 (births per woman)
				 */
				FERT_2022: () => LocalizedString
				/**
				 * Prevalence of HIV,2022 (% of population ages 15-49)
				 */
				HIV_2022: () => LocalizedString
				/**
				 * CO2 emissions, 2020 (metric tons per capita)
				 */
				CO2_POP_2020: () => LocalizedString
				/**
				 * GNI per capita, PPP, 2022 (current international $)
				 */
				GNI_POP_2022: () => LocalizedString
				/**
				 * Income share held by lowest 20% , 2021 (%)
				 */
				INC_20P_2021: () => LocalizedString
				/**
				 * Industry (including construction), value added, 2022 (% of GDP)
				 */
				GDP_INDS_2022: () => LocalizedString
				/**
				 * High-technology exports, 2022 (% of manufactured exports)
				 */
				HIG_TEC_EXP_2022: () => LocalizedString
				/**
				 * Military expenditure, 2022 (% of GDP) 
				 */
				MIL_EXP_2022: () => LocalizedString
			}
			/**
			 * Monde, pays, Nations Unies
			 */
			keywords: () => LocalizedString
			/**
			 * Natural Earth et Philippe Rivière (Visionscarto), 2024
			 */
			geometryAttribution: () => LocalizedString
			dataAttribution: {
				/**
				 * World Bank, 2024
				 */
				'1': () => LocalizedString
				/**
				 * United Nations (consolidated by RIATE), 2024
				 */
				'2': () => LocalizedString
			}
		}
		world_242: {
			/**
			 * World – 242 countries
			 */
			name: () => LocalizedString
			/**
			 * The 242 countries of the World : a dataset derived from Natural Earth (50m) and consolidated by Philippe Rivière. Associated with key indicators extracted from United Nations and World bank (last year available)
			 */
			abstract: () => LocalizedString
			fields: {
				/**
				 * ISO3 identifier
				 */
				a3: () => LocalizedString
				/**
				 * SDMX Global Registry identifier
				 */
				id: () => LocalizedString
				/**
				 * Name
				 */
				name: () => LocalizedString
				/**
				 * Regional belonging
				 */
				REGION_BLOC: () => LocalizedString
				/**
				 * United Nations region of belonging
				 */
				REGION_UN: () => LocalizedString
				/**
				 * United Nations sub-region of belonging
				 */
				SUBREGION_UN: () => LocalizedString
				/**
				 * Belonging to the UN Least Developed Countries list
				 */
				LAST_DEV: () => LocalizedString
				/**
				 * Total area, 2021 (km²)
				 */
				AREA_2021: () => LocalizedString
				/**
				 * Forest area, 2021, (km²)
				 */
				FOREST_AREA_2021: () => LocalizedString
				/**
				 * Total population, 2022
				 */
				POP_2022: () => LocalizedString
				/**
				 * Life expectancy at birth, 2022 (years)
				 */
				LIFE_EXP_2022: () => LocalizedString
				/**
				 * Fertility rate, 2022 (births per woman)
				 */
				FERT_2022: () => LocalizedString
				/**
				 * Prevalence of HIV,2022 (% of population ages 15-49)
				 */
				HIV_2022: () => LocalizedString
				/**
				 * CO2 emissions, 2020 (metric tons per capita)
				 */
				CO2_POP_2020: () => LocalizedString
				/**
				 * GNI per capita, PPP, 2022 (current international $)
				 */
				GNI_POP_2022: () => LocalizedString
				/**
				 * Income share held by lowest 20% , 2021 (%)
				 */
				INC_20P_2021: () => LocalizedString
				/**
				 * Industry (including construction), value added, 2022 (% of GDP)
				 */
				GDP_INDS_2022: () => LocalizedString
				/**
				 * High-technology exports, 2022 (% of manufactured exports)
				 */
				HIG_TEC_EXP_2022: () => LocalizedString
				/**
				 * Military expenditure, 2022 (% of GDP) 
				 */
				MIL_EXP_2022: () => LocalizedString
			}
			/**
			 * Monde, pays, Nations Unies
			 */
			keywords: () => LocalizedString
			/**
			 * Natural Earth et Philippe Rivière (Visionscarto), 2024
			 */
			geometryAttribution: () => LocalizedString
			dataAttribution: {
				/**
				 * World Bank, 2024
				 */
				'1': () => LocalizedString
				/**
				 * United Nations (consolidated by RIATE), 2024
				 */
				'2': () => LocalizedString
			}
		}
	}
	DatasetCatalog: {
		/**
		 * Example dataset catalog
		 */
		title: () => LocalizedString
		/**
		 * Search a dataset...
		 */
		placeholderSearchBar: () => LocalizedString
		/**
		 * Search
		 */
		searchButton: () => LocalizedString
		/**
		 * {{One dataset|?? datasets}}
		 */
		datasets: (arg0: number | string | boolean) => LocalizedString
		/**
		 * About
		 */
		about: () => LocalizedString
		/**
		 * Description
		 */
		description: () => LocalizedString
		/**
		 * Variable description
		 */
		variableDescription: () => LocalizedString
		variable: {
			/**
			 * Name
			 */
			name: () => LocalizedString
			/**
			 * Description
			 */
			description: () => LocalizedString
			/**
			 * Provenance
			 */
			provenance: () => LocalizedString
		}
		/**
		 * Preview
		 */
		preview: () => LocalizedString
		/**
		 * License (geometries)
		 */
		licenseGeometry: () => LocalizedString
		/**
		 * License (data)
		 */
		licenceData: () => LocalizedString
		/**
		 * Type
		 */
		type: () => LocalizedString
		types: {
			/**
			 * Vector dataset
			 */
			vector: () => LocalizedString
			/**
			 * Raster dataset
			 */
			raster: () => LocalizedString
		}
		/**
		 * Provider (geometries)
		 */
		providerGeometry: () => LocalizedString
		/**
		 * Provider (data)
		 */
		providerData: () => LocalizedString
		/**
		 * Attributions (geometries)
		 */
		attributionGeometry: () => LocalizedString
		/**
		 * Attributions (data)
		 */
		attributionData: () => LocalizedString
		/**
		 * Date
		 */
		date: () => LocalizedString
		/**
		 * Source
		 */
		source: () => LocalizedString
		/**
		 * {{One feature|?? features}}
		 */
		features: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Direct link to the dataset
		 */
		directLink: () => LocalizedString
		/**
		 * Select a dataset to see its details.
		 */
		placeholderDatasetDetail: () => LocalizedString
		/**
		 * No dataset matches your search.
		 */
		noSearchResult: () => LocalizedString
		/**
		 * Dataset preview
		 */
		altDatasetPreview: () => LocalizedString
		/**
		 * Add to map
		 */
		confirmButton: () => LocalizedString
		/**
		 * Cancel
		 */
		cancelButton: () => LocalizedString
	}
	ImportWindow: {
		/**
		 * Data import
		 */
		Title: () => LocalizedString
		/**
		 * Drag and drop one or more datasets here (geographical or tabular) or click on the button below to select a file.
		 */
		Instructions: () => LocalizedString
		/**
		 * Open...
		 */
		Open: () => LocalizedString
		/**
		 * Supported vector formats are: ESRI Shapefile (.shp, .shx, .dbf, .prj, .cpg), GeoPackage (.gpkg), GeoJSON (.geojson or .json), TopoJSON (.topojson or .json), GML (.gml) and KML (.kml).
		 */
		SupportedVectorFormats: () => LocalizedString
		/**
		 * Supported tabular formats are: Excel (.xls, .xlsx), CSV (.csv), TSV (.tsv) and OpenDocument Spreadsheet (.ods).
		 */
		SupportedTabularFormats: () => LocalizedString
		/**
		 * Please note that you can only import files, not folders.
		 */
		InstructionNotFolder: () => LocalizedString
		/**
		 * Analyzing dataset...
		 */
		AnalyzingDataset: () => LocalizedString
		/**
		 * Cancel
		 */
		CancelButton: () => LocalizedString
		/**
		 * {{No dataset to import|Import dataset|Import ?? datasets}}
		 */
		ImportButton: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Layer name
		 */
		LayerName: () => LocalizedString
		/**
		 * Features
		 */
		Features: () => LocalizedString
		/**
		 * Geometry type
		 */
		GeometryType: () => LocalizedString
		/**
		 * CRS
		 */
		CRS: () => LocalizedString
		/**
		 * Use this projection
		 */
		UseProjection: () => LocalizedString
		/**
		 * Simplify
		 */
		Simplify: () => LocalizedString
		/**
		 * Simplification is only available for (Multi)LineString and (Multi)Polygon vector layers.
		 */
		SimplifyDisabledTooltip: () => LocalizedString
		/**
		 * Simplify the geometries of the layer to reduce the size of the dataset and improve performance. A new window will open to allow you to choose the simplification options.
		 */
		SimplifyTooltip: () => LocalizedString
		/**
		 * Fit extent
		 */
		FitExtent: () => LocalizedString
		/**
		 * Add to project
		 */
		AddToProject: () => LocalizedString
		/**
		 * Delete ?
		 */
		Delete: () => LocalizedString
		/**
		 * Incomplete
		 */
		Incomplete: () => LocalizedString
		/**
		 * The dataset is incomplete and cannot be imported. Please add the other mandatory files.
		 */
		IncompleteMessage: () => LocalizedString
		/**
		 * Unsupported file format for {file}
		 */
		UnsupportedFileFormat: (arg: { file: unknown }) => LocalizedString
		/**
		 * Error while reading file {file}: {message}
		 */
		ErrorReadingFile: (arg: { file: unknown, message: unknown }) => LocalizedString
		/**
		 * Removed {{0 feature|a feature|?? features}} without geometry from dataset {name}.
		 */
		RemovedEmptyFeatures: (arg: { name: unknown, nRemoved: number | string | boolean }) => LocalizedString
		/**
		 * {{One feature|?? features}}
		 */
		NFeatures: (arg0: number | string | boolean) => LocalizedString
	}
	MapZone: {
		/**
		 * Drag and drop your file(s) here ! (or use the import menu)
		 */
		DropFilesHere: () => LocalizedString
		Controls: {
			/**
			 * Zoom in
			 */
			Plus: () => LocalizedString
			/**
			 * Zoom out
			 */
			Minus: () => LocalizedString
			/**
			 * Lock zoom / position
			 */
			Lock: () => LocalizedString
			/**
			 * Unlock zoom / position
			 */
			Unlock: () => LocalizedString
			/**
			 * Display information on selected feature
			 */
			Info: () => LocalizedString
			/**
			 * Layer name: {layerName}
			 */
			InfoLayerName: (arg: { layerName: unknown }) => LocalizedString
			/**
			 * Hover over a feature to display its information. Press "Esc" to close.
			 */
			InfoInstruction: () => LocalizedString
		}
	}
	LeftMenu: {
		/**
		 * Data import
		 */
		Import: () => LocalizedString
		/**
		 * Map configuration
		 */
		MapConfiguration: () => LocalizedString
		/**
		 * Cartographic projection
		 */
		Projection: () => LocalizedString
		/**
		 * Layer manager
		 */
		LayerManager: () => LocalizedString
		/**
		 * Choice of portrayal or analysis functionality
		 */
		FunctionalityChoice: () => LocalizedString
		/**
		 * Map and data export
		 */
		ExportSection: () => LocalizedString
		/**
		 * Page layout and skin elements
		 */
		LayoutFeatures: () => LocalizedString
		/**
		 * Expand / collapse the menu
		 */
		CollapseExpand: () => LocalizedString
	}
	ImportSection: {
		/**
		 * Open data import window...
		 */
		OpenImportWindow: () => LocalizedString
		/**
		 * Browse example datasets...
		 */
		ExampleDatasets: () => LocalizedString
	}
	MapConfiguration: {
		/**
		 * Dimensions
		 */
		Dimensions: () => LocalizedString
		/**
		 * Width
		 */
		Width: () => LocalizedString
		/**
		 * Height
		 */
		Height: () => LocalizedString
		/**
		 * Projection
		 */
		Projection: () => LocalizedString
		/**
		 * Global projections
		 */
		GlobalProjections: () => LocalizedString
		/**
		 * Local projections
		 */
		LocalProjections: () => LocalizedString
		/**
		 * Recently used projections
		 */
		RecentlyUsedProjections: () => LocalizedString
		/**
		 * More projections...
		 */
		MoreProjection: () => LocalizedString
		/**
		 * Lock zoom / position
		 */
		LockZoom: () => LocalizedString
		/**
		 * Show projection parameters
		 */
		ShowProjectionParameters: () => LocalizedString
		/**
		 * λ-axis rotation
		 */
		ProjectionCenterLambda: () => LocalizedString
		/**
		 * φ-axis rotation
		 */
		ProjectionCenterPhi: () => LocalizedString
		/**
		 * γ-axis rotation
		 */
		ProjectionCenterGamma: () => LocalizedString
		/**
		 * Standard parallel
		 */
		StandardParallel: () => LocalizedString
		/**
		 * Standard parallels
		 */
		StandardParallels: () => LocalizedString
	}
	LayoutFeatures: {
		/**
		 * Background color
		 */
		BackgroundColor: () => LocalizedString
		/**
		 * Opacity
		 */
		Opacity: () => LocalizedString
		/**
		 * Map margins
		 */
		MapMargins: () => LocalizedString
		/**
		 * Couleur
		 */
		Color: () => LocalizedString
		/**
		 * Titre
		 */
		Title: () => LocalizedString
		/**
		 * Source
		 */
		Source: () => LocalizedString
		/**
		 * Map skin elements
		 */
		MapSkinElements: () => LocalizedString
		/**
		 * Sphere
		 */
		Sphere: () => LocalizedString
		/**
		 * Graticule
		 */
		Graticule: () => LocalizedString
		/**
		 * Rectangle
		 */
		Rectangle: () => LocalizedString
		/**
		 * Line / Arrow
		 */
		Line: () => LocalizedString
		/**
		 * Text
		 */
		Text: () => LocalizedString
		/**
		 * Image
		 */
		Image: () => LocalizedString
		/**
		 * Scale bar
		 */
		ScaleBar: () => LocalizedString
		/**
		 * North arrow
		 */
		NorthArrow: () => LocalizedString
		/**
		 * Free drawing
		 */
		FreeDrawing: () => LocalizedString
		/**
		 * Automatically align items on a grid
		 */
		SnapToGrid: () => LocalizedString
		/**
		 * Display the underlying grid
		 */
		DisplayGrid: () => LocalizedString
		ContextMenu: {
			/**
			 * Edit settings...
			 */
			EditSettings: () => LocalizedString
			/**
			 * Edit
			 */
			Edit: () => LocalizedString
			/**
			 * Delete
			 */
			Delete: () => LocalizedString
			/**
			 * Up
			 */
			Up: () => LocalizedString
			/**
			 * Down
			 */
			Down: () => LocalizedString
			/**
			 * Clone
			 */
			Clone: () => LocalizedString
		}
		ConfirmationMessages: {
			/**
			 * The "Sphere" layer has been added to the map.
			 */
			Sphere: () => LocalizedString
			/**
			 * The "Graticule" layer has been added to the map.
			 */
			Graticule: () => LocalizedString
		}
		DrawingInstructions: {
			/**
			 * Click to start drawing a line. Click again to add a point. Double-click to finish.
		Hold the Ctrl key to draw a straight line.
			 */
			Line: () => LocalizedString
			/**
			 * Click to locate the first corner of the rectangle. Click again to locate the opposite corner.
			 */
			Rectangle: () => LocalizedString
			/**
			 * Click to start drawing the desired shape and release to finish. Press "Esc" to close the drawing mode.
			 */
			FreeDrawing: () => LocalizedString
			/**
			 * Click to position the text.
			 */
			Text: () => LocalizedString
			/**
			 * Click to position the north arrow.
			 */
			NorthArrow: () => LocalizedString
			/**
			 * Click to position the scale bar.
			 */
			ScaleBar: () => LocalizedString
			/**
			 * Type your text here...
			 */
			TextPlaceholder: () => LocalizedString
			/**
			 * Press "Esc" to cancel.
			 */
			PressEscToCancel: () => LocalizedString
		}
		Modal: {
			/**
			 * Settings
			 */
			Title: () => LocalizedString
			/**
			 * Dashed line
			 */
			DashedLine: () => LocalizedString
			/**
			 * Display arrow head
			 */
			DisplayArrowHead: () => LocalizedString
			/**
			 * Stroke
			 */
			Stroke: () => LocalizedString
			/**
			 * Line
			 */
			Line: () => LocalizedString
			/**
			 * Fill
			 */
			Fill: () => LocalizedString
			/**
			 * Round corners
			 */
			RoundCorners: () => LocalizedString
			/**
			 * Rotation
			 */
			Rotation: () => LocalizedString
			/**
			 * Rotate manually
			 */
			RotateManually: () => LocalizedString
			/**
			 * Rotate automatically to geographic north
			 */
			RotateToNorth: () => LocalizedString
			/**
			 * North arrow type
			 */
			NorthArrowType: () => LocalizedString
			/**
			 * Simple north arrow
			 */
			SimpleNorthArrow: () => LocalizedString
			/**
			 * Fancy north arrow
			 */
			FancyNorthArrow: () => LocalizedString
			/**
			 * Distance on the map (unit chosen below)
			 */
			Distance: () => LocalizedString
			/**
			 * Width (px)
			 */
			Width: () => LocalizedString
			/**
			 * Height (px)
			 */
			Height: () => LocalizedString
			/**
			 * Size
			 */
			Size: () => LocalizedString
			/**
			 * Scale bar behavior
			 */
			ScaleBarBehavior: () => LocalizedString
			/**
			 * Fixed size (in px), displayed distance computed dynamically
			 */
			ScaleBarAbsoluteSize: () => LocalizedString
			/**
			 * Fixed distance (in distance unit), size (in px) computed dynamically
			 */
			ScaleBarGeographicSize: () => LocalizedString
			/**
			 * Location of the scale bar measure
			 */
			ScaleBarMeasureLocation: () => LocalizedString
			/**
			 * At the center of the map
			 */
			ScaleBarMeasureLocationCenterMap: () => LocalizedString
			/**
			 * Under the scale bar
			 */
			ScaleBarMeasureLocationUnderScaleBar: () => LocalizedString
			/**
			 * Distance unit
			 */
			Units: () => LocalizedString
			/**
			 * Distance unit label
			 */
			UnitLabel: () => LocalizedString
			/**
			 * Meters
			 */
			m: () => LocalizedString
			/**
			 * Kilometers
			 */
			km: () => LocalizedString
			/**
			 * Miles
			 */
			mi: () => LocalizedString
			/**
			 * Feet
			 */
			ft: () => LocalizedString
			/**
			 * Yards
			 */
			yd: () => LocalizedString
			/**
			 * Nautical miles
			 */
			nmi: () => LocalizedString
			/**
			 * Scale bar type
			 */
			ScaleBarType: () => LocalizedString
			/**
			 * Simple line
			 */
			simpleLine: () => LocalizedString
			/**
			 * Line with ticks on top
			 */
			lineWithTicksOnTop: () => LocalizedString
			/**
			 * Line with ticks on bottom
			 */
			lineWithTicksOnBottom: () => LocalizedString
			/**
			 * Black and white bar
			 */
			blackAndWhiteBar: () => LocalizedString
			/**
			 * Tick values (comma separated, starting from 0)
			 */
			TickValues: () => LocalizedString
			/**
			 * Label position
			 */
			LabelPosition: () => LocalizedString
			/**
			 * Top
			 */
			Top: () => LocalizedString
			/**
			 * Bottom
			 */
			Bottom: () => LocalizedString
			/**
			 * Text content
			 */
			TextContent: () => LocalizedString
			/**
			 * Font properties
			 */
			FontProperties: () => LocalizedString
			/**
			 * Font size
			 */
			FontSize: () => LocalizedString
			/**
			 * Font color
			 */
			FontColor: () => LocalizedString
			/**
			 * Font family
			 */
			FontFamily: () => LocalizedString
			/**
			 * Font weight
			 */
			FontWeight: () => LocalizedString
			/**
			 * Font style
			 */
			FontStyle: () => LocalizedString
			/**
			 * Normal
			 */
			Normal: () => LocalizedString
			/**
			 * Bold
			 */
			Bold: () => LocalizedString
			/**
			 * Italic
			 */
			Italic: () => LocalizedString
			/**
			 * Underline
			 */
			Underline: () => LocalizedString
			/**
			 * Line through
			 */
			LineThrough: () => LocalizedString
			/**
			 * Text anchor
			 */
			TextAnchor: () => LocalizedString
			/**
			 * Start
			 */
			Start: () => LocalizedString
			/**
			 * Middle
			 */
			Middle: () => LocalizedString
			/**
			 * End
			 */
			End: () => LocalizedString
			/**
			 * Buffer around text
			 */
			BufferAroundText: () => LocalizedString
			/**
			 * Buffer color
			 */
			BufferColor: () => LocalizedString
			/**
			 * Buffer width
			 */
			BufferWidth: () => LocalizedString
			/**
			 * Allow modifying fill and stroke properties
			 */
			AllowModifyingFillStroke: () => LocalizedString
		}
	}
	AboutAndSettingsPanel: {
		/**
		 * About Magrit
		 */
		title: () => LocalizedString
		/**
		 * Credits
		 */
		TabAbout: () => LocalizedString
		/**
		 * Settings
		 */
		TabSettings: () => LocalizedString
		/**
		 * Magrit is an open source Web application for the visualization and the analysis of geospatial data. It is developed by the UAR RIATE (CNRS, Université Paris Cité).
		 */
		description: () => LocalizedString
		/**
		 * Useful links:
		 */
		usefulLinks: () => LocalizedString
		/**
		 * UAR RIATE
		 */
		UarRiate: () => LocalizedString
		/**
		 * GitHub project page
		 */
		linkGithub: () => LocalizedString
		/**
		 * GitHub issues
		 */
		linkGithubIssues: () => LocalizedString
		/**
		 * Documentation
		 */
		documentation: () => LocalizedString
		/**
		 * Snapping grid color
		 */
		SnappingGridColor: () => LocalizedString
		/**
		 * Locale for formatting numbers on the map
		 */
		LocaleNumberFormatting: () => LocalizedString
		/**
		 * Default color for "no data" values
		 */
		DefaultNoDataColor: () => LocalizedString
		/**
		 * Default options for legends
		 */
		DefaultLegendOptions: () => LocalizedString
		/**
		 * These options will be used for new layers / new legends created in the application but will not affect existing ones.
		 */
		DefaultOptionsInformation: () => LocalizedString
		/**
		 * Custom palettes
		 */
		CustomPalettes: () => LocalizedString
	}
	LayerManager: {
		/**
		 * Point layer - {nFt} {{feature|features}} - {nCol} {{column|columns}}
		 */
		point: (arg: { nCol: string | number | boolean, nFt: string | number | boolean }) => LocalizedString
		/**
		 * Line layer - {nFt} {{feature|features}} - {nCol} {{column|columns}}
		 */
		linestring: (arg: { nCol: string | number | boolean, nFt: string | number | boolean }) => LocalizedString
		/**
		 * Polygon layer - {nFt} {{feature|features}} - {nCol} {{column|columns}}
		 */
		polygon: (arg: { nCol: string | number | boolean, nFt: string | number | boolean }) => LocalizedString
		/**
		 * Raster layer
		 */
		raster: () => LocalizedString
		/**
		 * Data table
		 */
		table: () => LocalizedString
		/**
		 * Remove layer
		 */
		Delete: () => LocalizedString
		/**
		 * Join to a geospatial layer
		 */
		Join: () => LocalizedString
		/**
		 * Attribute table
		 */
		AttributeTable: () => LocalizedString
		/**
		 * Zoom on layer
		 */
		FitZoom: () => LocalizedString
		/**
		 * Toggle visibility
		 */
		ToggleVisibility: () => LocalizedString
		/**
		 * Settings
		 */
		Settings: () => LocalizedString
		/**
		 * Fields typing
		 */
		Typing: () => LocalizedString
		/**
		 * Display / hide legend
		 */
		Legend: () => LocalizedString
		/**
		 * The position of the legend has been changed to reposition it in the map display area.
		 */
		LegendDisplacement: () => LocalizedString
	}
	FunctionalitiesSection: {
		FunctionalityTypes: {
			/**
			 * Choropleth
			 */
			Choropleth: () => LocalizedString
			/**
			 * Proportional symbols
			 */
			ProportionalSymbols: () => LocalizedString
			/**
			 * Labels
			 */
			Labels: () => LocalizedString
			/**
			 * Discontinuity
			 */
			Discontinuity: () => LocalizedString
			/**
			 * Categorical choropleth
			 */
			CategoricalChoropleth: () => LocalizedString
			/**
			 * Categorical pictogram map
			 */
			CategoricalPictogram: () => LocalizedString
			/**
			 * Smoothed map
			 */
			Smoothed: () => LocalizedString
			/**
			 * Cartogram
			 */
			Cartogram: () => LocalizedString
			/**
			 * Grid
			 */
			Grid: () => LocalizedString
			/**
			 * Links
			 */
			Links: () => LocalizedString
			/**
			 * Mushrooms
			 */
			Mushrooms: () => LocalizedString
			/**
			 * Point layer aggregation
			 */
			PointAggregation: () => LocalizedString
			/**
			 * Line layer aggregation
			 */
			LineAggregation: () => LocalizedString
			/**
			 * Simple linear regression
			 */
			SimpleLinearRegression: () => LocalizedString
			/**
			 * Aggregation
			 */
			Aggregation: () => LocalizedString
			/**
			 * Selection
			 */
			Selection: () => LocalizedString
			/**
			 * Simplification
			 */
			Simplification: () => LocalizedString
			/**
			 * Geospatial layer creation
			 */
			LayerCreationFromTable: () => LocalizedString
		}
		/**
		 * Target layer
		 */
		TargetLayer: () => LocalizedString
		/**
		 * Create layer
		 */
		CreateLayer: () => LocalizedString
		/**
		 * Result name
		 */
		ResultName: () => LocalizedString
		/**
		 * Type the name of the layer to create
		 */
		ResultNamePlaceholder: () => LocalizedString
		/**
		 * New_layer
		 */
		NewLayer: () => LocalizedString
		CommonOptions: {
			/**
			 * Variable
			 */
			Variable: () => LocalizedString
			/**
			 * Variable to use
			 */
			VariablePlaceholder: () => LocalizedString
			/**
			 * Select a variable
			 */
			SelectVariable: () => LocalizedString
			/**
			 * Color
			 */
			Color: () => LocalizedString
			/**
			 * None
			 */
			NoneLayer: () => LocalizedString
		}
		ChoroplethOptions: {
			/**
			 * Choropleth
			 */
			Choropleth: () => LocalizedString
			/**
			 * Classification
			 */
			Classification: () => LocalizedString
			/**
			 * Color scheme
			 */
			ColorScheme: () => LocalizedString
			/**
			 * Invert color scheme
			 */
			ColorSchemeInvert: () => LocalizedString
			/**
			 * {{One class|?? classes}}
			 */
			CurrentNumberOfClasses: (arg0: number | string | boolean) => LocalizedString
			/**
			 * palette {p}
			 */
			CurrentPalette: (arg: { p: unknown }) => LocalizedString
			/**
			 * Display a class summary histogram on the map
			 */
			DisplayChartOnMap: () => LocalizedString
			/**
			 * Choropleth_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		ProportionalSymbolsOptions: {
			/**
			 * Reference size (px)
			 */
			ReferenceSize: () => LocalizedString
			/**
			 * On value
			 */
			OnValue: () => LocalizedString
			/**
			 * Symbol type
			 */
			SymbolType: () => LocalizedString
			SymbolTypes: {
				/**
				 * Circle
				 */
				circle: () => LocalizedString
				/**
				 * Square
				 */
				square: () => LocalizedString
				/**
				 * Line
				 */
				line: () => LocalizedString
			}
			/**
			 * Color mode
			 */
			ColorMode: () => LocalizedString
			ColorModes: {
				/**
				 * Single color
				 */
				singleColor: () => LocalizedString
				/**
				 * Ratio variable
				 */
				ratioVariable: () => LocalizedString
				/**
				 * Categorical variable
				 */
				categoricalVariable: () => LocalizedString
				/**
				 * Color according to the sign of the value (positive/negative)
				 */
				positiveNegative: () => LocalizedString
			}
			/**
			 * Color for positive values
			 */
			ColorPositiveValues: () => LocalizedString
			/**
			 * Color for negative values
			 */
			ColorNegativeValues: () => LocalizedString
			/**
			 * Avoid overlapping symbols
			 */
			AvoidOverlapping: () => LocalizedString
			/**
			 * Limit value
			 */
			LimitValue: () => LocalizedString
			/**
			 * Proportional_Symbols_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		DiscontinuityOptions: {
			/**
			 * Discontinuity type
			 */
			DiscontinuityType: () => LocalizedString
			/**
			 * Relative
			 */
			Relative: () => LocalizedString
			/**
			 * Absolute
			 */
			Absolute: () => LocalizedString
			/**
			 * Classification type
			 */
			Classification: () => LocalizedString
			/**
			 * Threshold of discontinuity to display
			 */
			DiscontinuityThreshold: () => LocalizedString
			/**
			 * Discontinuity_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		SmoothingOptions: {
			/**
			 * Smoothing type
			 */
			Type: () => LocalizedString
			/**
			 * Grid resolution (km)
			 */
			Resolution: () => LocalizedString
			/**
			 * Stewart's potential
			 */
			Stewart: () => LocalizedString
			/**
			 * Kernel density estimation
			 */
			KDE: () => LocalizedString
			/**
			 * Bandwidth (km)
			 */
			Bandwidth: () => LocalizedString
			/**
			 * Kernel type
			 */
			KernelType: () => LocalizedString
			/**
			 * Pareto
			 */
			Pareto: () => LocalizedString
			/**
			 * Gaussian
			 */
			Gaussian: () => LocalizedString
			/**
			 * Epanechnikov
			 */
			Epanechnikov: () => LocalizedString
			/**
			 * Quartic
			 */
			Quartic: () => LocalizedString
			/**
			 * Triangular
			 */
			Triangular: () => LocalizedString
			/**
			 * Uniform
			 */
			Uniform: () => LocalizedString
			/**
			 * Biweight
			 */
			Biweight: () => LocalizedString
			/**
			 * Span (km)
			 */
			Span: () => LocalizedString
			/**
			 * Alpha
			 */
			Alpha: () => LocalizedString
			/**
			 * Beta
			 */
			Beta: () => LocalizedString
			/**
			 * Count
			 */
			Count: () => LocalizedString
			/**
			 * Threshold for contours
			 */
			ThresholdForContours: () => LocalizedString
			/**
			 * Error while parsing the threshold. Please use values separated by dashes.
			 */
			ErrorParsingThreshold: () => LocalizedString
			/**
			 * Clipping layer
			 */
			ClippingLayer: () => LocalizedString
			/**
			 * Smoothing_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		CartogramOptions: {
			/**
			 * Algorithm to use
			 */
			Algorithm: () => LocalizedString
			/**
			 * Iterations
			 */
			Iterations: () => LocalizedString
			/**
			 * Dougenik et al. (1985)
			 */
			Dougenik: () => LocalizedString
			/**
			 * Olson (2005)
			 */
			Olson: () => LocalizedString
			/**
			 * Gastner, Seguy & More (2018)
			 */
			GastnerSeguyMore: () => LocalizedString
			/**
			 * The current <b>map projection</b> is geographic (or its unit is degrees). The cartogram will be calculated in the current projection. Whenever possible, you should use projected data (with a distance unit in metres, for example) for greater accuracy.
			 */
			WarningGeo: () => LocalizedString
			/**
			 * The <b>variable</b> selected contains missing or zero values. These values will be replaced by a fraction of the smallest positive value in the dataset.
			 */
			WarningMissingOrZeroValues: () => LocalizedString
			/**
			 * Cartogram_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		GridOptions: {
			/**
			 * Grid resolution (km)
			 */
			Resolution: () => LocalizedString
			/**
			 * Grid resolution ({unit})
			 */
			ResolutionWithUnit: (arg: { unit: unknown }) => LocalizedString
			/**
			 * Cell shape
			 */
			CellShape: () => LocalizedString
			/**
			 * Square
			 */
			CellSquare: () => LocalizedString
			/**
			 * Hexagon
			 */
			CellHexagon: () => LocalizedString
			/**
			 * Triangle
			 */
			CellTriangle: () => LocalizedString
			/**
			 * Diamond
			 */
			CellDiamond: () => LocalizedString
			/**
			 * The current map projection is geographic (or its unit is degrees). The grid resolution is therefore expressed in degrees. Whenever possible, you should use projected data (with a distance unit in metres, for example) for greater accuracy.
			 */
			WarningGeo: () => LocalizedString
			/**
			 * Grid_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		CategoricalChoroplethOptions: {
			/**
			 * Display the frequency bar chart by category on the map
			 */
			DisplayChartOnMap: () => LocalizedString
			/**
			 * {{One category|?? categories}}
			 */
			Categories: (arg0: number | string | boolean) => LocalizedString
			/**
			 * Contains null or empty values
			 */
			HasNull: () => LocalizedString
			/**
			 * No null or empty values
			 */
			NoNull: () => LocalizedString
			/**
			 * Show chart
			 */
			ShowChart: () => LocalizedString
			/**
			 * Categories
			 */
			XAxisCategories: () => LocalizedString
			/**
			 * Count
			 */
			YAxisCount: () => LocalizedString
			/**
			 * Customize category names and colors
			 */
			Customize: () => LocalizedString
			/**
			 * Value:
			 */
			Value: () => LocalizedString
			/**
			 * Count:
			 */
			Count: () => LocalizedString
			/**
			 * Please note that the variable selected does not appear to be categorical. Please check that the variable selected is actually categorical or choose another variable.
			 */
			WarningNotCategoricalMessage: () => LocalizedString
			/**
			 * Categorical_Choropleth_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		CategoricalPictogramOptions: {
			/**
			 * Pictogram_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
			/**
			 * Choose pictograms and category names
			 */
			Customize: () => LocalizedString
		}
		LabelsOptions: {
			/**
			 * Proportional size
			 */
			ProportionalSize: () => LocalizedString
			/**
			 * Filter the labels to create
			 */
			Filter: () => LocalizedString
			/**
			 * Labels_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		LinksOptions: {
			/**
			 * Identifier field
			 */
			IdentifierField: () => LocalizedString
			/**
			 * Select a dataset
			 */
			SelectDataset: () => LocalizedString
			/**
			 * Dataset containing links information
			 */
			Dataset: () => LocalizedString
			/**
			 * Origin identifiers
			 */
			OriginId: () => LocalizedString
			/**
			 * Destination identifiers
			 */
			DestinationId: () => LocalizedString
			/**
			 * Intensity
			 */
			Intensity: () => LocalizedString
			/**
			 * Link type
			 */
			LinkType: () => LocalizedString
			/**
			 * Exchange
			 */
			LinkTypeExchange: () => LocalizedString
			/**
			 * Link
			 */
			LinkTypeLink: () => LocalizedString
			/**
			 * Bilateral volume
			 */
			LinkTypeBilateralVolume: () => LocalizedString
			/**
			 * Head type
			 */
			LinkHeadType: () => LocalizedString
			/**
			 * Arrow
			 */
			LinkHeadTypeArrow: () => LocalizedString
			/**
			 * None
			 */
			LinkHeadTypeNone: () => LocalizedString
			/**
			 * Arrow (positioned on symbol border)
			 */
			LinkHeadTypeArrowOnSymbol: () => LocalizedString
			/**
			 * None (positioned on symbol border)
			 */
			LinkHeadTypeNoneOnSymbol: () => LocalizedString
			/**
			 * Curvature
			 */
			LinkCurvature: () => LocalizedString
			/**
			 * Straight (on the map)
			 */
			LinkCurvatureStraightOnPlane: () => LocalizedString
			/**
			 * Straight (along great circle)
			 */
			LinkCurvatureStraightOnSphere: () => LocalizedString
			/**
			 * Curved
			 */
			LinkCurvatureCurved: () => LocalizedString
			/**
			 * Link position
			 */
			LinkPosition: () => LocalizedString
			/**
			 * Initial
			 */
			LinkPositionInitial: () => LocalizedString
			/**
			 * Shifted
			 */
			LinkPositionShifted: () => LocalizedString
			/**
			 * Shared
			 */
			LinkPositionShared: () => LocalizedString
			/**
			 * Link size type
			 */
			LinkSizeType: () => LocalizedString
			/**
			 * Link size classification
			 */
			LinkSizeClassification: () => LocalizedString
			/**
			 * Proportional
			 */
			LinkSizeProportional: () => LocalizedString
			/**
			 * Fixed
			 */
			LinkSizeFixed: () => LocalizedString
			/**
			 * Maximal Size
			 */
			LinkSizeProportionalReferenceSize: () => LocalizedString
			/**
			 * On value
			 */
			LinkSizeProportionalReferenceValue: () => LocalizedString
			/**
			 * No intensity variable
			 */
			NoIntensity: () => LocalizedString
			/**
			 * All origins and destinations match IDs of features in the geographic layer
			 */
			AllMatch: () => LocalizedString
			/**
			 * Some origins and destinations (but not all) match IDs of features in the geographic layer
			 */
			SomeMatch: () => LocalizedString
			/**
			 * No origins and destinations match IDs of features in the geographic layer
			 */
			NoMatch: () => LocalizedString
			/**
			 * Select links to display
			 */
			Selection: () => LocalizedString
			/**
			 * Links_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		MushroomsOptions: {
			/**
			 * Properties of the upper part:
			 */
			TopProperties: () => LocalizedString
			/**
			 * Properties of the lower part:
			 */
			BottomProperties: () => LocalizedString
			/**
			 * Mushrooms_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		AggregationOptions: {
			/**
			 * Aggregation method
			 */
			Method: () => LocalizedString
			/**
			 * None
			 */
			None: () => LocalizedString
			/**
			 * If no field is selected, the aggregation will be done on the whole layer.
			 */
			Information: () => LocalizedString
			/**
			 * Aggregated_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		SimplificationOptions: {
			/**
			 * Simplified_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		SelectionOptions: {
			/**
			 * Formula
			 */
			Formula: () => LocalizedString
			/**
			 * Selection by expression is used to create a subset of data from a geographic layer. The features in the layer that satisfy the expression are selected.
			 */
			Information: () => LocalizedString
			/**
			 * The syntax to be used for expressions is that of the SQL language. The usual logical and arithmetic operators are available.
			 */
			InformationSyntax: () => LocalizedString
			/**
			 * Invalid formula - the expression must return true or false for each feature
			 */
			InvalidFormula: () => LocalizedString
			/**
			 * Selection_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
			/**
			 * No data selected by the given expression.
			 */
			NoSelectedData: () => LocalizedString
			/**
			 * {{One feature|?? features}} selected by the given expression.
			 */
			NFeaturesSelected: (arg0: number | string | boolean) => LocalizedString
			/**
			 * All features of the layer are selected by the given expression.
			 */
			AllDataSelected: () => LocalizedString
		}
		PointAggregationOptions: {
			/**
			 * Map type
			 */
			MapType: () => LocalizedString
			/**
			 * Choropleth map (ratio values)
			 */
			MapTypeRatio: () => LocalizedString
			/**
			 * Proportional symbols map (stock values)
			 */
			MapTypeStock: () => LocalizedString
			/**
			 * Mesh type
			 */
			MeshType: () => LocalizedString
			/**
			 * Regular grid
			 */
			MeshTypeGrid: () => LocalizedString
			/**
			 * Existing polygon layer
			 */
			MeshTypePolygonLayer: () => LocalizedString
			/**
			 * Computation type
			 */
			ComputationType: () => LocalizedString
			/**
			 * Simple count
			 */
			ComputationTypeCount: () => LocalizedString
			/**
			 * Weighted count
			 */
			ComputationTypeWeightedCount: () => LocalizedString
			/**
			 * Density (simple count)
			 */
			ComputationTypeDensity: () => LocalizedString
			/**
			 * Density (weighted count)
			 */
			ComputationTypeWeightedDensity: () => LocalizedString
			/**
			 * Mean
			 */
			ComputationTypeMean: () => LocalizedString
			/**
			 * Standard deviation
			 */
			ComputationTypeStandardDeviation: () => LocalizedString
			/**
			 * Layer to use
			 */
			LayerToUse: () => LocalizedString
			/**
			 * Numerical variable to use
			 */
			VariableToUse: () => LocalizedString
			/**
			 * Filter empty cells
			 */
			FilterEmptyCells: () => LocalizedString
			/**
			 * Aggregated_points_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		LineAggregationOptions: {
			/**
			 * Computation type
			 */
			ComputationType: () => LocalizedString
			/**
			 * Total distance
			 */
			ComputationTypeTotalDistance: () => LocalizedString
			/**
			 * Total distance, weighted by a variable
			 */
			ComputationTypeWeightedDistance: () => LocalizedString
			/**
			 * Mean distance
			 */
			ComputationTypeMeanDistance: () => LocalizedString
			/**
			 * Aggregated_lines_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
		}
		LayerFromTableOptions: {
			/**
			 * Mode
			 */
			Mode: () => LocalizedString
			/**
			 * Fields for X and Y coordinates
			 */
			ModeXY: () => LocalizedString
			/**
			 * Field for WKT geometry
			 */
			ModeWKT: () => LocalizedString
			/**
			 * Field containing the X coordinate
			 */
			FieldX: () => LocalizedString
			/**
			 * Field containing the Y coordinate
			 */
			FieldY: () => LocalizedString
			/**
			 * Field containing the WKT geometry
			 */
			FieldWkt: () => LocalizedString
			/**
			 * No feature to create - Please check the field(s) selected.
			 */
			NoFeatureToCreate: () => LocalizedString
			/**
			 * {{One feature|?? features}} to create.
			 */
			NFeaturesToCreate: (arg0: number | string | boolean) => LocalizedString
			/**
			 * Coordinate reference system
			 */
			Crs: () => LocalizedString
			/**
			 * More CRS...
			 */
			MoreCrs: () => LocalizedString
			/**
			 * The values in the selected fields do not appear to be valid geographic coordinates. Please check your selection.
			 */
			CoordsNotInCRS: () => LocalizedString
		}
		LinearRegressionOptions: {
			/**
			 * Linear_Regression_{layerName}
			 */
			NewLayerName: (arg: { layerName: unknown }) => LocalizedString
			/**
			 * Display the correlation matrix between all the variables
			 */
			DisplayCorrelationMatrix: () => LocalizedString
			/**
			 * Pearson product-moment correlation
			 */
			PearsonCorrelation: () => LocalizedString
			/**
			 * Spearman's rank correlation
			 */
			SpearmanCorrelation: () => LocalizedString
			/**
			 * Response variable
			 */
			ExplainedVariable: () => LocalizedString
			/**
			 * Explanatory variable
			 */
			ExplanatoryVariable: () => LocalizedString
			/**
			 * Logarithmic transformation
			 */
			LogTransform: () => LocalizedString
			/**
			 * The two variables must be different.
			 */
			MessageSameVariable: () => LocalizedString
			/**
			 * Compute
			 */
			Compute: () => LocalizedString
			/**
			 * Pearson product-moment correlation coefficient:
			 */
			PearsonCorrelationValue: () => LocalizedString
			/**
			 * Spearman's rank correlation coefficient:
			 */
			SpearmanCorrelationValue: () => LocalizedString
			/**
			 * Model summary
			 */
			ModelSummary: () => LocalizedString
			/**
			 * Coefficients
			 */
			Coefficients: () => LocalizedString
			/**
			 * Coefficients (details)
			 */
			CoefficientsDetails: () => LocalizedString
			/**
			 * Multiple R-squared: {value}
			 */
			MultipleR2: (arg: { value: unknown }) => LocalizedString
			/**
			 * Adjusted R-squared: {value}
			 */
			AdjustedR2: (arg: { value: unknown }) => LocalizedString
			/**
			 * Residual standard error: {value} on {dof} degrees of freedom
			 */
			RSE: (arg: { dof: unknown, value: unknown }) => LocalizedString
			/**
			 * ({value} observation{{s}} deleted as missing)
			 */
			DeletedAsMissing: (arg: { value: string | number | boolean }) => LocalizedString
			/**
			 * Diagnostic plots
			 */
			DiagnosticPlots: () => LocalizedString
			/**
			 * Residuals vs. fitted values
			 */
			ResidualVsFittedValues: () => LocalizedString
			/**
			 * The residuals vs fitted plot shows if residuals have non-linear patterns. It is useful for investigating:
			 */
			ResidualVsFittedInfo1: () => LocalizedString
			/**
			 * Whether linearity holds: this is indicated by the mean residual value for every fitted value region being close to 0 (here this is indicated by the red line being close to the dashed line).
			 */
			ResidualVsFittedInfo2: () => LocalizedString
			/**
			 * Whether there are outliers: this is indicated by some ‘extreme’ residuals that are far from the rest.
			 */
			ResidualVsFittedInfo3: () => LocalizedString
			/**
			 * It is good if you find equally spread residuals around a horizontal line without distinct patterns.
			 */
			ResidualVsFittedCheck: () => LocalizedString
			/**
			 * Scale-location
			 */
			ScaleLocation: () => LocalizedString
			/**
			 * This plot shows if residuals are spread equally along the ranges of predictors. It is mainly useful for investigating whether homoskedasticity (the assumption of equal variance) holds.
			 */
			ScaleLocationInfo1: () => LocalizedString
			/**
			 * It’s good if you see a horizontal line with equally (randomly) spread points (i.e the spread of residuals should be approximately the same across the x-axis).
			 */
			ScaleLocationCheck: () => LocalizedString
			/**
			 * Quantiles-quantiles residuals
			 */
			QQ: () => LocalizedString
			/**
			 * Quantile-Quantile plot (also called QQ plot) is useful for investigation whether the assumption of normality holds (the residuals of the regression should follow a normal distribution).
			 */
			QQInfo1: () => LocalizedString
			/**
			 * It’s good if residuals are lined well on the straight dashed line.
			 */
			QQCheck: () => LocalizedString
			/**
			 * Options for displaying results
			 */
			RepresentationOptions: () => LocalizedString
			/**
			 * In theory, several assumptions must not be violated when performing a simple linear regression:
			 */
			SummaryInfo1: () => LocalizedString
			/**
			 * Linearity: the relationship between the response and explanatory variables is linear.
			 */
			SummaryInfo2: () => LocalizedString
			/**
			 * Independence: the residuals are independent.
			 */
			SummaryInfo3: () => LocalizedString
			/**
			 * Homoskedasticity: the variance of the residuals is constant across all fitted values.
			 */
			SummaryInfo4: () => LocalizedString
			/**
			 * Normality: the residuals follow a normal distribution.
			 */
			SummaryInfo5: () => LocalizedString
			/**
			 * If the graphs shown above have convinced you that these hypotheses have been validated, it's now time to move on to representing the results.
			 */
			SummaryInfo6: () => LocalizedString
			/**
			 * Classification and selection of colors
			 */
			ClassificationColorSelection: () => LocalizedString
			/**
			 * Standardized residuals
			 */
			StandardizedResiduals: () => LocalizedString
			/**
			 * Cartographic portrayal type
			 */
			PortrayalType: () => LocalizedString
			/**
			 * Choropleth representation of standardised residuals
			 */
			PortrayalTypeChoropleth: () => LocalizedString
			/**
			 * Proportional symbols representation of residuals
			 */
			PortrayalTypePropSymbol: () => LocalizedString
			/**
			 * Add the scatter plot on the map
			 */
			AddScatterPlot: () => LocalizedString
		}
	}
	FormulaInput: {
		/**
		 * Formula
		 */
		formula: () => LocalizedString
		/**
		 * Sample output
		 */
		sampleOutput: () => LocalizedString
		/**
		 * Error while parsing the formula
		 */
		ErrorParsingFormula: () => LocalizedString
		/**
		 * Error - empty result
		 */
		ErrorEmptyResult: () => LocalizedString
		/**
		 * Note that column names containing special characters or spaces must be enclosed in backticks or in brackets.
		 */
		noteSpecialCharacters: () => LocalizedString
		/**
		 * Division
		 */
		'/': () => LocalizedString
		/**
		 * Addition
		 */
		'+': () => LocalizedString
		/**
		 * Subtraction
		 */
		'-': () => LocalizedString
		/**
		 * Multiplication
		 */
		'*': () => LocalizedString
		/**
		 * Power operator
		 */
		'POWER()': () => LocalizedString
		/**
		 * Concatenate 2 or more strings
		 */
		'CONCAT()': () => LocalizedString
		/**
		 * Extract a substring
		 */
		'SUBSTRING()': () => LocalizedString
		/**
		 * Special field - The count of the dataset (number of features)
		 */
		specialFieldCount: () => LocalizedString
		/**
		 * Special field - The area of the feature, in square meters (only for polygon layers). Note that this calculation is based on the geographical coordinates and is made on the spheroid. This result may be less accurate than if the calculation had been carried out in a local projection based on an adapted ellipsoid.
		 */
		specialFieldArea: () => LocalizedString
		/**
		 * Special field - The (internal) row id of the feature
		 */
		specialFieldId: () => LocalizedString
	}
	ExportSection: {
		/**
		 * Selection of the type of export and the format of the file to be generated.
		 */
		Description: () => LocalizedString
		/**
		 * Select a layer
		 */
		SelectLayers: () => LocalizedString
		/**
		 * Select a format
		 */
		SelectFormat: () => LocalizedString
		/**
		 * Select a CRS
		 */
		SelectCRS: () => LocalizedString
		/**
		 * Layers
		 */
		Layers: () => LocalizedString
		/**
		 * Export
		 */
		Export: () => LocalizedString
		/**
		 * Export as PNG
		 */
		ExportPng: () => LocalizedString
		/**
		 * Export as SVG
		 */
		ExportSvg: () => LocalizedString
		/**
		 * Custom CRS
		 */
		CustomCRS: () => LocalizedString
		/**
		 * Clip SVG to current extent
		 */
		ClipSvgCurrentExtent: () => LocalizedString
		/**
		 * Width (px)
		 */
		Width: () => LocalizedString
		/**
		 * Height (px)
		 */
		Height: () => LocalizedString
	}
	LayerSettings: {
		/**
		 * Layer settings
		 */
		LayerSettings: () => LocalizedString
		/**
		 * Name
		 */
		Name: () => LocalizedString
		/**
		 * Value
		 */
		Value: () => LocalizedString
		/**
		 * Fill
		 */
		Fill: () => LocalizedString
		/**
		 * Stroke
		 */
		Stroke: () => LocalizedString
		/**
		 * Line
		 */
		Line: () => LocalizedString
		/**
		 * Width (px)
		 */
		Width: () => LocalizedString
		/**
		 * Opacity
		 */
		Opacity: () => LocalizedString
		/**
		 * Color
		 */
		Color: () => LocalizedString
		/**
		 * Palette
		 */
		Palette: () => LocalizedString
		/**
		 * Click to change the color palette or change the classification
		 */
		InformationPalette: () => LocalizedString
		/**
		 * Fill color
		 */
		FillColor: () => LocalizedString
		/**
		 * Stroke color
		 */
		StrokeColor: () => LocalizedString
		/**
		 * Fill opacity
		 */
		FillOpacity: () => LocalizedString
		/**
		 * Stroke opacity
		 */
		StrokeOpacity: () => LocalizedString
		/**
		 * Stroke width
		 */
		StrokeWidth: () => LocalizedString
		/**
		 * Dashed stroke
		 */
		StrokeDashed: () => LocalizedString
		/**
		 * Symbol size
		 */
		SymbolSize: () => LocalizedString
		/**
		 * Symbol type
		 */
		SymbolType: () => LocalizedString
		SymbolTypes: {
			/**
			 * Circle
			 */
			circle: () => LocalizedString
			/**
			 * Square
			 */
			square: () => LocalizedString
			/**
			 * Diamond
			 */
			diamond: () => LocalizedString
			/**
			 * Diamond (stretched)
			 */
			diamond2: () => LocalizedString
			/**
			 * Cross
			 */
			cross: () => LocalizedString
			/**
			 * Triangle
			 */
			triangle: () => LocalizedString
			/**
			 * Star
			 */
			star: () => LocalizedString
		}
		/**
		 * Variable used for the portrayal
		 */
		PortrayedVariable: () => LocalizedString
		/**
		 * Variable used for proportionality
		 */
		VariableForProportionality: () => LocalizedString
		/**
		 * Aesthetic filter
		 */
		AestheticFilter: () => LocalizedString
		/**
		 * Add a shadow
		 */
		DropShadow: () => LocalizedString
		/**
		 * Shadow offset on the x-axis
		 */
		DropShadowDx: () => LocalizedString
		/**
		 * Shadow offset on the y-axis
		 */
		DropShadowDy: () => LocalizedString
		/**
		 * Shadow color
		 */
		DropShadowColor: () => LocalizedString
		/**
		 * Shadow blur
		 */
		DropShadowBlur: () => LocalizedString
		/**
		 * Allow moving symbols
		 */
		AllowMovingSymbols: () => LocalizedString
		/**
		 * Iterations
		 */
		Iterations: () => LocalizedString
		/**
		 * Reset label locations
		 */
		ResetLabelLocations: () => LocalizedString
		/**
		 * Reset label contents
		 */
		ResetLabelContents: () => LocalizedString
		/**
		 * Change classification options
		 */
		ChangeClassification: () => LocalizedString
		/**
		 * Font family
		 */
		FontFamily: () => LocalizedString
		/**
		 * Font size
		 */
		FontSize: () => LocalizedString
		/**
		 * Text color
		 */
		TextColor: () => LocalizedString
		/**
		 * X offset
		 */
		XOffset: () => LocalizedString
		/**
		 * Y offset
		 */
		YOffset: () => LocalizedString
		/**
		 * Font style
		 */
		FontStyle: () => LocalizedString
		/**
		 * Font weight
		 */
		FontWeight: () => LocalizedString
		/**
		 * Buffer around text
		 */
		BufferAroundText: () => LocalizedString
		/**
		 * Buffer color
		 */
		BufferColor: () => LocalizedString
		/**
		 * Buffer width
		 */
		BufferWidth: () => LocalizedString
		/**
		 * Allow moving labels
		 */
		AllowMovingLabels: () => LocalizedString
		/**
		 * Graticule step (X)
		 */
		GraticuleStepX: () => LocalizedString
		/**
		 * Graticule step (Y)
		 */
		GraticuleStepY: () => LocalizedString
		/**
		 * Add a bar chart by category...
		 */
		AddBarChartCategoricalChoropleth: () => LocalizedString
		/**
		 * Add a class summary histogram...
		 */
		AddHistogramChoropleth: () => LocalizedString
		/**
		 * Please note that modifying the label settings will only affect all the labels of the layer (possibly overwriting the settings defined manually for some labels). If you want to modify the settings of a specific label, you can do so by clicking on the label and then on the "Edit" button in the context menu.
		 */
		InformationLabelSettings: () => LocalizedString
		/**
		 * Edit label
		 */
		EditLabel: () => LocalizedString
		/**
		 * Delete label
		 */
		DeleteLabel: () => LocalizedString
	}
	JoinPanel: {
		/**
		 * Join to a geospatial layer
		 */
		Title: () => LocalizedString
		/**
		 * This feature allows you to join data from a table to a geospatial layer. Data from the table is added to the geospatial layer based on a field common to both datasets.
		 */
		Information: () => LocalizedString
		/**
		 * Only fields with unique values are available for the join.
		 */
		Information2: () => LocalizedString
		/**
		 * Select the layer to join to
		 */
		TargetLayer: () => LocalizedString
		/**
		 * Select a layer
		 */
		TargetLayerPlaceholder: () => LocalizedString
		/**
		 * Select the field to join on (table)
		 */
		JoinFieldTable: () => LocalizedString
		/**
		 * Select the field to join on (layer)
		 */
		JoinFieldLayer: () => LocalizedString
		/**
		 * Select a field
		 */
		JoinFieldPlaceholder: () => LocalizedString
		/**
		 * Computing join...
		 */
		Loading: () => LocalizedString
		/**
		 * Result information:
		 */
		ResultInformation: () => LocalizedString
		/**
		 * Geometries having a match:
		 */
		MatchedGeometry: () => LocalizedString
		/**
		 * Table rows having a match:
		 */
		MatchedData: () => LocalizedString
		/**
		 * The choices made do not allow a join to be made.
		 */
		ImpossibleJoin: () => LocalizedString
		/**
		 * no data
		 */
		NoData: () => LocalizedString
		/**
		 * Use a prefix for the joined fields?
		 */
		Prefix: () => LocalizedString
		/**
		 * Prefix
		 */
		PrefixValue: () => LocalizedString
		/**
		 * Select the fields to join?
		 */
		SelectFields: () => LocalizedString
		/**
		 * Add fields to the selected layer
		 */
		Confirm: () => LocalizedString
		/**
		 * Remove features of the layer that do not match?
		 */
		RemoveNotMatching: () => LocalizedString
	}
	PortrayalSelection: {
		/**
		 * Functionality selection
		 */
		Title: () => LocalizedString
		/**
		 * Options
		 */
		Title2: () => LocalizedString
		/**
		 * Layer:
		 */
		Layer: () => LocalizedString
		/**
		 * Table:
		 */
		Table: () => LocalizedString
		/**
		 * Back to functionality selection
		 */
		Back: () => LocalizedString
		/**
		 * Select the functionality you wish to apply to your data layer. Greyed-out functionalities indicate that your dataset does not contain any data allowing you to use it. If you suspect this is an error, you can change the field type in the Layer Manager.
		 */
		Information: () => LocalizedString
		/**
		 * Verify or change field types
		 */
		OpenTypingModal: () => LocalizedString
		ShortDescriptions: {
			/**
			 * A choropleth map lets you assign a color to geographic objects according to the values of a relative quantitative variable (rates, indices).
			 */
			Choropleth: () => LocalizedString
			/**
			 * A proportional symbol map lets you vary the area of a symbol in proportion to the value of an absolute quantitative variable.
			 */
			ProportionalSymbols: () => LocalizedString
			/**
			 * Adds labels ( which may be proportional to a value) to a background map according to the values of a variable.
			 */
			Labels: () => LocalizedString
			/**
			 * A discontinuity map is a thematic map in which areas are shaded or patterned in proportion to the value of a variable, but with a discontinuity at a given threshold.
			 */
			Discontinuity: () => LocalizedString
			/**
			 * A categorical choropleth map is a thematic map in which areas are shaded or patterned in proportion to the value of a categorical variable.
			 */
			CategoricalChoropleth: () => LocalizedString
			/**
			 * A categorical pictogram map is a thematic map in which pictograms are used to represent different values.
			 */
			CategoricalPictogram: () => LocalizedString
			/**
			 * A smoothed map makes it possible to shift from a discrete to a continuous representation by taking into account the neighborhood values of each geographic object.
			 */
			Smoothed: () => LocalizedString
			/**
			 * A cartogram reshapes polygonal geographic objects according to the value of a quantitative variable.
			 */
			Cartogram: () => LocalizedString
			/**
			 * Gridding is the process of reorganizing geographic data into a regular geographic grid.
			 */
			Grid: () => LocalizedString
			/**
			 * A links map is a thematic map in which links are drawn between points or areas, optionally with a width in proportion to the value of a variable.
			 */
			Links: () => LocalizedString
			/**
			 * Point aggregation is a functionality that allows you to aggregate point data into a grid or a polygonal layer.
			 */
			PointAggregation: () => LocalizedString
			/**
			 * Line aggregation is a functionality that allows you to aggregate line data into a grid or a polygonal layer.
			 */
			LineAggregation: () => LocalizedString
			/**
			 * Simple linear regression is a functionality that allows you to display the result of a simple linear regression on a layer.
			 */
			SimpleLinearRegression: () => LocalizedString
			/**
			 * A mushroom map involves varying the area of two semicircles or squares in proportion to the values of two absolute quantitative variables.
			 */
			Mushrooms: () => LocalizedString
			/**
			 * This functionality enables polygonal entities to be aggregated according to the value of a field (or all entities if no field is selected).
			 */
			Aggregation: () => LocalizedString
			/**
			 * This functionality can be used to create a new layer based on the selection of initial geographical features according to an expression
			 */
			Selection: () => LocalizedString
			/**
			 * This functionality simplifies the drawing of linear or polygonal entities. This operation, also known as 'generalisation' in cartography, results in a less detailed and lighter dataset.
			 */
			Simplification: () => LocalizedString
			/**
			 * This function creates a geospatial layer from a data table containing coordinates.
			 */
			LayerCreationFromTable: () => LocalizedString
		}
		/**
		 * An error occurred while creating the layer. Please check your data and the parameters of the selected feature. If you suspect a bug, please report it on the application's GitHub repository. Error message: {0}
		 */
		Error: (arg0: unknown) => LocalizedString
	}
	ProjectionSelection: {
		/**
		 * Projection selection
		 */
		title: () => LocalizedString
		/**
		 * Global projection
		 */
		GlobalProjection: () => LocalizedString
		/**
		 * Select a global projection for your map. Global projections are map projections that distort the shape of continents and oceans. They are often used for maps of the whole world.
		 */
		InformationGlobalProjection: () => LocalizedString
		/**
		 * Local projection
		 */
		LocalProjection: () => LocalizedString
		/**
		 * Select a local projection for your map. Local projections are often used for large-scale maps of specific regions (i.e. covering a small part of the territory).
		 */
		InformationLocalProjection: () => LocalizedString
		/**
		 * Enter an EPSG code or a projection name
		 */
		SearchProjection: () => LocalizedString
		/**
		 * {{No matching projection|One projection found|?? projections found}}
		 */
		NMatchingProjections: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Too many results, please refine your search.
		 */
		TooManyResults: () => LocalizedString
		/**
		 * Kind:
		 */
		Kind: () => LocalizedString
		/**
		 * Projected coordinate reference system
		 */
		ProjCRS: () => LocalizedString
		/**
		 * Geographic coordinate reference system
		 */
		GeogCRS: () => LocalizedString
		/**
		 * Bounding box (geographic coordinates):
		 */
		BboxGeo: () => LocalizedString
		/**
		 * Bounding box (projected coordinates):
		 */
		BboxProjected: () => LocalizedString
		/**
		 * Area:
		 */
		Area: () => LocalizedString
		/**
		 * Unit:
		 */
		Unit: () => LocalizedString
		/**
		 * More information
		 */
		MoreInformation: () => LocalizedString
	}
	ImageSymbolSelection: {
		/**
		 * Image import and selection
		 */
		Title: () => LocalizedString
		/**
		 * Select a symbol among the available ones...
		 */
		SelectImage: () => LocalizedString
		/**
		 * Or upload an image (PNG or SVG)...
		 */
		UploadImage: () => LocalizedString
		/**
		 * Browse...
		 */
		Browse: () => LocalizedString
		/**
		 * Selected image:
		 */
		SelectedImage: () => LocalizedString
	}
	SimplificationModal: {
		/**
		 * Simplification of geometries
		 */
		Title: () => LocalizedString
		/**
		 * Coordinates precision
		 */
		QuantizationFactor: () => LocalizedString
		/**
		 * Simplification factor
		 */
		SimplificationFactor: () => LocalizedString
		/**
		 * {geom} geometries, {pts} points
		 */
		CountGeometries: (arg: { geom: unknown, pts: unknown }) => LocalizedString
		/**
		 * {{0 geometry|1 geometry|?? geometries}} deleted by simplification
		 */
		NullGeometries: (arg: { null: number | string | boolean }) => LocalizedString
		/**
		 * Check self-intersection
		 */
		CheckSelfIntersection: () => LocalizedString
		/**
		 * {{0 self-intersection|1 self-intersection|?? self-intersections}} detected
		 */
		CountSelfIntersections: (arg: { count: number | string | boolean }) => LocalizedString
		/**
		 * Prevent feature removal
		 */
		PreventShapeRemoval: () => LocalizedString
	}
	Fonts: {
		/**
		 * Font families
		 */
		FontFamilyTypes: () => LocalizedString
		/**
		 * Fonts
		 */
		Fonts: () => LocalizedString
	}
	DataTable: {
		/**
		 * Attribute table
		 */
		titleGeo: () => LocalizedString
		/**
		 * Data table
		 */
		titleTabular: () => LocalizedString
		/**
		 * {{One feature|?? features}}
		 */
		Features: (arg0: number | string | boolean) => LocalizedString
		/**
		 * {{Non column|One column|?? columns}}
		 */
		Columns: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Export as CSV...
		 */
		ExportCsv: () => LocalizedString
		/**
		 * New column...
		 */
		NewColumn: () => LocalizedString
		/**
		 * Delete column
		 */
		DeleteColumn: () => LocalizedString
		NewColumnModal: {
			/**
			 * Back to data table
			 */
			BackToDatatable: () => LocalizedString
			/**
			 * New column
			 */
			title: () => LocalizedString
			/**
			 * The following special characters are not accepted: .,/#!$%^&*;:{0}=`~()'
			 */
			notAcceptedChars: (arg0: unknown) => LocalizedString
			/**
			 * Name
			 */
			name: () => LocalizedString
			/**
			 * Type the name of the column
			 */
			namePlaceholder: () => LocalizedString
			/**
			 * New column type
			 */
			newColumnType: () => LocalizedString
			/**
			 * Compute
			 */
			compute: () => LocalizedString
			/**
			 * Formula
			 */
			formula: () => LocalizedString
		}
	}
	FieldsTyping: {
		/**
		 * Fields typing
		 */
		ModalTitle: () => LocalizedString
		/**
		 * Field name
		 */
		FieldName: () => LocalizedString
		/**
		 * Field type
		 */
		FieldType: () => LocalizedString
		/**
		 * Variable type defines the analysis and representation functionalities offered by the application.
		 */
		Information1: () => LocalizedString
		/**
		 * Five types of variable are available:<br>- <b>identifier</b> (a unique value used to identify an entity, such as a code, or its name),<br>- <b>categorical</b> (a nominal or ordinal qualitative value),<br>- <b>ratio</b> (a relative quantitative value, such as an unemployment rate or population density),<br>- <b>stock</b> (an absolute quantitative value, such as a population stock or total wheat production),<br>- <b>unknown</b> (for variables you don't wish to use).
		 */
		Information2: () => LocalizedString
		VariableTypes: {
			/**
			 * Identifier
			 */
			identifier: () => LocalizedString
			/**
			 * Ratio
			 */
			ratio: () => LocalizedString
			/**
			 * Stock
			 */
			stock: () => LocalizedString
			/**
			 * Categorical
			 */
			categorical: () => LocalizedString
			/**
			 * Unknown
			 */
			unknown: () => LocalizedString
		}
	}
	ClassificationPanel: {
		/**
		 * Classification
		 */
		title: () => LocalizedString
		/**
		 * Box
		 */
		box: () => LocalizedString
		/**
		 * Histogram
		 */
		histogram: () => LocalizedString
		/**
		 * Beeswarm
		 */
		beeswarm: () => LocalizedString
		/**
		 * Dot histogram
		 */
		dotHistogram: () => LocalizedString
		/**
		 * Histogram and density
		 */
		histogramAndDensity: () => LocalizedString
		/**
		 * Values distribution
		 */
		distribution: () => LocalizedString
		/**
		 * Summary
		 */
		summary: () => LocalizedString
		/**
		 * Population (non-null values)
		 */
		population: () => LocalizedString
		/**
		 * Minimum
		 */
		minimum: () => LocalizedString
		/**
		 * Maximum
		 */
		maximum: () => LocalizedString
		/**
		 * Mean
		 */
		mean: () => LocalizedString
		/**
		 * Median
		 */
		median: () => LocalizedString
		/**
		 * Standard deviation
		 */
		standardDeviation: () => LocalizedString
		/**
		 * Variance
		 */
		variance: () => LocalizedString
		/**
		 * Variance coefficient
		 */
		varianceCoefficient: () => LocalizedString
		/**
		 * Skewness
		 */
		skewness: () => LocalizedString
		/**
		 * Classification
		 */
		classification: () => LocalizedString
		/**
		 * Classification method
		 */
		classificationMethod: () => LocalizedString
		classificationMethods: {
			/**
			 * Equal intervals
			 */
			equalIntervals: () => LocalizedString
			/**
			 * Quantiles
			 */
			quantiles: () => LocalizedString
			/**
			 * Natural breaks (CKMeans)
			 */
			ckmeans: () => LocalizedString
			/**
			 * Natural breaks (Jenks)
			 */
			jenks: () => LocalizedString
			/**
			 * Standard deviation
			 */
			standardDeviation: () => LocalizedString
			/**
			 * Q6
			 */
			q6: () => LocalizedString
			/**
			 * Pretty
			 */
			pretty: () => LocalizedString
			/**
			 * Geometric progression
			 */
			geometricProgression: () => LocalizedString
			/**
			 * Arithmetic progression
			 */
			arithmeticProgression: () => LocalizedString
			/**
			 * Nested means
			 */
			nestedMeans: () => LocalizedString
			/**
			 * Head/tail
			 */
			headTail: () => LocalizedString
			/**
			 * Manual
			 */
			manual: () => LocalizedString
		}
		classificationMethodLegendDescriptions: {
			/**
			 * Classified using equal intervals
			 */
			equalIntervals: () => LocalizedString
			/**
			 * Classified using quantiles
			 */
			quantiles: () => LocalizedString
			/**
			 * Classified using natural breaks (CKMeans)
			 */
			ckmeans: () => LocalizedString
			/**
			 * Classified using natural breaks (Jenks)
			 */
			jenks: () => LocalizedString
			/**
			 * Classified using mean and standard deviation
			 */
			standardDeviation: () => LocalizedString
			/**
			 * Classified using the Q6 method
			 */
			q6: () => LocalizedString
			/**
			 * Classified using the "pretty breaks" method
			 */
			pretty: () => LocalizedString
			/**
			 * Classified using a geometric progression
			 */
			geometricProgression: () => LocalizedString
			/**
			 * Classified using an arithmetic progression
			 */
			arithmeticProgression: () => LocalizedString
			/**
			 * Classified using the head/tail break method
			 */
			headTail: () => LocalizedString
			/**
			 * Classified manually
			 */
			manual: () => LocalizedString
		}
		/**
		 * Number of classes
		 */
		numberOfClasses: () => LocalizedString
		/**
		 * Mean value position
		 */
		meanPosition: () => LocalizedString
		/**
		 * Class center
		 */
		meanPositionCenter: () => LocalizedString
		/**
		 * Class boundary
		 */
		meanPositionBoundary: () => LocalizedString
		/**
		 * Amplitude
		 */
		amplitude: () => LocalizedString
		/**
		 * standard deviations
		 */
		howManyStdDev: () => LocalizedString
		/**
		 * Color scheme type
		 */
		typeScheme: () => LocalizedString
		/**
		 * Sequential
		 */
		sequential: () => LocalizedString
		/**
		 * Diverging
		 */
		diverging: () => LocalizedString
		/**
		 * Palette
		 */
		palette: () => LocalizedString
		/**
		 * Reverse palette
		 */
		reversePalette: () => LocalizedString
		/**
		 * Neutral central class
		 */
		neutralCentralClass: () => LocalizedString
		/**
		 * Central class position
		 */
		centralClassPosition: () => LocalizedString
		/**
		 * Inflexion point position
		 */
		inflexionPointPosition: () => LocalizedString
		/**
		 * Display mean
		 */
		displayMean: () => LocalizedString
		/**
		 * Display median
		 */
		displayMedian: () => LocalizedString
		/**
		 * Display standard deviation
		 */
		displayStdDev: () => LocalizedString
		/**
		 * Logarithmic scale
		 */
		logarithmicScale: () => LocalizedString
		/**
		 * Enter class limits
		 */
		breaksInput: () => LocalizedString
		/**
		 * Validate
		 */
		validate: () => LocalizedString
		/**
		 * {{One feature without data|?? features without data}}
		 */
		missingValues: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Features per class
		 */
		count: () => LocalizedString
		/**
		 * Error - The class limits entered are invalid. Please enter numerical values separated by dashes to form at least 2 classes.
		 */
		errorCustomBreaks: () => LocalizedString
		/**
		 * Lower limit
		 */
		lowerLimit: () => LocalizedString
		/**
		 * Upper limit
		 */
		upperLimit: () => LocalizedString
		/**
		 * Size (px)
		 */
		size: () => LocalizedString
	}
	Legend: {
		ContextMenu: {
			/**
			 * Edit settings...
			 */
			EditSettings: () => LocalizedString
			/**
			 * Hide
			 */
			Hide: () => LocalizedString
			/**
			 * Up
			 */
			Up: () => LocalizedString
			/**
			 * Down
			 */
			Down: () => LocalizedString
		}
		Modal: {
			/**
			 * Legend settings
			 */
			Title: () => LocalizedString
			/**
			 * Legend title
			 */
			LegendTitle: () => LocalizedString
			/**
			 * Legend subtitle
			 */
			LegendSubtitle: () => LocalizedString
			/**
			 * Legend note
			 */
			LegendNote: () => LocalizedString
			/**
			 * Title
			 */
			titleTextElement: () => LocalizedString
			/**
			 * Subtitle
			 */
			subtitleTextElement: () => LocalizedString
			/**
			 * Value labels
			 */
			labelsTextElement: () => LocalizedString
			/**
			 * Axes and labels
			 */
			axisTextElement: () => LocalizedString
			/**
			 * Note
			 */
			noteTextElement: () => LocalizedString
			/**
			 * Display a rectangle under the legend
			 */
			DisplayBackgroundRectangle: () => LocalizedString
			/**
			 * Background rectangle color
			 */
			BackgroundRectangleColor: () => LocalizedString
			/**
			 * Background rectangle fill opacity
			 */
			BackgroundRectangleOpacity: () => LocalizedString
			/**
			 * Background rectangle stroke color
			 */
			BackgroundRectangleStrokeColor: () => LocalizedString
			/**
			 * Background rectangle stroke width
			 */
			BackgroundRectangleStrokeWidth: () => LocalizedString
			/**
			 * Background rectangle stroke opacity
			 */
			BackgroundRectangleStrokeOpacity: () => LocalizedString
			/**
			 * Background rectangle fill
			 */
			BackgroundRectangleFill: () => LocalizedString
			/**
			 * Background rectangle stroke
			 */
			BackgroundRectangleStroke: () => LocalizedString
			/**
			 * Legend orientation
			 */
			LegendOrientation: () => LocalizedString
			/**
			 * Horizontal
			 */
			LegendOrientationHorizontal: () => LocalizedString
			/**
			 * Vertical
			 */
			LegendOrientationVertical: () => LocalizedString
			/**
			 * Legend layout
			 */
			LegendSymbolLayout: () => LocalizedString
			/**
			 * Vertical
			 */
			LegendSymbolLayoutVertical: () => LocalizedString
			/**
			 * Horizontal
			 */
			LegendSymbolLayoutHorizontal: () => LocalizedString
			/**
			 * Stacked
			 */
			LegendSymbolLayoutStacked: () => LocalizedString
			/**
			 * Add a value
			 */
			AddValue: () => LocalizedString
			/**
			 * Box width
			 */
			BoxWidth: () => LocalizedString
			/**
			 * Box height
			 */
			BoxHeight: () => LocalizedString
			/**
			 * Spacing between boxes
			 */
			BoxSpacing: () => LocalizedString
			/**
			 * Spacing between boxes and no data box
			 */
			BoxSpacingNoData: () => LocalizedString
			/**
			 * Label for the "no data" box
			 */
			NoDataLabel: () => LocalizedString
			/**
			 * Display a "no data" box
			 */
			NoDataBox: () => LocalizedString
			/**
			 * Box corner radius
			 */
			BoxCornerRadius: () => LocalizedString
			/**
			 * Display tick between each box
			 */
			DisplayTick: () => LocalizedString
			/**
			 * Display stroke for each box
			 */
			DisplayStroke: () => LocalizedString
			/**
			 * Box stroke width
			 */
			BoxStrokeWidth: () => LocalizedString
			/**
			 * Round values
			 */
			RoundDecimals: () => LocalizedString
			/**
			 * Font properties...
			 */
			FontProperties: () => LocalizedString
			/**
			 * Spacing between symbols
			 */
			SymbolsSpacing: () => LocalizedString
			/**
			 * Choice of values
			 */
			ChooseValues: () => LocalizedString
			/**
			 * Line length
			 */
			LineLength: () => LocalizedString
			/**
			 * Width
			 */
			Width: () => LocalizedString
			/**
			 * Height
			 */
			Height: () => LocalizedString
			/**
			 * Top part variable title
			 */
			MushroomsTopTitle: () => LocalizedString
			/**
			 * Top part variable title color
			 */
			MushroomsTopTitleColor: () => LocalizedString
			/**
			 * Bottom part variable title
			 */
			MushroomsBottomTitle: () => LocalizedString
			/**
			 * Bottom part variable title color
			 */
			MushroomsBottomTitleColor: () => LocalizedString
			/**
			 * Bar order
			 */
			BarOrder: () => LocalizedString
			/**
			 * Ascending
			 */
			BarOrderAscending: () => LocalizedString
			/**
			 * Descending
			 */
			BarOrderDescending: () => LocalizedString
			/**
			 * Same order as in the legend
			 */
			BarOrderNone: () => LocalizedString
			/**
			 * Axes and labels
			 */
			AxesAndLabels: () => LocalizedString
			/**
			 * Dot color
			 */
			DotColor: () => LocalizedString
			/**
			 * Regression line color
			 */
			RegressionLineColor: () => LocalizedString
			/**
			 * Legend content
			 */
			LegendContent: () => LocalizedString
		}
	}
	CommonTextElement: {
		/**
		 * Font size
		 */
		FontSize: () => LocalizedString
		/**
		 * Font color
		 */
		FontColor: () => LocalizedString
		/**
		 * Font family
		 */
		FontFamily: () => LocalizedString
		/**
		 * Font weight
		 */
		FontWeight: () => LocalizedString
		/**
		 * Font style
		 */
		FontStyle: () => LocalizedString
		/**
		 * Normal
		 */
		Normal: () => LocalizedString
		/**
		 * Bold
		 */
		Bold: () => LocalizedString
		/**
		 * Italic
		 */
		Italic: () => LocalizedString
		/**
		 * Underline
		 */
		Underline: () => LocalizedString
	}
}

export type Formatters = {}
